<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Android adb 模拟滑动 按键 点击事件</title>
      <link href="/2019/11/15/Android-adb-%E6%A8%A1%E6%8B%9F%E6%BB%91%E5%8A%A8-%E6%8C%89%E9%94%AE-%E7%82%B9%E5%87%BB%E4%BA%8B%E4%BB%B6.html"/>
      <url>/2019/11/15/Android-adb-%E6%A8%A1%E6%8B%9F%E6%BB%91%E5%8A%A8-%E6%8C%89%E9%94%AE-%E7%82%B9%E5%87%BB%E4%BA%8B%E4%BB%B6.html</url>
      
        <content type="html"><![CDATA[<p>模拟事件全部是通过input命令来实现的，首先看一下input命令的使用： </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">usage: input ...</span><br><span class="line"></span><br><span class="line">       input text &lt;string&gt;</span><br><span class="line">       input keyevent &lt;key code number or name&gt;</span><br><span class="line">       input tap &lt;x&gt; &lt;y&gt;</span><br><span class="line">       input swipe &lt;x1&gt; &lt;y1&gt; &lt;x2&gt; &lt;y2&gt;</span><br></pre></td></tr></table></figure><ol><li>keyevent指的是android对应的keycode，比如home键的keycode=3，back键的keycode=4.</li></ol><p>具体请查阅 &lt;android keycode详解&gt; <a href="http://blog.csdn.net/huiguixian/article/details/8550170" target="_blank" rel="noopener">http://blog.csdn.net/huiguixian/article/details/8550170</a></p><p>然后使用的话比较简单，比如想模拟home按键：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb shell input keyevent 3</span><br></pre></td></tr></table></figure><p>请查阅上述文章，根据具体keycode编辑即可。<br>2. 关于tap的话，他模拟的是touch屏幕的事件，只需给出x、y坐标即可。<br>此x、y坐标对应的是真实的屏幕分辨率，所以要根据具体手机具体看，比如你想点击屏幕(x, y) = (250, 250)位置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb shell input tap 250 250</span><br></pre></td></tr></table></figure><ol start="3"><li>关于swipe同tap是一样的，只是他是模拟滑动的事件，给出起点和终点的坐标即可。例如从屏幕(250, 250), 到屏幕(300, 300)即</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb shell input swipe 250 250 300 300</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
            <tag> 模拟点击 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql修改root密码的4种方法</title>
      <link href="/2019/11/09/Mysql%E4%BF%AE%E6%94%B9root%E5%AF%86%E7%A0%81%E7%9A%844%E7%A7%8D%E6%96%B9%E6%B3%95.html"/>
      <url>/2019/11/09/Mysql%E4%BF%AE%E6%94%B9root%E5%AF%86%E7%A0%81%E7%9A%844%E7%A7%8D%E6%96%B9%E6%B3%95.html</url>
      
        <content type="html"><![CDATA[<h4 id="1：-用SET-PASSWORD命令"><a href="#1：-用SET-PASSWORD命令" class="headerlink" title="1： 用SET PASSWORD命令"></a>1： 用SET PASSWORD命令</h4><p>首先登录MySQL。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 格式：mysql&gt;</span></span><br><span class="line"><span class="keyword">set</span> <span class="keyword">password</span> <span class="keyword">for</span> 用户名@localhost = <span class="keyword">password</span>(‘新密码’); </span><br><span class="line"><span class="comment">-- 例子：mysql&gt;</span></span><br><span class="line"><span class="keyword">set</span> <span class="keyword">password</span> <span class="keyword">for</span> root@localhost = <span class="keyword">password</span>(‘<span class="number">123</span>’);</span><br></pre></td></tr></table></figure><h4 id="2：用mysqladmin"><a href="#2：用mysqladmin" class="headerlink" title="2：用mysqladmin"></a>2：用mysqladmin</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 格式：</span></span><br><span class="line">mysqladmin -u用户名 -p旧密码 password 新密码 </span><br><span class="line"><span class="comment">-- 例子：</span></span><br><span class="line">mysqladmin -uroot -p123456 password 123</span><br></pre></td></tr></table></figure><h4 id="3：用UPDATE直接编辑user表"><a href="#3：用UPDATE直接编辑user表" class="headerlink" title="3：用UPDATE直接编辑user表"></a>3：用UPDATE直接编辑user表</h4><p>首先登录MySQL。 </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> mysql; </span><br><span class="line"><span class="keyword">update</span> <span class="keyword">user</span> <span class="keyword">set</span> <span class="keyword">password</span>=<span class="keyword">password</span>(‘<span class="number">123</span>’) <span class="keyword">where</span> <span class="keyword">user</span>=’root’ <span class="keyword">and</span> host=’localhost’; </span><br><span class="line"><span class="keyword">flush</span> <span class="keyword">privileges</span>;</span><br></pre></td></tr></table></figure><h4 id="4：在忘记root密码的时候，可以这样"><a href="#4：在忘记root密码的时候，可以这样" class="headerlink" title="4：在忘记root密码的时候，可以这样"></a>4：在忘记root密码的时候，可以这样</h4><p>以windows为例： </p><ul><li><ol><li>关闭正在运行的MySQL服务。 </li></ol></li><li><ol start="2"><li>打开DOS窗口，转到mysql\bin目录。 </li></ol></li><li><ol start="3"><li>输入mysqld –skip-grant-tables 回车。–skip-grant-tables 的意思是启动MySQL服务的时候跳过权限表认证。 </li></ol></li><li><ol start="4"><li>再开一个DOS窗口（因为刚才那个DOS窗口已经不能动了），转到mysql\bin目录。 </li></ol></li><li><ol start="5"><li>输入mysql回车，如果成功，将出现MySQL提示符 &gt;。 </li></ol></li><li><ol start="6"><li>连接权限数据库： use mysql; 。 </li></ol></li><li><ol start="6"><li>改密码：update user set password=password(“123”) where user=”root”;（别忘了最后加分号） 。 </li></ol></li><li><ol start="7"><li>刷新权限（必须步骤）：flush privileges;　。 </li></ol></li><li><ol start="8"><li>退出 quit。 </li></ol></li><li><ol start="9"><li>注销系统，再进入，使用用户名root和刚才设置的新密码123登录。</li></ol></li></ul>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PS快捷键大全</title>
      <link href="/2019/11/04/PS%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%A4%A7%E5%85%A8.html"/>
      <url>/2019/11/04/PS%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%A4%A7%E5%85%A8.html</url>
      
        <content type="html"><![CDATA[<h4 id="图层相关"><a href="#图层相关" class="headerlink" title="图层相关"></a>图层相关</h4><ul><li>Cmd + Shift +N 新建图层</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>PhpStorm修改php文件头模板</title>
      <link href="/2019/11/04/PhpStorm%E4%BF%AE%E6%94%B9php%E6%96%87%E4%BB%B6%E5%A4%B4%E6%A8%A1%E6%9D%BF.html"/>
      <url>/2019/11/04/PhpStorm%E4%BF%AE%E6%94%B9php%E6%96%87%E4%BB%B6%E5%A4%B4%E6%A8%A1%E6%9D%BF.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>phpstorm设置新建php文件时的头文件，一个帅气的头文件是不是让你码字的心情都更好了呢</p></blockquote><p><img src="/images/1903856-fc1ce89a78313055.png" alt=""></p><p><code>Editor/ File and Code Templates / includes / PHP File Header</code></p><p><img src="/images/1903856-fbf0ea6f43e00717.png" alt=""></p><p>可以在模板中使用一下变量：</p><ul><li>${FILE_NAME}:current file name</li><li>${USER}:current user system login name</li><li>${DATE}:current system date</li><li>${TIME}:current system time</li><li>${YEAR}:current year</li><li>${MONTH}:current month</li><li>${DAY}:current day of the month</li><li>${HOUR}:current hour</li><li>${MINUTE}:current minute</li><li>${PRODUCT_NAME}:current IDE name</li><li>${PROJECT_NAME}:current project name</li></ul><p>你也可以自定义变量</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#set( $MAIL = "xxx@test.com" )</span></span><br></pre></td></tr></table></figure><p>然后就可以在模板中使用${MAIL}变量了</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>PhpStorm 激活码</title>
      <link href="/2019/11/03/PhpStorm-%E6%BF%80%E6%B4%BB%E7%A0%81.html"/>
      <url>/2019/11/03/PhpStorm-%E6%BF%80%E6%B4%BB%E7%A0%81.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>PhpStorm 激活码 目前有效期到2020年9月份</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">6ZUMD7WWWU-eyJsaWNlbnNlSWQiOiI2WlVNRDdXV1dVIiwibGljZW5zZWVOYW1lIjoiSmV0cyBHcm91cCIsImFzc2lnbmVlTmFtZSI6IiIsImFzc2lnbmVlRW1haWwiOiIiLCJsaWNlbnNlUmVzdHJpY3Rpb24iOiIiLCJjaGVja0NvbmN1cnJlbnRVc2UiOmZhbHNlLCJwcm9kdWN0cyI6W3siY29kZSI6IklJIiwiZmFsbGJhY2tEYXRlIjoiMjAxOS0wOS0wMyIsInBhaWRVcFRvIjoiMjAyMC0wOS0wMiJ9LHsiY29kZSI6IkFDIiwiZmFsbGJhY2tEYXRlIjoiMjAxOS0wOS0wMyIsInBhaWRVcFRvIjoiMjAyMC0wOS0wMiJ9LHsiY29kZSI6IkRQTiIsImZhbGxiYWNrRGF0ZSI6IjIwMTktMDktMDMiLCJwYWlkVXBUbyI6IjIwMjAtMDktMDIifSx7ImNvZGUiOiJQUyIsImZhbGxiYWNrRGF0ZSI6IjIwMTktMDktMDMiLCJwYWlkVXBUbyI6IjIwMjAtMDktMDIifSx7ImNvZGUiOiJHTyIsImZhbGxiYWNrRGF0ZSI6IjIwMTktMDktMDMiLCJwYWlkVXBUbyI6IjIwMjAtMDktMDIifSx7ImNvZGUiOiJETSIsImZhbGxiYWNrRGF0ZSI6IjIwMTktMDktMDMiLCJwYWlkVXBUbyI6IjIwMjAtMDktMDIifSx7ImNvZGUiOiJDTCIsImZhbGxiYWNrRGF0ZSI6IjIwMTktMDktMDMiLCJwYWlkVXBUbyI6IjIwMjAtMDktMDIifSx7ImNvZGUiOiJSUzAiLCJmYWxsYmFja0RhdGUiOiIyMDE5LTA5LTAzIiwicGFpZFVwVG8iOiIyMDIwLTA5LTAyIn0seyJjb2RlIjoiUkMiLCJmYWxsYmFja0RhdGUiOiIyMDE5LTA5LTAzIiwicGFpZFVwVG8iOiIyMDIwLTA5LTAyIn0seyJjb2RlIjoiUkQiLCJmYWxsYmFja0RhdGUiOiIyMDE5LTA5LTAzIiwicGFpZFVwVG8iOiIyMDIwLTA5LTAyIn0seyJjb2RlIjoiUEMiLCJmYWxsYmFja0RhdGUiOiIyMDE5LTA5LTAzIiwicGFpZFVwVG8iOiIyMDIwLTA5LTAyIn0seyJjb2RlIjoiUk0iLCJmYWxsYmFja0RhdGUiOiIyMDE5LTA5LTAzIiwicGFpZFVwVG8iOiIyMDIwLTA5LTAyIn0seyJjb2RlIjoiV1MiLCJmYWxsYmFja0RhdGUiOiIyMDE5LTA5LTAzIiwicGFpZFVwVG8iOiIyMDIwLTA5LTAyIn0seyJjb2RlIjoiREIiLCJmYWxsYmFja0RhdGUiOiIyMDE5LTA5LTAzIiwicGFpZFVwVG8iOiIyMDIwLTA5LTAyIn0seyJjb2RlIjoiREMiLCJmYWxsYmFja0RhdGUiOiIyMDE5LTA5LTAzIiwicGFpZFVwVG8iOiIyMDIwLTA5LTAyIn0seyJjb2RlIjoiUlNVIiwiZmFsbGJhY2tEYXRlIjoiMjAxOS0wOS0wMyIsInBhaWRVcFRvIjoiMjAyMC0wOS0wMiJ9XSwiaGFzaCI6IjE0Mjg5NzUwLzAiLCJncmFjZVBlcmlvZERheXMiOjcsImF1dG9Qcm9sb25nYXRlZCI6ZmFsc2UsImlzQXV0b1Byb2xvbmdhdGVkIjpmYWxzZX0=-Gd8RATyTEnHcAydKuC7N1ZdeLaMP9IR+nlPyVxvLsczAUTGKxcuAYbfz/uVtepg8ey4NfJlPNS+AGcGz8x7ImkX9jEV9KElMxPu3tKSdF/WKo6JCONX7UtudYa/9EQum3banxci/qH7jejSrFZSN+YjWQiYTR0Q8gq4/a2RyQTgseZfpImY/nXkOWLwWArr/p+4ddp/bWQN4nLTW+Z4ZaQeLE96Z9viCdn62EKOcR02Hfr9Oju9VYQh1L8pGrTqNey5nUSv/LQUbVwo5qoYbBRos8l6ewkFNGsuC3vtOgGWSgkgChbDjWhW4Nkm4vDM2NFAphMsS1dgyPw3eJ3C+6A==-MIIElTCCAn2gAwIBAgIBCTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMB4XDTE4MTEwMTEyMjk0NloXDTIwMTEwMjEyMjk0NlowaDELMAkGA1UEBhMCQ1oxDjAMBgNVBAgMBU51c2xlMQ8wDQYDVQQHDAZQcmFndWUxGTAXBgNVBAoMEEpldEJyYWlucyBzLnIuby4xHTAbBgNVBAMMFHByb2QzeS1mcm9tLTIwMTgxMTAxMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxcQkq+zdxlR2mmRYBPzGbUNdMN6OaXiXzxIWtMEkrJMO/5oUfQJbLLuMSMK0QHFmaI37WShyxZcfRCidwXjot4zmNBKnlyHodDij/78TmVqFl8nOeD5+07B8VEaIu7c3E1N+e1doC6wht4I4+IEmtsPAdoaj5WCQVQbrI8KeT8M9VcBIWX7fD0fhexfg3ZRt0xqwMcXGNp3DdJHiO0rCdU+Itv7EmtnSVq9jBG1usMSFvMowR25mju2JcPFp1+I4ZI+FqgR8gyG8oiNDyNEoAbsR3lOpI7grUYSvkB/xVy/VoklPCK2h0f0GJxFjnye8NT1PAywoyl7RmiAVRE/EKwIDAQABo4GZMIGWMAkGA1UdEwQCMAAwHQYDVR0OBBYEFGEpG9oZGcfLMGNBkY7SgHiMGgTcMEgGA1UdIwRBMD+AFKOetkhnQhI2Qb1t4Lm0oFKLl/GzoRykGjAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBggkA0myxg7KDeeEwEwYDVR0lBAwwCgYIKwYBBQUHAwEwCwYDVR0PBAQDAgWgMA0GCSqGSIb3DQEBCwUAA4ICAQAF8uc+YJOHHwOFcPzmbjcxNDuGoOUIP+2h1R75Lecswb7ru2LWWSUMtXVKQzChLNPn/72W0k+oI056tgiwuG7M49LXp4zQVlQnFmWU1wwGvVhq5R63Rpjx1zjGUhcXgayu7+9zMUW596Lbomsg8qVve6euqsrFicYkIIuUu4zYPndJwfe0YkS5nY72SHnNdbPhEnN8wcB2Kz+OIG0lih3yz5EqFhld03bGp222ZQCIghCTVL6QBNadGsiN/lWLl4JdR3lJkZzlpFdiHijoVRdWeSWqM4y0t23c92HXKrgppoSV18XMxrWVdoSM3nuMHwxGhFyde05OdDtLpCv+jlWf5REAHHA201pAU6bJSZINyHDUTB+Beo28rRXSwSh3OUIvYwKNVeoBY+KwOJ7WnuTCUq1meE6GkKc4D/cXmgpOyW/1SmBz3XjVIi/zprZ0zf3qH5mkphtg6ksjKgKjmx1cXfZAAX6wcDBNaCL+Ortep1Dh8xDUbqbBVNBL4jbiL3i3xsfNiyJgaZ5sX7i8tmStEpLbPwvHcByuf59qJhV/bZOl8KqJBETCDJcY6O2aqhTUy+9x93ThKs1GKrRPePrWPluud7ttlgtRveit/pcBrnQcXOl1rHq7ByB8CFAxNotRUYL9IF5n3wJOgkPojMy6jetQA5Ogc8Sm7RG6vg1yow==</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发工具 </category>
          
          <category> PhpStorm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PhpStorm </tag>
            
            <tag> 激活码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mac安装PHP开发环境（使用homebrew)</title>
      <link href="/2019/11/02/Mac%E5%AE%89%E8%A3%85PHP%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%EF%BC%88%E4%BD%BF%E7%94%A8homebrew.html"/>
      <url>/2019/11/02/Mac%E5%AE%89%E8%A3%85PHP%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%EF%BC%88%E4%BD%BF%E7%94%A8homebrew.html</url>
      
        <content type="html"><![CDATA[<h4 id="一、安装Nginx"><a href="#一、安装Nginx" class="headerlink" title="一、安装Nginx"></a>一、安装Nginx</h4><h5 id="1-1-安装命令"><a href="#1-1-安装命令" class="headerlink" title="1.1 安装命令"></a>1.1 安装命令</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install nginx</span><br></pre></td></tr></table></figure><h5 id="1-2-设置文件权限"><a href="#1-2-设置文件权限" class="headerlink" title="1.2 设置文件权限"></a>1.2 设置文件权限</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo chown root:wheel /usr/<span class="built_in">local</span>/opt/nginx/bin/nginx</span><br><span class="line">sudo chmod u+s /usr/<span class="built_in">local</span>/opt/nginx/bin/nginx</span><br></pre></td></tr></table></figure><h5 id="1-3-设置开机自启动"><a href="#1-3-设置开机自启动" class="headerlink" title="1.3 设置开机自启动"></a>1.3 设置开机自启动</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p ~/Library/LaunchAgents</span><br><span class="line">cp /usr/<span class="built_in">local</span>/opt/nginx/homebrew.mxcl.nginx.plist ~/Library/LaunchAgents/</span><br><span class="line"><span class="comment"># 设置开机启动</span></span><br><span class="line">launchctl load -w ~/Library/LaunchAgents/homebrew.mxcl.nginx.plist</span><br><span class="line"><span class="comment"># 取消开机启动</span></span><br><span class="line">launchctl unload ~/Library/LaunchAgents/homebrew.mxcl.nginx.plist</span><br></pre></td></tr></table></figure><h5 id="1-4-Nginx常用命令"><a href="#1-4-Nginx常用命令" class="headerlink" title="1.4 Nginx常用命令"></a>1.4 Nginx常用命令</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo nginx <span class="comment">#打开nginx</span></span><br><span class="line">nginx -s reload | reopen | stop | quit <span class="comment">#重新加载配置|重启|停止|退出</span></span><br><span class="line">nginx -t <span class="comment">#测试配置是否有语法错误</span></span><br><span class="line"><span class="comment">#如果提示pid丢失的话，就用这句话</span></span><br><span class="line">nginx -c /usr/<span class="built_in">local</span>/etc/nginx/nginx.conf</span><br></pre></td></tr></table></figure><h5 id="1-5-查看信息"><a href="#1-5-查看信息" class="headerlink" title="1.5 查看信息"></a>1.5 查看信息</h5><p>点击<a href="http://localhost:8080" target="_blank" rel="noopener">http://localhost:8080</a> 查看是否安装成功</p><h4 id="二、安装PHP7-1"><a href="#二、安装PHP7-1" class="headerlink" title="二、安装PHP7.1"></a>二、安装PHP7.1</h4><h5 id="2-1-安装命令"><a href="#2-1-安装命令" class="headerlink" title="2.1 安装命令"></a>2.1 安装命令</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install php71</span><br></pre></td></tr></table></figure><h5 id="2-2-设置全局变量"><a href="#2-2-设置全局变量" class="headerlink" title="2.2 设置全局变量"></a>2.2 设置全局变量</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">'export PATH=/usr/local/bin:/usr/sbin:$PATH'</span> &gt;&gt; ~/.bash_profile</span><br><span class="line"><span class="built_in">source</span> ~/.bash_profile</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'export PATH=/usr/local/Cellar/php@7.1/7.1.33/bin:$PATH'</span> &gt;&gt; ~/.bashrc</span><br><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure><h5 id="2-3-设置开机自启动"><a href="#2-3-设置开机自启动" class="headerlink" title="2.3 设置开机自启动"></a>2.3 设置开机自启动</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p ~/Library/LaunchAgents</span><br><span class="line">cp /usr/<span class="built_in">local</span>/opt/php@7.1/homebrew.mxcl.php@7.1.plist ~/Library/LaunchAgents/</span><br><span class="line"><span class="comment"># 设置开机启动</span></span><br><span class="line">launchctl load -w ~/Library/LaunchAgents/homebrew.mxcl.php@7.1.plist</span><br><span class="line"><span class="comment"># 取消开机启动</span></span><br><span class="line">launchctl unload ~/Library/LaunchAgents/homebrew.mxcl.php@7.1.plist</span><br></pre></td></tr></table></figure><h4 id="二、安装MySql"><a href="#二、安装MySql" class="headerlink" title="二、安装MySql"></a>二、安装MySql</h4><h5 id="3-1-安装命令"><a href="#3-1-安装命令" class="headerlink" title="3.1 安装命令"></a>3.1 安装命令</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install mysql</span><br></pre></td></tr></table></figure><h5 id="3-2-设置开机自启动"><a href="#3-2-设置开机自启动" class="headerlink" title="3.2 设置开机自启动"></a>3.2 设置开机自启动</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p ~/Library/LaunchAgents</span><br><span class="line">cp /usr/<span class="built_in">local</span>/opt/php@7.1/homebrew.mxcl.mysql.plist ~/Library/LaunchAgents/</span><br><span class="line"><span class="comment"># 设置开机启动</span></span><br><span class="line">launchctl load -w ~/Library/LaunchAgents/homebrew.mxcl.mysql.plist</span><br><span class="line"><span class="comment"># 取消开机启动</span></span><br><span class="line">launchctl unload ~/Library/LaunchAgents/homebrew.mxcl.mysql.plist</span><br></pre></td></tr></table></figure><h5 id="3-3-设置root账户和密码"><a href="#3-3-设置root账户和密码" class="headerlink" title="3.3 设置root账户和密码"></a>3.3 设置root账户和密码</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">#一直跟着提示走就行。</span></span><br><span class="line">/usr/<span class="built_in">local</span>/Cellar/mysql/8.0.18/bin/mysql_secure_installation</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Mac </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 开发环境 </tag>
            
            <tag> PHP </tag>
            
            <tag> Nginx </tag>
            
            <tag> MySql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Centos7 yum安装nodejs</title>
      <link href="/2019/11/01/Centos7-yum%E5%AE%89%E8%A3%85nodejs.html"/>
      <url>/2019/11/01/Centos7-yum%E5%AE%89%E8%A3%85nodejs.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>在centos7安装nodejs，刚开始用的是网上很多人推荐的下载tar包解压配置环境变量的做法，但是发现在使用npm时经常报错，怀疑是缺少很多依赖包的原因，所以尝试用yum直接安装，于是来到官网，搜寻了下，找到如下网页：<br>Installing Node.js via package manager | Node.js<br>On RHEL, CentOS or Fedora, for Node.js v8 LTS:</p></blockquote><p>在终端执行如下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">curl --silent --location https://rpm.nodesource.com/setup_8.x | sudo bash -</span><br><span class="line"></span><br><span class="line">sudo yum -y install nodejs</span><br></pre></td></tr></table></figure><p>安装成功之后，npm工作正常，没有发现问题。</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> yum </tag>
            
            <tag> nodejs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VPS常用脚本收集</title>
      <link href="/2019/10/24/VPS%E5%B8%B8%E7%94%A8%E8%84%9A%E6%9C%AC%E6%94%B6%E9%9B%86.html"/>
      <url>/2019/10/24/VPS%E5%B8%B8%E7%94%A8%E8%84%9A%E6%9C%AC%E6%94%B6%E9%9B%86.html</url>
      
        <content type="html"><![CDATA[<h4 id="VPS基础安装脚本"><a href="#VPS基础安装脚本" class="headerlink" title="VPS基础安装脚本"></a>VPS基础安装脚本</h4><h5 id="安装列表："><a href="#安装列表：" class="headerlink" title="安装列表："></a>安装列表：</h5><ul><li>cmake</li><li>git</li><li>wget</li><li>unzip</li><li>gcc</li><li>gdb</li><li>gjj</li><li>vim</li><li>youtube_dl</li><li>screen</li><li>sshfs<h5 id="安装代码："><a href="#安装代码：" class="headerlink" title="安装代码："></a>安装代码：</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh -c <span class="string">"<span class="variable">$(curl -fsSL https://raw.githubusercontent.com/pgw1314/sh/master/install/base_install.sh)</span>"</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="宝塔面板安装"><a href="#宝塔面板安装" class="headerlink" title="宝塔面板安装"></a>宝塔面板安装</h4><h5 id="安装代码：-1"><a href="#安装代码：-1" class="headerlink" title="安装代码："></a>安装代码：</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; sh install.sh</span><br></pre></td></tr></table></figure><h4 id="性能和网速测试"><a href="#性能和网速测试" class="headerlink" title="性能和网速测试"></a>性能和网速测试</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">wget -qO- --no-check-certificate https://raw.githubusercontent.com/oooldking/script/master/superbench.sh | bash</span><br><span class="line"><span class="comment">#或</span></span><br><span class="line">curl -Lso- -no-check-certificate https://raw.githubusercontent.com/oooldking/script/master/superbench.sh | bash</span><br><span class="line"></span><br><span class="line"><span class="comment">#备用：更多国内测试节点</span></span><br><span class="line">wget -qO- --no-check-certificate https://raw.githubusercontent.com/wn789/Superspeed/master/superbench.sh | bash</span><br><span class="line"><span class="comment">#或</span></span><br><span class="line">curl -Lso- -no-check-certificate https://raw.githubusercontent.com/wn789/Superspeed/master/superbench.sh | bash</span><br><span class="line"></span><br><span class="line"><span class="comment">#备用：更多国外测试节点</span></span><br><span class="line">wget -qO- --no-check-certificate https://raw.githubusercontent.com/wn789/Superspeed/master/superbench_hw.sh | bash</span><br><span class="line"><span class="comment">#或</span></span><br><span class="line">curl -Lso- -no-check-certificate https://raw.githubusercontent.com/wn789/Superspeed/master/superbench_hw.sh | bash</span><br></pre></td></tr></table></figure><h4 id="路由回程测试"><a href="#路由回程测试" class="headerlink" title="路由回程测试"></a>路由回程测试</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -qO- https://raw.githubusercontent.com/wn789/VPS-/master/autoBestTrace.sh | bash</span><br></pre></td></tr></table></figure><h4 id="LNMP安装脚本"><a href="#LNMP安装脚本" class="headerlink" title="LNMP安装脚本"></a>LNMP安装脚本</h4><h5 id="软件版本："><a href="#软件版本：" class="headerlink" title="软件版本："></a>软件版本：</h5><ul><li>Nginx版本 1.14</li><li>MySQL版本 5.5</li><li>PHP版本 7.0<h5 id="安装代码：-2"><a href="#安装代码：-2" class="headerlink" title="安装代码："></a>安装代码：</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh -c <span class="string">"<span class="variable">$(curl -fsSL https://raw.githubusercontent.com/pgw1314/sh/master/install/lnmp_install.sh)</span>"</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="FFmpeg安装脚本"><a href="#FFmpeg安装脚本" class="headerlink" title="FFmpeg安装脚本"></a>FFmpeg安装脚本</h4><h5 id="安装代码：-3"><a href="#安装代码：-3" class="headerlink" title="安装代码："></a>安装代码：</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh -c <span class="string">"<span class="variable">$(curl -fsSL https://raw.githubusercontent.com/pgw1314/sh/master/install/ffmpeg_install.sh)</span>"</span></span><br></pre></td></tr></table></figure><h4 id="Aria2c安装脚本"><a href="#Aria2c安装脚本" class="headerlink" title="Aria2c安装脚本"></a>Aria2c安装脚本</h4><ul><li>配置文件路径：/var/local/aria2/aria2.conf</li><li>日志文件路径：/var/local/aria2/aria2.log<h5 id="安装代码：-4"><a href="#安装代码：-4" class="headerlink" title="安装代码："></a>安装代码：</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh -c <span class="string">"<span class="variable">$(curl -fsSL https://raw.githubusercontent.com/pgw1314/sh/master/install/aria2_install.sh)</span>"</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="ShadowsocksR安装脚本"><a href="#ShadowsocksR安装脚本" class="headerlink" title="ShadowsocksR安装脚本"></a>ShadowsocksR安装脚本</h4><h5 id="配置信息"><a href="#配置信息" class="headerlink" title="配置信息"></a>配置信息</h5><ul><li>端 口：15656</li><li>加密方法：chacha20</li><li>协 议：auth_sha1_v4</li><li>混 淆：http_simple<h5 id="安装代码：-5"><a href="#安装代码：-5" class="headerlink" title="安装代码："></a>安装代码：</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh -c <span class="string">"<span class="variable">$(curl -fsSL https://raw.githubusercontent.com/pgw1314/sh/master/install/shadowsocksR_install.sh)</span>"</span></span><br></pre></td></tr></table></figure><h4 id="Python3-6安装脚本"><a href="#Python3-6安装脚本" class="headerlink" title="Python3.6安装脚本"></a>Python3.6安装脚本</h4><h5 id="安装代码：-6"><a href="#安装代码：-6" class="headerlink" title="安装代码："></a>安装代码：</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh -c <span class="string">"<span class="variable">$(curl -fsSL https://raw.githubusercontent.com/pgw1314/sh/master/install/python3_install.sh)</span>"</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="MEGAcmd安装脚本"><a href="#MEGAcmd安装脚本" class="headerlink" title="MEGAcmd安装脚本"></a>MEGAcmd安装脚本</h4><h5 id="安装代码：-7"><a href="#安装代码：-7" class="headerlink" title="安装代码："></a>安装代码：</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -o mega_install.sh https://raw.githubusercontent.com/pgw1314/sh/master/install/mega_install.sh &amp;&amp; sh mega_install.sh &amp;&amp; rm -rf mega_install.sh</span><br><span class="line">`</span><br></pre></td></tr></table></figure><h5 id="卸载代码："><a href="#卸载代码：" class="headerlink" title="卸载代码："></a>卸载代码：</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -o mega_install.sh https://raw.githubusercontent.com/pgw1314/sh/master/install/mega_install.sh &amp;&amp; sh mega_install.sh uninstall &amp;&amp; rm -rf mega_install.sh</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> VPS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 脚本 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python3之configparser模块的使用方法</title>
      <link href="/2019/10/24/Python3%E4%B9%8Bconfigparser%E6%A8%A1%E5%9D%97%E7%9A%84%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95.html"/>
      <url>/2019/10/24/Python3%E4%B9%8Bconfigparser%E6%A8%A1%E5%9D%97%E7%9A%84%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95.html</url>
      
        <content type="html"><![CDATA[<h4 id="1-简介"><a href="#1-简介" class="headerlink" title="1. 简介"></a>1. 简介</h4><blockquote><p>configparser用于配置文件解析，可以解析特定格式的配置文件，多数此类配置文件名格式为XXX.ini，例如mysql的配置文件。在python3.X中<br>模块名为configparser ，在python2.X中使用的模块名为ConfigParser。</p></blockquote><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##### ini 文件示例</span></span><br><span class="line"></span><br><span class="line"><span class="section">[section1]</span>      </span><br><span class="line"><span class="attr">name</span> = wang</span><br><span class="line"><span class="attr">age</span> = <span class="number">18</span></span><br><span class="line"></span><br><span class="line"><span class="section">[section2]</span></span><br><span class="line">name:python</span><br><span class="line"><span class="attr">age</span> = <span class="number">19</span></span><br><span class="line"><span class="comment">#### 文件格式说明</span></span><br><span class="line">[XXX]  代表节点</span><br><span class="line"><span class="attr">XX</span> = XX 或者 XX : XX 代表参数</span><br></pre></td></tr></table></figure><h4 id="2-使用"><a href="#2-使用" class="headerlink" title="2. 使用"></a>2. 使用</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> configparser       <span class="comment"># 导入模块</span></span><br><span class="line">config = configparser.ConfigParser()   <span class="comment"># 创建对象</span></span><br><span class="line">config.read(<span class="string">"user.ini"</span>, encoding=<span class="string">"utf-8"</span>)  <span class="comment"># 读取配置文件，如果配置文件不存在则创建</span></span><br><span class="line"><span class="comment"># 查看</span></span><br><span class="line">secs = config.sections()  <span class="comment"># 获取所有的节点名称</span></span><br><span class="line">print(secs)</span><br><span class="line"><span class="comment"># ['section1', 'section2']</span></span><br><span class="line">options = config.options(<span class="string">'section1'</span>)  <span class="comment"># 获取指定节点的所有key</span></span><br><span class="line">print(options)</span><br><span class="line"><span class="comment"># ['name', 'age']</span></span><br><span class="line">item_list = config.items(<span class="string">'section1'</span>)  <span class="comment"># 获取指定节点的键值对</span></span><br><span class="line">print(item_list）</span><br><span class="line"><span class="comment">#[('name', 'wang'), ('age', '18')]</span></span><br><span class="line">val = config.get(<span class="string">'section1'</span>, <span class="string">'name'</span>)  <span class="comment"># 获取指定节点的指定key的value</span></span><br><span class="line">print(val)</span><br><span class="line"><span class="comment">#　wang</span></span><br><span class="line">val = config.getint(<span class="string">'section1'</span>, <span class="string">'age'</span>)  <span class="comment"># 获取节点section1的age属性，属性需要是int型，否则ValueError</span></span><br><span class="line">print(val）</span><br><span class="line"><span class="comment"># 18</span></span><br><span class="line">val = config.has_section(<span class="string">'section1'</span>)  <span class="comment"># 检查指定节点是否存在，返回True或False</span></span><br><span class="line">print(val)</span><br><span class="line"><span class="comment"># True</span></span><br><span class="line">val = config.has_option(<span class="string">'section1'</span>, <span class="string">'age'</span>)  <span class="comment"># 检查指定节点中是否存在某个key，返回True或False</span></span><br><span class="line">print(val)</span><br><span class="line"><span class="comment">#True</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 增删改</span></span><br><span class="line">config.add_section(<span class="string">"node"</span>)  <span class="comment"># 添加一个节点，节点名为node, 此时添加的节点node尚未写入文件</span></span><br><span class="line">config.write(open(<span class="string">'user.ini'</span>, <span class="string">"w"</span>))  <span class="comment"># 将添加的节点node写入配置文件</span></span><br><span class="line"></span><br><span class="line">config.remove_section(<span class="string">"node"</span>)  <span class="comment"># 删除一个节点，节点名为node, 删掉了内存中的节点node</span></span><br><span class="line">config.write(open(<span class="string">"user.ini"</span>, <span class="string">"w"</span>))  <span class="comment"># 将删除节点node后的文件内容回写到配置文件</span></span><br><span class="line"></span><br><span class="line">config.set(<span class="string">"section1"</span>, <span class="string">"k1"</span>, <span class="string">"v1"</span>)  <span class="comment"># 在已存在的节点中添加一个键值对k1 = v1 ,如果该节点不存在则报错,如果key已经存在，则修改value</span></span><br><span class="line"><span class="comment"># configparser.NoSectionError: No section: 'section'</span></span><br><span class="line">config.write(open(<span class="string">"user.ini"</span>, <span class="string">"w"</span>))</span><br></pre></td></tr></table></figure><p>原文地址：<a href="https://www.cnblogs.com/wang-yc/p/5620944.html" target="_blank" rel="noopener">https://www.cnblogs.com/wang-yc/p/5620944.html</a></p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 配置文件解析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python判断路径是文件还是文件夹、判断是否存在、获取文件大小</title>
      <link href="/2019/10/24/Python%E5%88%A4%E6%96%AD%E8%B7%AF%E5%BE%84%E6%98%AF%E6%96%87%E4%BB%B6%E8%BF%98%E6%98%AF%E6%96%87%E4%BB%B6%E5%A4%B9%E3%80%81%E5%88%A4%E6%96%AD%E6%98%AF%E5%90%A6%E5%AD%98%E5%9C%A8%E3%80%81%E8%8E%B7%E5%8F%96%E6%96%87%E4%BB%B6%E5%A4%A7%E5%B0%8F.html"/>
      <url>/2019/10/24/Python%E5%88%A4%E6%96%AD%E8%B7%AF%E5%BE%84%E6%98%AF%E6%96%87%E4%BB%B6%E8%BF%98%E6%98%AF%E6%96%87%E4%BB%B6%E5%A4%B9%E3%80%81%E5%88%A4%E6%96%AD%E6%98%AF%E5%90%A6%E5%AD%98%E5%9C%A8%E3%80%81%E8%8E%B7%E5%8F%96%E6%96%87%E4%BB%B6%E5%A4%A7%E5%B0%8F.html</url>
      
        <content type="html"><![CDATA[<h4 id="判断是文件还是文件夹"><a href="#判断是文件还是文件夹" class="headerlink" title="判断是文件还是文件夹"></a>判断是文件还是文件夹</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">if</span> os.path.isdir(path):</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"it's a directory"</span></span><br><span class="line"><span class="keyword">elif</span> os.path.isfile(path):</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"it's a normal file"</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"it's a special file(socket,FIFO,device file)"</span></span><br></pre></td></tr></table></figure><h4 id="判断文件，文件夹是否存在"><a href="#判断文件，文件夹是否存在" class="headerlink" title="判断文件，文件夹是否存在"></a>判断文件，文件夹是否存在</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.path.exists(<span class="string">'d:/assist'</span>)</span><br><span class="line"> <span class="literal">True</span></span><br><span class="line"> &gt;&gt;&gt; os.path.exists(<span class="string">'d:/assist/getTeacherList.py'</span>)</span><br><span class="line"> <span class="literal">True</span></span><br></pre></td></tr></table></figure><h4 id="获取文件大小"><a href="#获取文件大小" class="headerlink" title="获取文件大小"></a>获取文件大小</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">os.path.getsize(path)</span><br></pre></td></tr></table></figure><p>原文链接：<a href="https://blog.csdn.net/StephenHendery/article/details/79049521" target="_blank" rel="noopener">https://blog.csdn.net/StephenHendery/article/details/79049521</a></p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 文件系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python中关闭HTTPS证书</title>
      <link href="/2019/10/24/Python%E4%B8%AD%E5%85%B3%E9%97%ADHTTPS%E8%AF%81%E4%B9%A6.html"/>
      <url>/2019/10/24/Python%E4%B8%AD%E5%85%B3%E9%97%ADHTTPS%E8%AF%81%E4%B9%A6.html</url>
      
        <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> ssl</span><br><span class="line">ssl._create_default_https_context = ssl._create_unverified_context</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python中的三元表达式</title>
      <link href="/2019/10/24/Python%E4%B8%AD%E7%9A%84%E4%B8%89%E5%85%83%E8%A1%A8%E8%BE%BE%E5%BC%8F.html"/>
      <url>/2019/10/24/Python%E4%B8%AD%E7%9A%84%E4%B8%89%E5%85%83%E8%A1%A8%E8%BE%BE%E5%BC%8F.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>Python中没有像其他语言中的三元表达式，所以只能用if和else来模拟三元表达式的效果！ </p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">1</span></span><br><span class="line">b = <span class="number">2</span></span><br><span class="line">h = <span class="string">""</span></span><br><span class="line"></span><br><span class="line">h = <span class="string">"变量1"</span> <span class="keyword">if</span> a&gt;b <span class="keyword">else</span> <span class="string">"变量2"</span></span><br><span class="line"></span><br><span class="line">print(h)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 三元表达式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python中字典的使用</title>
      <link href="/2019/10/24/Python%E4%B8%AD%E5%AD%97%E5%85%B8%E7%9A%84%E4%BD%BF%E7%94%A8.html"/>
      <url>/2019/10/24/Python%E4%B8%AD%E5%AD%97%E5%85%B8%E7%9A%84%E4%BD%BF%E7%94%A8.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>Python中的字典相当于Java中的Map</p></blockquote><h4 id="声明方式："><a href="#声明方式：" class="headerlink" title="声明方式："></a>声明方式：</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 字典使用大括号来声明而且是以键值对的方式来存储数据：</span></span><br><span class="line">person=&#123;<span class="string">'name'</span>:<span class="string">'David'</span>,<span class="string">'age'</span>:<span class="number">24</span>&#125;</span><br></pre></td></tr></table></figure><h4 id="获取里面的值："><a href="#获取里面的值：" class="headerlink" title="获取里面的值："></a>获取里面的值：</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">person[<span class="string">'name'</span>]</span><br><span class="line"><span class="comment"># 字典里面的值可以是Python中的任意类型</span></span><br></pre></td></tr></table></figure><h4 id="删除字典里面的值："><a href="#删除字典里面的值：" class="headerlink" title="删除字典里面的值："></a>删除字典里面的值：</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">del</span> person[<span class="string">'name'</span>]</span><br></pre></td></tr></table></figure><h4 id="给字典添加值"><a href="#给字典添加值" class="headerlink" title="给字典添加值"></a>给字典添加值</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">person[height]=<span class="number">180</span></span><br></pre></td></tr></table></figure><h4 id="字典的遍历："><a href="#字典的遍历：" class="headerlink" title="字典的遍历："></a>字典的遍历：</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 字典中值得遍历</span></span><br><span class="line"><span class="keyword">for</span> p <span class="keyword">in</span> person:</span><br><span class="line">    print(<span class="string">'person['</span>,p,<span class="string">'] == '</span>,person[p])</span><br></pre></td></tr></table></figure><p><strong>注：p的值就是字典的key</strong></p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 字典 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python中的数组和列表</title>
      <link href="/2019/10/24/Python%E4%B8%AD%E7%9A%84%E6%95%B0%E7%BB%84%E5%92%8C%E5%88%97%E8%A1%A8.html"/>
      <url>/2019/10/24/Python%E4%B8%AD%E7%9A%84%E6%95%B0%E7%BB%84%E5%92%8C%E5%88%97%E8%A1%A8.html</url>
      
        <content type="html"><![CDATA[<p>数组==&gt;tuple ==&gt; ()<br>列表==&gt;list ==&gt;[]</p><h4 id="定义："><a href="#定义：" class="headerlink" title="定义："></a>定义：</h4><h5 id="数组："><a href="#数组：" class="headerlink" title="数组："></a>数组：</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 数组在Python中是使用小括号来定义的例如：</span></span><br><span class="line">tuple=(<span class="number">12</span>,<span class="number">43</span>,<span class="number">23</span>,<span class="number">53</span>)</span><br><span class="line"><span class="comment"># 或者不用括号也是可以的如下面的形式：</span></span><br><span class="line">tupe=<span class="number">23</span>,<span class="number">234</span>,<span class="number">54</span>,<span class="number">64</span></span><br></pre></td></tr></table></figure><h5 id="列表："><a href="#列表：" class="headerlink" title="列表："></a>列表：</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 列表在Python中是使用中括号来定义的例如：</span></span><br><span class="line">list=[<span class="number">12</span>,<span class="number">34</span>,<span class="number">23</span>,<span class="number">53</span>]</span><br></pre></td></tr></table></figure><h4 id="迭代："><a href="#迭代：" class="headerlink" title="迭代："></a>迭代：</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 两者的迭代方式是一样的，都是可以使用for循环来迭代的例如：</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> tuple:</span><br><span class="line">print(i)</span><br><span class="line">或者：</span><br><span class="line"><span class="keyword">for</span> index <span class="keyword">in</span> range(len(tuple))</span><br><span class="line">print(tuple[index])</span><br></pre></td></tr></table></figure><p><strong>注：range函数是表明取一个数字范围，如果range(5)那就表明range会输入1，2，3，4<br>len函数就是lenght的缩写代表数组或者列表的长度！</strong></p><h4 id="添加："><a href="#添加：" class="headerlink" title="添加："></a>添加：</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在列表的末尾添加</span></span><br><span class="line">list.append(要添加的值)</span><br><span class="line"><span class="comment"># 在列表的指定位置添加</span></span><br><span class="line">list.insert(位置,添加的值)</span><br></pre></td></tr></table></figure><h4 id="删除："><a href="#删除：" class="headerlink" title="删除："></a>删除：</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">list.remove(要删除的值)</span><br><span class="line"><span class="comment"># 注：只会删除第一次出现的值</span></span><br></pre></td></tr></table></figure><h4 id="索引："><a href="#索引：" class="headerlink" title="索引："></a>索引：</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 如果索引是负数的话，代表从后面开始数</span></span><br><span class="line">list.[<span class="number">-1</span>]表示列表的最后一位</span><br><span class="line"><span class="comment"># 列表的区间：</span></span><br><span class="line">list.[<span class="number">2</span>:<span class="number">5</span>]表示从第二位开始到第五位</span><br><span class="line">list.index(值)表示列表中第一次出现的值得索引</span><br><span class="line">list.count(值)表示在列表中值得出现的次数</span><br><span class="line">list.sort() 默认是从小到大</span><br><span class="line">list.sort(reverse=<span class="literal">True</span>)表示从大到小</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 数组和列表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python中的错误处理</title>
      <link href="/2019/10/24/Python%E4%B8%AD%E7%9A%84%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86.html"/>
      <url>/2019/10/24/Python%E4%B8%AD%E7%9A%84%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86.html</url>
      
        <content type="html"><![CDATA[<h4 id="格式："><a href="#格式：" class="headerlink" title="格式："></a>格式：</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">语句</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">print(e)</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">语句</span><br></pre></td></tr></table></figure><blockquote><p>说明：当try里面的错误发生时，只会执行except里面的语句，而不会执行else中的语句，如果try里面的语句顺利执行，那么就会执行else中的语句！</p></blockquote><h4 id="示例："><a href="#示例：" class="headerlink" title="示例："></a>示例：</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    file=open(<span class="string">'aaa.txt'</span>,<span class="string">'r+'</span>)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    <span class="comment">#print(e)</span></span><br><span class="line">    print(<span class="string">'文件打开错误：你要打开的文件不存在！'</span>)</span><br><span class="line">    res=input(<span class="string">'需要创建文件aaa.txt吗(y/n):'</span>)</span><br><span class="line">    <span class="keyword">if</span>(res == <span class="string">'y'</span>):</span><br><span class="line">        file=open(<span class="string">'aaa.txt'</span>,<span class="string">'w'</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    file.write(<span class="string">'这是写入的内容！！！'</span>)</span><br><span class="line">    file.close()</span><br><span class="line">    print(<span class="string">"else...."</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 错误处理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python中引用其他模块</title>
      <link href="/2019/10/24/Python%E4%B8%AD%E5%BC%95%E7%94%A8%E5%85%B6%E4%BB%96%E6%A8%A1%E5%9D%97.html"/>
      <url>/2019/10/24/Python%E4%B8%AD%E5%BC%95%E7%94%A8%E5%85%B6%E4%BB%96%E6%A8%A1%E5%9D%97.html</url>
      
        <content type="html"><![CDATA[<h4 id="格式："><a href="#格式：" class="headerlink" title="格式："></a>格式：</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">improt 模块名</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">improt time</span><br><span class="line">print(time.localtime())</span><br></pre></td></tr></table></figure><h4 id="给模块起一个别名"><a href="#给模块起一个别名" class="headerlink" title="给模块起一个别名"></a>给模块起一个别名</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">improt time <span class="keyword">as</span> t</span><br><span class="line">print(t.localtime())</span><br></pre></td></tr></table></figure><h4 id="只需要载入一两个函数"><a href="#只需要载入一两个函数" class="headerlink" title="只需要载入一两个函数"></a>只需要载入一两个函数</h4><p>格式：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> 模块名 improt 函数<span class="number">1</span>,函数<span class="number">2</span></span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> time improt time,localtime</span><br><span class="line"><span class="comment"># 可以直接调用函数，不需要再写模块名</span></span><br><span class="line">print(localtime())</span><br></pre></td></tr></table></figure><h4 id="载入模块下的所有函数"><a href="#载入模块下的所有函数" class="headerlink" title="载入模块下的所有函数"></a>载入模块下的所有函数</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">form time improt *</span><br></pre></td></tr></table></figure><h4 id="引入自己的模块"><a href="#引入自己的模块" class="headerlink" title="引入自己的模块"></a>引入自己的模块</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">improt 文件名</span><br></pre></td></tr></table></figure><p><strong>注：必须在同一同一目录,或者将模块放到下面目录中，也是可以直接引用的！<br>/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages</strong></p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 引入模块 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python正则表达式提取字符串</title>
      <link href="/2019/10/24/Python%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%8F%90%E5%8F%96%E5%AD%97%E7%AC%A6%E4%B8%B2.html"/>
      <url>/2019/10/24/Python%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%8F%90%E5%8F%96%E5%AD%97%E7%AC%A6%E4%B8%B2.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>在日常工作中经常遇见在文本中提取特定位置字符串的需求。python的正则性能好，很适合做这类字符串的提取，正则表达式的提取一般分两种情况，一种是提取在文本中提取单个位置的字符串，另一种是提取连续多个位置的字符串。日志分析会遇到这种情况。</p></blockquote><h4 id="1-单个位置的字符串提取"><a href="#1-单个位置的字符串提取" class="headerlink" title="1. 单个位置的字符串提取"></a>1. 单个位置的字符串提取</h4><p>这种情况我们可以使用(.+?)这个正则表达式来提取. 举例,一个字符串”a123b”,如果我们想提取ab之间的值123,可以使用findall配合正则表达式,这样会返回一个包含所以符合情况的list,代码如下:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">str = <span class="string">"a123b"</span></span><br><span class="line">print(re.findall(<span class="string">r"a(.+?)b"</span>,str))</span><br><span class="line"><span class="comment">#输出['123']</span></span><br></pre></td></tr></table></figure><h4 id="1-1贪婪和非贪婪匹配"><a href="#1-1贪婪和非贪婪匹配" class="headerlink" title="1.1贪婪和非贪婪匹配"></a>1.1贪婪和非贪婪匹配</h4><p>如果我们有一个字符串”a123b456b”,如果我们想匹配a和最后一个b之间的所有值而非a和第一个出现的b之间的值,可以用?来控制正则贪婪和非贪婪匹配的情况. 代码如下:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">str = <span class="string">"a123b456b"</span></span><br><span class="line"></span><br><span class="line">print(re.findall(<span class="string">r"a(.+?)b"</span>, str))</span><br><span class="line"><span class="comment">#输出['123']</span></span><br><span class="line"><span class="comment">#?控制只匹配0或1个,所以只会输出和最近的b之间的匹配情况</span></span><br><span class="line"></span><br><span class="line">print(re.findall(<span class="string">r"a(.+)b"</span>, str))</span><br><span class="line"><span class="comment">#输出['123b456']</span></span><br><span class="line"></span><br><span class="line">print(re.findall(<span class="string">r"a(.*)b"</span>, str))</span><br><span class="line"><span class="comment">#输出['123b456']</span></span><br></pre></td></tr></table></figure><h4 id="1-2多行匹配"><a href="#1-2多行匹配" class="headerlink" title="1.2多行匹配"></a>1.2多行匹配</h4><p>如果你要多行匹配，那么需要加上re.S和re.M标志. 加上re.S后, .将会匹配换行符，默认.不会匹配换行符. 代码如下:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">str = <span class="string">"a23b\na34b"</span></span><br><span class="line"></span><br><span class="line">re.findall(<span class="string">r"a(\d+)b.+a(\d+)b"</span>, str)</span><br><span class="line"><span class="comment">#输出[]</span></span><br><span class="line"><span class="comment">#因为不能处理str中间有\n换行的情况</span></span><br><span class="line"></span><br><span class="line">re.findall(<span class="string">r"a(\d+)b.+a(\d+)b"</span>, str, re.S)</span><br><span class="line"><span class="comment">#s输出[('23', '34')]</span></span><br></pre></td></tr></table></figure><p>加上re.M后,^$标志将会匹配每一行，默认^和$只会匹配第一行. 代码如下:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">str = <span class="string">"a23b\na34b"</span></span><br><span class="line"></span><br><span class="line">re.findall(<span class="string">r"^a(\d+)b"</span>, str)</span><br><span class="line"><span class="comment">#输出['23']</span></span><br><span class="line"></span><br><span class="line">re.findall(<span class="string">r"^a(\d+)b"</span>, str, re.M)</span><br><span class="line"><span class="comment">#输出['23', '34']</span></span><br></pre></td></tr></table></figure><h4 id="2-连续多个位置的字符串提取"><a href="#2-连续多个位置的字符串提取" class="headerlink" title="2. 连续多个位置的字符串提取"></a>2. 连续多个位置的字符串提取</h4><p>这种情况我们可以使用(?P<name>…)这个正则表达式来提取. 举例,如果我们有一行webserver的access日志:’192.168.0.1 25/Oct/2012:14:46:34 “GET /api HTTP/1.1” 200 44 “<a href="http://abc.com/search&quot;" target="_blank" rel="noopener">http://abc.com/search&quot;</a> “Mozilla/5.0”‘,我们想提取这行日志里面所有的内容,可以写多个(?P<name>expr)来提取,其中name可以更改为你为该位置字符串命名的变量,expr改成提取位置的正则即可. 代码如下:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">line =<span class="string">'192.168.0.1 25/Oct/2012:14:46:34 "GET /api HTTP/1.1" 200 44 "http://abc.com/search"</span></span><br><span class="line"><span class="string">"Mozilla/5.0"'</span></span><br><span class="line">reg = re.compile(<span class="string">'^(?P&lt;remote_ip&gt;[^ ]*) (?P&lt;date&gt;[^ ]*) "(?P&lt;request&gt;[^"]*)"</span></span><br><span class="line"><span class="string">(?P&lt;status&gt;[^ ]*) (?P&lt;size&gt;[^ ]*) "(?P&lt;referrer&gt;[^"]*)" "(?P&lt;user_agent&gt;[^"]*)"'</span>)</span><br><span class="line">regMatch = reg.match(line)</span><br><span class="line">linebits = regMatch.groupdict()</span><br><span class="line">print(linebits)</span><br><span class="line"><span class="keyword">for</span> k, v <span class="keyword">in</span> linebits.items() :</span><br><span class="line">    print(k+<span class="string">": "</span>+v)</span><br></pre></td></tr></table></figure><p>输出的结果为:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">status: <span class="number">200</span></span><br><span class="line">referrer:  </span><br><span class="line">request: GET /api HTTP/<span class="number">1.1</span></span><br><span class="line">user_agent: Mozilla/<span class="number">5.0</span></span><br><span class="line">date: <span class="number">25</span>/Oct/<span class="number">2012</span>:<span class="number">14</span>:<span class="number">46</span>:<span class="number">34</span>size: <span class="number">44</span></span><br><span class="line">remote_ip: <span class="number">192.168</span><span class="number">.0</span><span class="number">.1</span></span><br></pre></td></tr></table></figure><p>原文链接：<a href="https://blog.csdn.net/liao392781/article/details/80181088" target="_blank" rel="noopener">https://blog.csdn.net/liao392781/article/details/80181088</a></p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 正则表达式 </tag>
            
            <tag> 提取字符串 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python字符串去除空格</title>
      <link href="/2019/10/24/Python%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8E%BB%E9%99%A4%E7%A9%BA%E6%A0%BC.html"/>
      <url>/2019/10/24/Python%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8E%BB%E9%99%A4%E7%A9%BA%E6%A0%BC.html</url>
      
        <content type="html"><![CDATA[<h5 id="函数：strip-lstrip-rstrip"><a href="#函数：strip-lstrip-rstrip" class="headerlink" title="函数：strip()  lstrip()  rstrip()"></a>函数：strip()  lstrip()  rstrip()</h5><ul><li>作用：去除字符串中的空格或指定字符</li><li>默认用法：去除空格<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">str.strip()  ： 去除字符串两边的空格</span><br><span class="line">str.lstrip() ： 去除字符串左边的空格</span><br><span class="line">str.rstrip() ： 去除字符串右边的空格</span><br></pre></td></tr></table></figure></li></ul><p><strong>注：此处的空格包含’\n’, ‘\r’,  ‘\t’,  ‘ ‘</strong></p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 去除空格 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PyCharm为函数插入文档注释</title>
      <link href="/2019/10/24/PyCharm%E4%B8%BA%E5%87%BD%E6%95%B0%E6%8F%92%E5%85%A5%E6%96%87%E6%A1%A3%E6%B3%A8%E9%87%8A.html"/>
      <url>/2019/10/24/PyCharm%E4%B8%BA%E5%87%BD%E6%95%B0%E6%8F%92%E5%85%A5%E6%96%87%E6%A1%A3%E6%B3%A8%E9%87%8A.html</url>
      
        <content type="html"><![CDATA[<p>1、光标放在函数名上方，点击小灯泡，出现菜单<br>2、选择 input documentation string stub ，即插入文档注释<br><img src="https://img-blog.csdnimg.cn/20190121223558622.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3llemlhbmQwMQ==,size_16,color_FFFFFF,t_70" alt=""><br>3、输入函数的各参数注释，返回值注释<br><img src="https://img-blog.csdnimg.cn/20190121224002811.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3llemlhbmQwMQ==,size_16,color_FFFFFF,t_70" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 开发工具 </category>
          
          <category> PyCharm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mac </tag>
            
            <tag> PyCharm </tag>
            
            <tag> 文档注释 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mac下PyCharm快捷键大全</title>
      <link href="/2019/10/24/Mac%E4%B8%8BPyCharm%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%A4%A7%E5%85%A8.html"/>
      <url>/2019/10/24/Mac%E4%B8%8BPyCharm%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%A4%A7%E5%85%A8.html</url>
      
        <content type="html"><![CDATA[<h4 id="Mac键盘符号和修饰键说明"><a href="#Mac键盘符号和修饰键说明" class="headerlink" title="Mac键盘符号和修饰键说明"></a>Mac键盘符号和修饰键说明</h4><ul><li>⌘ Command</li><li>⇧ Shift</li><li>⌥ Option</li><li>⌃ Control</li><li>↩︎ Return/Enter</li><li>⌫ Delete</li><li>⌦ 向前删除键（Fn+Delete）</li><li>↑ 上箭头</li><li>↓ 下箭头</li><li>← 左箭头</li><li>→ 右箭头</li><li>⇞ Page Up（Fn+↑）</li><li>⇟ Page Down（Fn+↓）</li><li>Home Fn + ←</li><li>End Fn + →</li><li>⇥ 右制表符（Tab键）</li><li>⇤ 左制表符（Shift+Tab）</li><li>⎋ Escape (Esc)</li></ul><h4 id="Editing（编辑）"><a href="#Editing（编辑）" class="headerlink" title="Editing（编辑）"></a>Editing（编辑）</h4><ul><li>⌃Space 基本的代码补全（补全任何类、方法、变量）</li><li>⌃⇧Space 智能代码补全（过滤器方法列表和变量的预期类型）</li><li>⌘⇧↩ 自动结束代码，行末自动添加分号</li><li>⌘P 显示方法的参数信息</li><li>⌃J, Mid. button click 快速查看文档</li><li>⇧F1 查看外部文档（在某些代码上会触发打开浏览器显示相关文档）</li><li>⌘+鼠标放在代码上 显示代码简要信息</li><li>⌘F1 在错误或警告处显示具体描述信息</li><li>⌘N, ⌃↩, ⌃N 生成代码（getter、setter、构造函数、hashCode/equals,toString）</li><li>⌃O 覆盖方法（重写父类方法）</li><li>⌃I 实现方法（实现接口中的方法）</li><li>⌘⌥T 包围代码（使用if..else, try..catch, for, synchronized等包围选中的代码）</li><li>⌘/ 注释/取消注释与行注释</li><li>⌘⌥/ 注释/取消注释与块注释</li><li>⌥↑ 连续选中代码块</li><li>⌥↓ 减少当前选中的代码块</li><li>⌃⇧Q 显示上下文信息</li><li>⌥↩ 显示意向动作和快速修复代码</li><li>⌘⌥L 格式化代码</li><li>⌃⌥O 优化import</li><li>⌃⌥I 自动缩进线</li><li>⇥ / ⇧⇥ 缩进代码 / 反缩进代码</li><li>⌘X 剪切当前行或选定的块到剪贴板</li><li>⌘C 复制当前行或选定的块到剪贴板</li><li>⌘V 从剪贴板粘贴</li><li>⌘⇧V 从最近的缓冲区粘贴</li><li>⌘D 复制当前行或选定的块</li><li>⌘⌫ 删除当前行或选定的块的行</li><li>⌃⇧J 智能的将代码拼接成一行</li><li>⌘↩ 智能的拆分拼接的行</li><li>⇧↩ 开始新的一行</li><li>⌘⇧U 大小写切换</li><li>⌘⇧] / ⌘⇧[ 选择直到代码块结束/开始</li><li>⌥⌦ 删除到单词的末尾（⌦键为Fn+Delete）</li><li>⌥⌫ 删除到单词的开头</li><li>⌘+ / ⌘- 展开 / 折叠代码块</li><li>⌘⇧+ 展开所以代码块</li><li>⌘⇧- 折叠所有代码块</li><li>⌘W 关闭活动的编辑器选项卡</li></ul><h4 id="Search-Replace（查询-替换）"><a href="#Search-Replace（查询-替换）" class="headerlink" title="Search/Replace（查询/替换）"></a>Search/Replace（查询/替换）</h4><ul><li>Double ⇧ 查询任何东西</li><li>⌘F 文件内查找</li><li>⌘G 查找模式下，向下查找</li><li>⌘⇧G 查找模式下，向上查找</li><li>⌘R 文件内替换</li><li>⌘⇧F 全局查找（根据路径）</li><li>⌘⇧R 全局替换（根据路径）</li><li>⌘⇧S 查询结构（Ultimate Edition 版专用，需要在Keymap中设置）</li><li>⌘⇧M 替换结构（Ultimate Edition 版专用，需要在Keymap中设置）</li></ul><h4 id="Usage-Search（使用查询）"><a href="#Usage-Search（使用查询）" class="headerlink" title="Usage Search（使用查询）"></a>Usage Search（使用查询）</h4><ul><li>⌥F7 / ⌘F7 在文件中查找用法 / 在类中查找用法</li><li>⌘⇧F7 在文件中突出显示的用法</li><li>⌘⌥F7 显示用法</li><li>Compile and Run（编译和运行）</li><li>⌘F9 编译Project</li><li>⌘⇧F9 编译选择的文件、包或模块</li><li>⌃⌥R 弹出 Run 的可选择菜单</li><li>⌃⌥D 弹出 Debug 的可选择菜单</li><li>⌃R 运行</li><li>⌃D 调试</li><li>⌃⇧R, ⌃⇧D 从编辑器运行上下文环境配置</li></ul><h4 id="Debugging（调试）"><a href="#Debugging（调试）" class="headerlink" title="Debugging（调试）"></a>Debugging（调试）</h4><ul><li>F8 进入下一步，如果当前行断点是一个方法，则不进入当前方法体内</li><li>F7 进入下一步，如果当前行断点是一个方法，则进入当前方法体内，如果该方法体还有方法，则不会进入该内嵌的方法中</li><li>⇧F7 智能步入，断点所在行上有多个方法调用，会弹出进入哪个方法</li><li>⇧F8 跳出</li><li>⌥F9 运行到光标处，如果光标前有其他断点会进入到该断点</li><li>⌥F8 计算表达式（可以更改变量值使其生效）</li><li>⌘⌥R 恢复程序运行，如果该断点下面代码还有断点则停在下一个断点上</li><li>⌘F8 切换断点（若光标当前行有断点则取消断点，没有则加上断点）</li><li>⌘⇧F8 查看断点信息</li></ul><h4 id="Navigation（导航）"><a href="#Navigation（导航）" class="headerlink" title="Navigation（导航）"></a>Navigation（导航）</h4><ul><li>⌘O 查找类文件</li><li>⌘⇧O 查找所有类型文件、打开文件、打开目录，打开目录需要在输入的内容前面或后面加一个反斜杠/</li><li>⌘⌥O 前往指定的变量 / 方法</li><li>⌃← / ⌃→ 左右切换打开的编辑tab页</li><li>F12 返回到前一个工具窗口</li><li>⎋ 从工具窗口进入代码文件窗口</li><li>⇧⎋ 隐藏当前或最后一个活动的窗口，且光标进入代码文件窗口</li><li>⌘⇧F4 关闭活动run/messages/find/… tab</li><li>⌘L 在当前文件跳转到某一行的指定处</li><li>⌘E 显示最近打开的文件记录列表</li><li>⌘⌥← / ⌘⌥→ 退回 / 前进到上一个操作的地方</li><li>⌘⇧⌫ 跳转到最后一个编辑的地方</li><li>⌥F1 显示当前文件选择目标弹出层，弹出层中有很多目标可以进行选择(如在代码编辑窗口可以选择显示该文件的Finder)</li><li>⌘B / ⌘ 鼠标点击 进入光标所在的方法/变量的接口或是定义处</li><li>⌘⌥B 跳转到实现处，在某个调用的方法名上使用会跳到具体的实现处，可以跳过接口</li><li>⌥ Space, ⌘Y 快速打开光标所在方法、类的定义</li><li>⌃⇧B 跳转到类型声明处</li><li>⌘U 前往当前光标所在方法的父类的方法 / 接口定义</li><li>⌃↓ / ⌃↑ 当前光标跳转到当前文件的前一个/后一个方法名位置</li><li>⌘] / ⌘[ 移动光标到当前所在代码的花括号开始/结束位置</li><li>⌘F12 弹出当前文件结构层，可以在弹出的层上直接输入进行筛选（可用于搜索类中的方法）</li><li>⌃H 显示当前类的层次结构</li><li>⌘⇧H 显示方法层次结构</li><li>⌃⌥H 显示调用层次结构</li><li>F2 / ⇧F2 跳转到下一个/上一个突出错误或警告的位置</li><li>F4 / ⌘↓ 编辑/查看代码源</li><li>⌥ Home 显示到当前文件的导航条</li><li>F3选中文件/文件夹/代码行，添加/取消书签</li><li>⌥F3 选中文件/文件夹/代码行，使用助记符添加/取消书签</li><li>⌃0…⌃9 定位到对应数值的书签位置</li><li>⌘F3 显示所有书签</li></ul><h4 id="Refactoring（重构）"><a href="#Refactoring（重构）" class="headerlink" title="Refactoring（重构）"></a>Refactoring（重构）</h4><ul><li>F5 复制文件到指定目录</li><li>F6 移动文件到指定目录</li><li>⌘⌫ 在文件上为安全删除文件，弹出确认框</li><li>⇧F6 重命名文件</li><li>⌘F6 更改签名</li><li>⌘⌥N 一致性</li><li>⌘⌥M 将选中的代码提取为方法</li><li>⌘⌥V 提取变量</li><li>⌘⌥F 提取字段</li><li>⌘⌥C 提取常量</li><li>⌘⌥P 提取参数</li><li>VCS/Local History（版本控制/本地历史记录）</li><li>⌘K 提交代码到版本控制器</li><li>⌘T 从版本控制器更新代码</li><li>⌥⇧C 查看最近的变更记录</li><li>⌃C 快速弹出版本控制器操作面板</li><li>Live Templates（动态代码模板）</li><li>⌘⌥J 弹出模板选择窗口，将选定的代码使用动态模板包住</li><li>⌘J 插入自定义动态代码模板</li></ul><h4 id="General（通用）"><a href="#General（通用）" class="headerlink" title="General（通用）"></a>General（通用）</h4><ul><li>⌘1…⌘9 打开相应编号的工具窗口</li><li>⌘S 保存所有</li><li>⌘⌥Y 同步、刷新</li><li>⌃⌘F 切换全屏模式</li><li>⌘⇧F12 切换最大化编辑器</li><li>⌥⇧F 添加到收藏夹</li><li>⌥⇧I 检查当前文件与当前的配置文件</li><li>`§⌃, ⌃“ 快速切换当前的scheme（切换主题、代码样式等）</li><li>⌘, 打开IDEA系统设置</li><li>⌘; 打开项目结构对话框</li><li>⇧⌘A 查找动作（可设置相关选项）</li><li>⌃⇥ 编辑窗口标签和工具窗口之间切换（如果在切换的过程加按上delete，则是关闭对应选中的窗口）</li><li>Other（一些官方文档上没有体现的快捷键）</li><li>⌘⇧8 竖编辑模式</li></ul><p><strong>⚠注：⌘+J可以调出所有提供的代码补全↩即可，下面仅列举常用的几个</strong></p>]]></content>
      
      
      <categories>
          
          <category> 开发工具 </category>
          
          <category> PyCharm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mac </tag>
            
            <tag> 快捷键 </tag>
            
            <tag> PyCharm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python3中的字符串拼接</title>
      <link href="/2019/10/24/Python3%E4%B8%AD%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%8B%BC%E6%8E%A5.html"/>
      <url>/2019/10/24/Python3%E4%B8%AD%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%8B%BC%E6%8E%A5.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>Python3中常用的的字符串拼接方法</p></blockquote><h4 id="方法1：-号（a-b-c）"><a href="#方法1：-号（a-b-c）" class="headerlink" title="方法1：+号（a+b+c）"></a>方法1：+号（a+b+c）</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">2</span>]: a,b,c = <span class="string">'aaa'</span>,<span class="string">'bbb'</span>,<span class="string">'ccc'</span></span><br><span class="line">In [<span class="number">3</span>]: a + b + c</span><br><span class="line">Out[<span class="number">3</span>]: <span class="string">'aaabbbccc'</span></span><br><span class="line">In [<span class="number">4</span>]: a + <span class="string">'haha'</span> + <span class="string">'*'</span> + b + c</span><br><span class="line">Out[<span class="number">4</span>]: <span class="string">'aaahaha*bbbccc'</span></span><br></pre></td></tr></table></figure><h4 id="方法2：格式化输出（-s-相当于占位符）"><a href="#方法2：格式化输出（-s-相当于占位符）" class="headerlink" title="方法2：格式化输出（%s:相当于占位符）"></a>方法2：格式化输出（%s:相当于占位符）</h4><ul><li>%s 格式化字符串</li><li>%d 格式化整数</li><li>%f 格式化小数</li><li>%c 格式化ASCII字符</li><li>%o 格式化八进制</li><li>%x 格式化十六进制</li><li>%e 用科学计数法格式化</li><li>-  用作左对齐</li><li>+ 用在正数前面显示加号</li><li>m.n  m是显示的最小长度，当m大于格式化位数时才起作用显示m位,n是代表小数的位数。</li></ul><h5 id="转义字符"><a href="#转义字符" class="headerlink" title="转义字符:"></a>转义字符:</h5><ul><li>\n 换行</li><li>\a提示音</li><li>\b退格键</li><li>\t横向制表符</li><li>自然字符串  r’ ‘    （取消转义）</li></ul><h4 id="举例："><a href="#举例：" class="headerlink" title="举例："></a>举例：</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'%s'</span>%<span class="number">2</span></span><br><span class="line"><span class="string">'2'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'%s%s%s'</span>%(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)<span class="comment"># %s之间可以加任意字符，符号 '%s %s %s'%(1,2,3) 执行结果为：'1 2 3'</span></span><br><span class="line"><span class="string">'123'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'%d'</span>%<span class="number">5</span><span class="comment">#格式化整数</span></span><br><span class="line"><span class="string">'5'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'%f'</span>%<span class="number">1.5</span><span class="comment">#格式化小数，默认保留6位</span></span><br><span class="line"><span class="string">'1.500000'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'%.1f'</span>%<span class="number">1.5</span><span class="comment"># .1保留1位小数</span></span><br><span class="line"><span class="string">'1.5'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'%3.5f'</span>%<span class="number">1.5</span><span class="comment">#遵循后面的精度</span></span><br><span class="line"><span class="string">'1.50000'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'%+10.3f'</span>%<span class="number">1.5</span> <span class="comment">#显示‘+’（正）号</span></span><br><span class="line"><span class="string">'    +1.500'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'%c'</span>%<span class="number">65</span> <span class="comment">#格式化ASCII码</span></span><br><span class="line"><span class="string">'A'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'%c'</span>%<span class="number">97</span></span><br><span class="line"><span class="string">'a'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'%o'</span>%<span class="number">8</span> <span class="comment">#格式化8进制</span></span><br><span class="line"><span class="string">'10'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'%x'</span>%<span class="number">16</span> <span class="comment">#格式化16进制</span></span><br><span class="line"><span class="string">'10'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'%x'</span>%<span class="number">10</span></span><br><span class="line"><span class="string">'a'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'%x'</span>%<span class="number">15</span></span><br><span class="line"><span class="string">'f'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'%e'</span>%<span class="number">100</span> <span class="comment">#格式化科学计数法</span></span><br><span class="line"><span class="string">'1.000000e+02'</span></span><br></pre></td></tr></table></figure><h4 id="方法3：’’-join（）方法"><a href="#方法3：’’-join（）方法" class="headerlink" title="方法3：’’.join（）方法"></a>方法3：’’.join（）方法</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#join是用来通过 某个字符串 拼接 一个可迭代对象的每个元素---&gt;join(可迭代对象参数类型)</span></span><br><span class="line">print(<span class="string">'*'</span>.join(name))   <span class="comment">#将字符串中的每个元素都使用*号连接，执行结果：a*b*c*d*E*R*F*1*2*3，返回一个新的变量值</span></span><br><span class="line">print(<span class="string">'使用*号拼接后的name值：'</span>, name) <span class="comment">#name字符串的内容未进行更改，执行结果：abcdERF123</span></span><br><span class="line">nums = [<span class="string">'ybq'</span>, <span class="string">'lhl'</span>, <span class="string">'lsh'</span>]</span><br><span class="line">print(<span class="string">'，'</span>.join(nums))   <span class="comment">#将列表转换为字符串，每个元素之间使用逗号连接，执行结果为：ybq，lhl，lsh</span></span><br><span class="line"><span class="comment">#另一种方法将列表转换为字符串</span></span><br><span class="line"><span class="comment"># nums = ['ybq', 'lhl', 'lsh']</span></span><br><span class="line"><span class="comment"># temp = ''</span></span><br><span class="line"><span class="comment"># for i in nums:</span></span><br><span class="line"><span class="comment"># temp = temp+i+','   #列表转换为字符串，强制类型转换，执行结果为：ybq，lhl，lsh</span></span><br><span class="line"><span class="comment"># print(temp.strip(','))</span></span><br></pre></td></tr></table></figure><h4 id="方法4：format（）方法"><a href="#方法4：format（）方法" class="headerlink" title="方法4：format（）方法"></a>方法4：format（）方法</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = <span class="string">'I'</span>; b = <span class="string">'Love'</span> ;c = <span class="string">'Python'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'&#123;&#125; &#123;&#125; &#123;&#125;'</span>.format(a,b,c)</span><br><span class="line"><span class="string">'I Love Python'</span></span><br><span class="line"><span class="comment">#&#123;&#125;中可以添加位置，即索引</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'&#123;0&#125; &#123;1&#125; &#123;2&#125;'</span>.format(a,b,c)</span><br><span class="line"><span class="string">'I Love Python'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'&#123;2&#125; &#123;0&#125; &#123;1&#125;'</span>.format(a,b,c)</span><br><span class="line"><span class="string">'Python I Love'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'&#123;0[0]&#125; &#123;0[1]&#125; &#123;0[2]&#125;'</span>.format([a,b,c])<span class="comment">#当只有一个元素时，此时的format中只是一个列表[],通过索引</span></span><br><span class="line"><span class="string">'I Love Python'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'&#123;n1&#125; &#123;n2&#125; &#123;n3&#125;'</span>.format(n1=a,n2=b,n3=c)<span class="comment">#指定位置，可以随意换位置</span></span><br><span class="line"><span class="string">'I Love Python'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'&#123;n1&#125; &#123;n3&#125; &#123;n2&#125;'</span>.format(n1=a,n2=b,n3=c)</span><br><span class="line"><span class="string">'I Python Love'</span></span><br></pre></td></tr></table></figure><h4 id="了解："><a href="#了解：" class="headerlink" title="了解："></a>了解：</h4><h5 id="（1）保留小数点后两位"><a href="#（1）保留小数点后两位" class="headerlink" title="（1）保留小数点后两位"></a>（1）保留小数点后两位</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'&#123;:.2f&#125;'</span>.format(<span class="number">12.333</span>)<span class="comment">#保留小数点后两位</span></span><br><span class="line"><span class="string">'12.33</span></span><br><span class="line"><span class="string">&gt;&gt;&gt; '</span>&#123;a:<span class="number">.2</span>f&#125;<span class="string">'.format(a=12.333)</span></span><br><span class="line"><span class="string">'</span><span class="number">12.33</span><span class="string">'</span></span><br></pre></td></tr></table></figure><h5 id="（2）百分比格式："><a href="#（2）百分比格式：" class="headerlink" title="（2）百分比格式："></a>（2）百分比格式：</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'&#123;:.2%&#125;'</span>.format(<span class="number">0.333</span>)</span><br><span class="line"><span class="string">'33.30%'</span></span><br></pre></td></tr></table></figure><h5 id="（3）进制转换（进制转换的时候用-0-进制-）"><a href="#（3）进制转换（进制转换的时候用-0-进制-）" class="headerlink" title="（3）进制转换（进制转换的时候用{0:进制}）"></a>（3）进制转换（进制转换的时候用{0:进制}）</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'&#123;0:x&#125;'</span>.format(<span class="number">20</span>)<span class="comment">#转换为16进制</span></span><br><span class="line"><span class="string">'14'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'&#123;0:o&#125;'</span>.format(<span class="number">20</span>)<span class="comment">#转换为8进制</span></span><br><span class="line"><span class="string">'24'</span></span><br></pre></td></tr></table></figure><h5 id="（4）格式对齐"><a href="#（4）格式对齐" class="headerlink" title="（4）格式对齐"></a>（4）格式对齐</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'&#123;a:&lt;10&#125;'</span>.format(a=<span class="number">12.3</span>)<span class="comment">#左对齐，长度为10</span></span><br><span class="line"><span class="string">'12.3      '</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'&#123;a:&gt;10&#125;'</span>.format(a=<span class="number">12.3</span>)<span class="comment">#右对齐...</span></span><br><span class="line"><span class="string">'      12.3'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'&#123;a:^10&#125;'</span>.format(a=<span class="number">12.3</span>)<span class="comment">#两边对齐...</span></span><br><span class="line"><span class="string">'   12.3   '</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'&#123;a:0&lt;10&#125;'</span>.format(a=<span class="number">12.3</span>)<span class="comment">#数字补x (填充右边, 宽度为4)</span></span><br><span class="line"><span class="string">'12.3000000'</span></span><br></pre></td></tr></table></figure><h5 id="（5）转义和符号"><a href="#（5）转义和符号" class="headerlink" title="（5）转义和符号"></a>（5）转义和符号</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'&#123;&#123; hello&#123;0&#125; &#125;&#125;'</span>.format(<span class="string">'python'</span>  )<span class="comment">#转义&#123;和&#125;符号</span></span><br><span class="line"><span class="string">'&#123; hellopython &#125;'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f = <span class="string">'hello&#123;0&#125;'</span>.format</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f(<span class="string">' python'</span>)<span class="comment">#这里可以把format当作一个函数来看</span></span><br><span class="line"><span class="string">'hello python'</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 字符串拼接 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Atom编辑器中预览markdown</title>
      <link href="/2019/10/24/Atom%E7%BC%96%E8%BE%91%E5%99%A8%E4%B8%AD%E9%A2%84%E8%A7%88markdown.html"/>
      <url>/2019/10/24/Atom%E7%BC%96%E8%BE%91%E5%99%A8%E4%B8%AD%E9%A2%84%E8%A7%88markdown.html</url>
      
        <content type="html"><![CDATA[<h4 id="使用快捷键：Shift-Ctrl-M"><a href="#使用快捷键：Shift-Ctrl-M" class="headerlink" title="使用快捷键：Shift + Ctrl + M"></a>使用快捷键：Shift + Ctrl + M</h4><p><strong>菜单位置： Packages -&gt; Markdown Preview -&gt; Toggle Preview</strong><br><img src="https://img-blog.csdn.net/20170101230254727?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMzU1MzUyOQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><h4 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h4><p><img src="https://img-blog.csdn.net/20170101230023515?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMzU1MzUyOQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 开发工具 </category>
          
          <category> Atom </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Atom </tag>
            
            <tag> MarkDown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VIM 快捷键和简单的使用方法</title>
      <link href="/2019/10/24/VIM-%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%92%8C%E7%AE%80%E5%8D%95%E7%9A%84%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95.html"/>
      <url>/2019/10/24/VIM-%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%92%8C%E7%AE%80%E5%8D%95%E7%9A%84%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95.html</url>
      
        <content type="html"><![CDATA[<h4 id="推荐常用命令："><a href="#推荐常用命令：" class="headerlink" title="推荐常用命令："></a>推荐常用命令：</h4><ul><li>. 重复上一次的操作</li><li>*光标放在单词上直接查找该单词</li><li>u 恢复上一步的操作</li></ul><h4 id="模式切换"><a href="#模式切换" class="headerlink" title="模式切换"></a>模式切换</h4><ul><li>i进入插入模式</li><li>Esc 或&lt;C-[&gt; 退回命令模式</li><li><C-o>临时进入命令模式或插入模式</li></ul><h4 id="插入模式"><a href="#插入模式" class="headerlink" title="插入模式"></a>插入模式</h4><ul><li>a 在光标后面插入</li><li>A 在当前行的最后面插入</li><li>i 在光标当前位置插入</li></ul><h4 id="查找模式"><a href="#查找模式" class="headerlink" title="查找模式"></a>查找模式</h4><ul><li>/内容  直接查找你要的内容</li><li>n  跳转到下一个查找匹配的内容</li><li>N 跳转的上一个查找匹配的内容</li><li>*光标放在单词上直接查找该单词</li></ul><h4 id="编辑模式"><a href="#编辑模式" class="headerlink" title="编辑模式"></a>编辑模式</h4><h5 id="光标移动"><a href="#光标移动" class="headerlink" title="光标移动"></a>光标移动</h5><ul><li>j  向下移动</li><li>k 向上移动</li><li>h 向左移动</li><li>l 向右移动</li><li>n<space> 向后移动n个字符</li><li>n<Enter> 向下移动n行字符</li><li>G 移动到最后一行</li><li>nG 移动到n行</li><li>gg 移动到首行</li><li>Ctrl+f 向下翻页</li><li>Ctrl+b 向上翻页</li><li>Ctrl+u 向上翻半页</li><li>Ctrl+d 向下翻半页</li><li>f字符 将光标定位到向后查找的字符上</li><li>F字符 将光标定位到向前查找的字符上<h5 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h5></li><li>dw 先后删除一个单词</li><li>db 先前删除一个单词</li><li>dd 删除当前行</li><li>ndd 向下删除n行</li><li>d1G    删除光标所在到第一行的所有数据</li><li>dG    删除光标所在到最后一行的所有数据</li><li>d$    删除游标所在处，到该行的最后一个字符</li><li>d0    那个是数字的 0 ，删除游标所在处，到该行的最前面一个字符<h5 id="复制"><a href="#复制" class="headerlink" title="复制"></a>复制</h5></li><li>yy    复制游标所在的那一行(常用)</li><li>nyy    n 为数字。复制光标所在的向下 n 行，例如 20yy 则是复制 20 行(常用)</li><li>y1G    复制游标所在行到第一行的所有数据</li><li>yG    复制游标所在行到最后一行的所有数据</li><li>y0    复制光标所在的那个字符到该行行首的所有数据</li><li>y$    复制光标所在的那个字符到该行行尾的所有数据</li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> Vim </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Vim </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FFmpeg获得视频的缩略图</title>
      <link href="/2019/10/21/FFmpeg%E8%8E%B7%E5%BE%97%E8%A7%86%E9%A2%91%E7%9A%84%E7%BC%A9%E7%95%A5%E5%9B%BE.html"/>
      <url>/2019/10/21/FFmpeg%E8%8E%B7%E5%BE%97%E8%A7%86%E9%A2%91%E7%9A%84%E7%BC%A9%E7%95%A5%E5%9B%BE.html</url>
      
        <content type="html"><![CDATA[<p>这里简单说一下：FFmpeg是用于录制、转换和流化音频和视频的完整解决方案，一套领先的音/视频编解码类库。官方正式版ffmpeg不支持rmvb和rm格式. 不过有很多解决方法<br>FFmpeg的官方网址是 <a href="http://ffmpeg.mplayerhq.hu/" target="_blank" rel="noopener">http://ffmpeg.mplayerhq.hu/</a> 。<br>中文Wiki是 <a href="http://www.ffmpeg.com.cn/" target="_blank" rel="noopener">http://www.ffmpeg.com.cn/</a> ，资料很多。</p><p>示例1：<br>截取一张352x240尺寸大小的，格式为jpg的图片：  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i test.asf -y -f image2 -t 0.001 -s 352x240 a.jpg</span><br></pre></td></tr></table></figure><p>示例2：<br>把视频的前３０帧转换成一个Animated Gif ：  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i test.asf -vframes 30 -y -f gif a.gif</span><br></pre></td></tr></table></figure><p>示例3：这个是我需要的！<br>在视频的第8.01秒处截取 320*240 的缩略图</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i test.flv -y -f mjpeg -ss 3 -t 0.001 -s 320x240 test.jpg</span><br></pre></td></tr></table></figure><p>其中：<br>source：是原始文件的名字，可以是mov，mpeg，avi，wmv各类格式，ffmpeg基本都支持。 </p><ul><li>-s wxh: 指定视频的宽和高 </li><li>-b : 设定视频的比特率 </li><li>-aspect: 保持视频的比率。如4:3或者16:9 </li><li>-y : 如果目标文件存在时，直接覆盖原有的目标文件。 </li><li>-f : 指定转换的文件格式，这里是flv格式。（其实如果不指定文件格式，ffmpeg也会按文件的后缀名来进行转换）。<br>dest: 转换的目标文件名字，并不一定需要是flv，可以是mov，mpeg以及其他的常用格式。<br>参数说明：</li><li>-L license</li><li>-h 帮助</li><li>-fromats 显示可用的格式，编解码的，协议的</li><li>-f fmt 强迫采用格式fmt</li><li>-I filename 输入文件</li><li>-y 覆盖输出文件</li><li>-t duration 设置纪录时间 hh:mm:ss[.xxx]格式的记录时间也支持</li><li>-ss position 搜索到指定的时间 [-]hh:mm:ss[.xxx]的格式也支持</li><li>s wxh: 指定视频的宽和高</li></ul><p>原文链接：<a href="https://blog.csdn.net/wwwyuanliang10000/article/details/70799127" target="_blank" rel="noopener">https://blog.csdn.net/wwwyuanliang10000/article/details/70799127</a></p>]]></content>
      
      
      <categories>
          
          <category> FFmpeg </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> FFmpeg </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx开启目录浏览功能(autoindex)</title>
      <link href="/2019/10/21/nginx%E5%BC%80%E5%90%AF%E7%9B%AE%E5%BD%95%E6%B5%8F%E8%A7%88%E5%8A%9F%E8%83%BD-autoindex.html"/>
      <url>/2019/10/21/nginx%E5%BC%80%E5%90%AF%E7%9B%AE%E5%BD%95%E6%B5%8F%E8%A7%88%E5%8A%9F%E8%83%BD-autoindex.html</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">server&#123;</span><br><span class="line">    listen 8080;</span><br><span class="line">    server_name 192.168.1.108;</span><br><span class="line">    location / &#123;</span><br><span class="line">        root /file;</span><br><span class="line">        // 开启目录列表显示</span><br><span class="line">        autoindex on;</span><br><span class="line">        // 显示文件的大小</span><br><span class="line">        autoindex_exact_size off;</span><br><span class="line">        // 显示文件的本地时间</span><br><span class="line">        autoindex_localtime on;</span><br><span class="line">        // 显示中文乱码问题</span><br><span class="line">        charset utf-8;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux里利用grep和find查找文件内容</title>
      <link href="/2019/10/21/Linux%E9%87%8C%E5%88%A9%E7%94%A8grep%E5%92%8Cfind%E6%9F%A5%E6%89%BE%E6%96%87%E4%BB%B6%E5%86%85%E5%AE%B9.html"/>
      <url>/2019/10/21/Linux%E9%87%8C%E5%88%A9%E7%94%A8grep%E5%92%8Cfind%E6%9F%A5%E6%89%BE%E6%96%87%E4%BB%B6%E5%86%85%E5%AE%B9.html</url>
      
        <content type="html"><![CDATA[<p>从文件内容查找匹配指定字符串的行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep <span class="string">"被查找的字符串"</span> 文件名</span><br></pre></td></tr></table></figure><p>例子：在当前目录里第一级文件夹中寻找包含指定字符串的.in文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep <span class="string">"thermcontact"</span> /.<span class="keyword">in</span></span><br></pre></td></tr></table></figure><p>从文件内容查找与正则表达式匹配的行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep –e <span class="string">"正则表达式"</span> 文件名</span><br></pre></td></tr></table></figure><p>查找时不区分大小写：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep –i <span class="string">"被查找的字符串"</span> 文件名</span><br></pre></td></tr></table></figure><p>查找匹配的行数：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep -c <span class="string">"被查找的字符串"</span> 文件名</span><br></pre></td></tr></table></figure><p>从文件内容查找不匹配指定字符串的行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep –v <span class="string">"被查找的字符串"</span> 文件名</span><br></pre></td></tr></table></figure><p>从根目录开始查找所有扩展名为.log的文本文件，并找出包含”ERROR”的行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -<span class="built_in">type</span> f -name <span class="string">"*.log"</span> | xargs grep <span class="string">"ERROR"</span></span><br></pre></td></tr></table></figure><p>例子：从当前目录开始查找所有扩展名为.in的文本文件，并找出包含”thermcontact”的行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find . -name <span class="string">"*.in"</span> | xargs grep <span class="string">"thermcontact"</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>YouTube-Dl使用指南</title>
      <link href="/2019/10/20/youtube-dl%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97.html"/>
      <url>/2019/10/20/youtube-dl%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97.html</url>
      
        <content type="html"><![CDATA[<p>youtube-dl - 从YouTube或其他视频平台下载视频</p><ul><li><a href="#installation">安装</a></li><li><a href="#description">描述</a></li><li><a href="#options">选项</a></li><li><a href="#configuration">配置</a></li><li><a href="#output-template">输出模版</a></li><li><a href="#format-selection">格式化选择</a></li><li><a href="#video-selection">视频选择</a></li><li><a href="#faq">FAQ</a></li><li><a href="#developer-instructions">开发者介绍</a></li><li><a href="#embedding-youtube-dl">EMBEDDING YOUTUBE-DL</a></li><li><a href="#bugs">BUGS</a></li><li><a href="#copyright">版权</a></li></ul><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>To install it right away for all UNIX users (Linux, macOS, etc.), type:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo curl -L https://yt-dl.org/downloads/latest/youtube-dl -o /usr/<span class="built_in">local</span>/bin/youtube-dl</span><br><span class="line">sudo chmod a+rx /usr/<span class="built_in">local</span>/bin/youtube-dl</span><br></pre></td></tr></table></figure><p>If you do not have curl, you can alternatively use a recent wget:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo wget https://yt-dl.org/downloads/latest/youtube-dl -O /usr/<span class="built_in">local</span>/bin/youtube-dl</span><br><span class="line">sudo chmod a+rx /usr/<span class="built_in">local</span>/bin/youtube-dl</span><br></pre></td></tr></table></figure><p>Windows users can <a href="https://yt-dl.org/latest/youtube-dl.exe" target="_blank" rel="noopener">download an .exe file</a> and place it in any location on their <a href="https://en.wikipedia.org/wiki/PATH_%28variable%29" target="_blank" rel="noopener">PATH</a> except for <code>%SYSTEMROOT%\System32</code> (e.g. <strong>do not</strong> put in <code>C:\Windows\System32</code>).</p><p>You can also use pip:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -H pip install --upgrade youtube-dl</span><br></pre></td></tr></table></figure><p>This command will update youtube-dl if you have already installed it. See the <a href="https://pypi.python.org/pypi/youtube_dl" target="_blank" rel="noopener">pypi page</a> for more information.</p><p>macOS users can install youtube-dl with <a href="https://brew.sh/" target="_blank" rel="noopener">Homebrew</a>:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install youtube-dl</span><br></pre></td></tr></table></figure><p>Or with <a href="https://www.macports.org/" target="_blank" rel="noopener">MacPorts</a>:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo port install youtube-dl</span><br></pre></td></tr></table></figure><p>Alternatively, refer to the <a href="#developer-instructions">developer instructions</a> for how to check out and work with the git repository. For further options, including PGP signatures, see the <a href="https://ytdl-org.github.io/youtube-dl/download.html" target="_blank" rel="noopener">youtube-dl Download Page</a>.</p><h1 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h1><p><strong>youtube-dl</strong> is a command-line program to download videos from YouTube.com and a few more sites. It requires the Python interpreter, version 2.6, 2.7, or 3.2+, and it is not platform specific. It should work on your Unix box, on Windows or on macOS. It is released to the public domain, which means you can modify it, redistribute it or use it however you like.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">youtube-dl [OPTIONS] URL [URL...]</span><br></pre></td></tr></table></figure><h1 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">-h, --<span class="built_in">help</span>                       Print this <span class="built_in">help</span> text and <span class="built_in">exit</span></span><br><span class="line">--version                        Print program version and <span class="built_in">exit</span></span><br><span class="line">-U, --update                     Update this program to latest version. Make</span><br><span class="line">                                 sure that you have sufficient permissions</span><br><span class="line">                                 (run with sudo <span class="keyword">if</span> needed)</span><br><span class="line">-i, --ignore-errors              Continue on download errors, <span class="keyword">for</span> example to</span><br><span class="line">                                 skip unavailable videos <span class="keyword">in</span> a playlist</span><br><span class="line">--abort-on-error                 Abort downloading of further videos (<span class="keyword">in</span> the</span><br><span class="line">                                 playlist or the <span class="built_in">command</span> line) <span class="keyword">if</span> an error</span><br><span class="line">                                 occurs</span><br><span class="line">--dump-user-agent                Display the current browser identification</span><br><span class="line">--list-extractors                List all supported extractors</span><br><span class="line">--extractor-descriptions         Output descriptions of all supported</span><br><span class="line">                                 extractors</span><br><span class="line">--force-generic-extractor        Force extraction to use the generic</span><br><span class="line">                                 extractor</span><br><span class="line">--default-search PREFIX          Use this prefix <span class="keyword">for</span> unqualified URLs. For</span><br><span class="line">                                 example <span class="string">"gvsearch2:"</span> downloads two videos</span><br><span class="line">                                 from google videos <span class="keyword">for</span> youtube-dl <span class="string">"large</span></span><br><span class="line"><span class="string">                                 apple"</span>. Use the value <span class="string">"auto"</span> to <span class="built_in">let</span></span><br><span class="line">                                 youtube-dl guess (<span class="string">"auto_warning"</span> to emit a</span><br><span class="line">                                 warning when guessing). <span class="string">"error"</span> just throws</span><br><span class="line">                                 an error. The default value <span class="string">"fixup_error"</span></span><br><span class="line">                                 repairs broken URLs, but emits an error <span class="keyword">if</span></span><br><span class="line">                                 this is not possible instead of searching.</span><br><span class="line">--ignore-config                  Do not <span class="built_in">read</span> configuration files. When given</span><br><span class="line">                                 <span class="keyword">in</span> the global configuration file</span><br><span class="line">                                 /etc/youtube-dl.conf: Do not <span class="built_in">read</span> the user</span><br><span class="line">                                 configuration <span class="keyword">in</span> ~/.config/youtube-</span><br><span class="line">                                 dl/config (%APPDATA%/youtube-dl/config.txt</span><br><span class="line">                                 on Windows)</span><br><span class="line">--config-location PATH           Location of the configuration file; either</span><br><span class="line">                                 the path to the config or its containing</span><br><span class="line">                                 directory.</span><br><span class="line">--flat-playlist                  Do not extract the videos of a playlist,</span><br><span class="line">                                 only list them.</span><br><span class="line">--mark-watched                   Mark videos watched (YouTube only)</span><br><span class="line">--no-mark-watched                Do not mark videos watched (YouTube only)</span><br><span class="line">--no-color                       Do not emit color codes <span class="keyword">in</span> output</span><br></pre></td></tr></table></figure><h2 id="网络选项"><a href="#网络选项" class="headerlink" title="网络选项:"></a>网络选项:</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">--proxy URL                      Use the specified HTTP/HTTPS/SOCKS proxy.</span><br><span class="line">                                 To <span class="built_in">enable</span> SOCKS proxy, specify a proper</span><br><span class="line">                                 scheme. For example</span><br><span class="line">                                 socks5://127.0.0.1:1080/. Pass <span class="keyword">in</span> an empty</span><br><span class="line">                                 string (--proxy <span class="string">""</span>) <span class="keyword">for</span> direct connection</span><br><span class="line">--socket-timeout SECONDS         Time to <span class="built_in">wait</span> before giving up, <span class="keyword">in</span> seconds</span><br><span class="line">--<span class="built_in">source</span>-address IP              Client-side IP address to <span class="built_in">bind</span> to</span><br><span class="line">-4, --force-ipv4                 Make all connections via IPv4</span><br><span class="line">-6, --force-ipv6                 Make all connections via IPv6</span><br></pre></td></tr></table></figure><h2 id="地区限制"><a href="#地区限制" class="headerlink" title="地区限制:"></a>地区限制:</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">--geo-verification-proxy URL     Use this proxy to verify the IP address <span class="keyword">for</span></span><br><span class="line">                                 some geo-restricted sites. The default</span><br><span class="line">                                 proxy specified by --proxy (or none, <span class="keyword">if</span> the</span><br><span class="line">                                 option is not present) is used <span class="keyword">for</span> the</span><br><span class="line">                                 actual downloading.</span><br><span class="line">--geo-bypass                     Bypass geographic restriction via faking</span><br><span class="line">                                 X-Forwarded-For HTTP header</span><br><span class="line">--no-geo-bypass                  Do not bypass geographic restriction via</span><br><span class="line">                                 faking X-Forwarded-For HTTP header</span><br><span class="line">--geo-bypass-country CODE        Force bypass geographic restriction with</span><br><span class="line">                                 explicitly provided two-letter ISO 3166-2</span><br><span class="line">                                 country code</span><br><span class="line">--geo-bypass-ip-block IP_BLOCK   Force bypass geographic restriction with</span><br><span class="line">                                 explicitly provided IP block <span class="keyword">in</span> CIDR</span><br><span class="line">                                 notation</span><br></pre></td></tr></table></figure><h2 id="视频选择"><a href="#视频选择" class="headerlink" title="视频选择:"></a>视频选择:</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">--playlist-start NUMBER          Playlist video to start at (default is 1)</span><br><span class="line">--playlist-end NUMBER            Playlist video to end at (default is last)</span><br><span class="line">--playlist-items ITEM_SPEC       Playlist video items to download. Specify</span><br><span class="line">                                 indices of the videos <span class="keyword">in</span> the playlist</span><br><span class="line">                                 separated by commas like: <span class="string">"--playlist-items</span></span><br><span class="line"><span class="string">                                 1,2,5,8"</span> <span class="keyword">if</span> you want to download videos</span><br><span class="line">                                 indexed 1, 2, 5, 8 <span class="keyword">in</span> the playlist. You can</span><br><span class="line">                                 specify range: <span class="string">"--playlist-items</span></span><br><span class="line"><span class="string">                                 1-3,7,10-13"</span>, it will download the videos</span><br><span class="line">                                 at index 1, 2, 3, 7, 10, 11, 12 and 13.</span><br><span class="line">--match-title REGEX              Download only matching titles (regex or</span><br><span class="line">                                 caseless sub-string)</span><br><span class="line">--reject-title REGEX             Skip download <span class="keyword">for</span> matching titles (regex or</span><br><span class="line">                                 caseless sub-string)</span><br><span class="line">--max-downloads NUMBER           Abort after downloading NUMBER files</span><br><span class="line">--min-filesize SIZE              Do not download any videos smaller than</span><br><span class="line">                                 SIZE (e.g. 50k or 44.6m)</span><br><span class="line">--max-filesize SIZE              Do not download any videos larger than SIZE</span><br><span class="line">                                 (e.g. 50k or 44.6m)</span><br><span class="line">--date DATE                      Download only videos uploaded <span class="keyword">in</span> this date</span><br><span class="line">--datebefore DATE                Download only videos uploaded on or before</span><br><span class="line">                                 this date (i.e. inclusive)</span><br><span class="line">--dateafter DATE                 Download only videos uploaded on or after</span><br><span class="line">                                 this date (i.e. inclusive)</span><br><span class="line">--min-views COUNT                Do not download any videos with less than</span><br><span class="line">                                 COUNT views</span><br><span class="line">--max-views COUNT                Do not download any videos with more than</span><br><span class="line">                                 COUNT views</span><br><span class="line">--match-filter FILTER            Generic video filter. Specify any key (see</span><br><span class="line">                                 the <span class="string">"OUTPUT TEMPLATE"</span> <span class="keyword">for</span> a list of</span><br><span class="line">                                 available keys) to match <span class="keyword">if</span> the key is</span><br><span class="line">                                 present, !key to check <span class="keyword">if</span> the key is not</span><br><span class="line">                                 present, key &gt; NUMBER (like <span class="string">"comment_count</span></span><br><span class="line"><span class="string">                                 &gt; 12"</span>, also works with &gt;=, &lt;, &lt;=, !=, =) to</span><br><span class="line">                                 compare against a number, key = <span class="string">'LITERAL'</span></span><br><span class="line">                                 (like <span class="string">"uploader = 'Mike Smith'"</span>, also works</span><br><span class="line">                                 with !=) to match against a string literal</span><br><span class="line">                                 and &amp; to require multiple matches. Values</span><br><span class="line">                                 <span class="built_in">which</span> are not known are excluded unless you</span><br><span class="line">                                 put a question mark (?) after the operator.</span><br><span class="line">                                 For example, to only match videos that have</span><br><span class="line">                                 been liked more than 100 <span class="built_in">times</span> and disliked</span><br><span class="line">                                 less than 50 <span class="built_in">times</span> (or the dislike</span><br><span class="line">                                 functionality is not available at the given</span><br><span class="line">                                 service), but who also have a description,</span><br><span class="line">                                 use --match-filter <span class="string">"like_count &gt; 100 &amp;</span></span><br><span class="line"><span class="string">                                 dislike_count &lt;? 50 &amp; description"</span> .</span><br><span class="line">--no-playlist                    Download only the video, <span class="keyword">if</span> the URL refers</span><br><span class="line">                                 to a video and a playlist.</span><br><span class="line">--yes-playlist                   Download the playlist, <span class="keyword">if</span> the URL refers to</span><br><span class="line">                                 a video and a playlist.</span><br><span class="line">--age-limit YEARS                Download only videos suitable <span class="keyword">for</span> the given</span><br><span class="line">                                 age</span><br><span class="line">--download-archive FILE          Download only videos not listed <span class="keyword">in</span> the</span><br><span class="line">                                 archive file. Record the IDs of all</span><br><span class="line">                                 downloaded videos <span class="keyword">in</span> it.</span><br><span class="line">--include-ads                    Download advertisements as well</span><br><span class="line">                                 (experimental)</span><br></pre></td></tr></table></figure><h2 id="下载选项"><a href="#下载选项" class="headerlink" title="下载选项:"></a>下载选项:</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">-r, --<span class="built_in">limit</span>-rate RATE            Maximum download rate <span class="keyword">in</span> bytes per second</span><br><span class="line">                                 (e.g. 50K or 4.2M)</span><br><span class="line">-R, --retries RETRIES            Number of retries (default is 10), or</span><br><span class="line">                                 <span class="string">"infinite"</span>.</span><br><span class="line">--fragment-retries RETRIES       Number of retries <span class="keyword">for</span> a fragment (default</span><br><span class="line">                                 is 10), or <span class="string">"infinite"</span> (DASH, hlsnative and</span><br><span class="line">                                 ISM)</span><br><span class="line">--skip-unavailable-fragments     Skip unavailable fragments (DASH, hlsnative</span><br><span class="line">                                 and ISM)</span><br><span class="line">--abort-on-unavailable-fragment  Abort downloading when some fragment is not</span><br><span class="line">                                 available</span><br><span class="line">--keep-fragments                 Keep downloaded fragments on disk after</span><br><span class="line">                                 downloading is finished; fragments are</span><br><span class="line">                                 erased by default</span><br><span class="line">--buffer-size SIZE               Size of download buffer (e.g. 1024 or 16K)</span><br><span class="line">                                 (default is 1024)</span><br><span class="line">--no-resize-buffer               Do not automatically adjust the buffer</span><br><span class="line">                                 size. By default, the buffer size is</span><br><span class="line">                                 automatically resized from an initial value</span><br><span class="line">                                 of SIZE.</span><br><span class="line">--http-chunk-size SIZE           Size of a chunk <span class="keyword">for</span> chunk-based HTTP</span><br><span class="line">                                 downloading (e.g. 10485760 or 10M) (default</span><br><span class="line">                                 is disabled). May be useful <span class="keyword">for</span> bypassing</span><br><span class="line">                                 bandwidth throttling imposed by a webserver</span><br><span class="line">                                 (experimental)</span><br><span class="line">--playlist-reverse               Download playlist videos <span class="keyword">in</span> reverse order</span><br><span class="line">--playlist-random                Download playlist videos <span class="keyword">in</span> random order</span><br><span class="line">--xattr-set-filesize             Set file xattribute ytdl.filesize with</span><br><span class="line">                                 expected file size</span><br><span class="line">--hls-prefer-native              Use the native HLS downloader instead of</span><br><span class="line">                                 ffmpeg</span><br><span class="line">--hls-prefer-ffmpeg              Use ffmpeg instead of the native HLS</span><br><span class="line">                                 downloader</span><br><span class="line">--hls-use-mpegts                 Use the mpegts container <span class="keyword">for</span> HLS videos,</span><br><span class="line">                                 allowing to play the video <span class="keyword">while</span></span><br><span class="line">                                 downloading (some players may not be able</span><br><span class="line">                                 to play it)</span><br><span class="line">--external-downloader COMMAND    Use the specified external downloader.</span><br><span class="line">                                 Currently supports</span><br><span class="line">                                 aria2c,avconv,axel,curl,ffmpeg,httpie,wget</span><br><span class="line">--external-downloader-args ARGS  Give these arguments to the external</span><br><span class="line">                                 downloader</span><br></pre></td></tr></table></figure><h2 id="文件系统选项"><a href="#文件系统选项" class="headerlink" title="文件系统选项:"></a>文件系统选项:</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">-a, --batch-file FILE            File containing URLs to download (<span class="string">'-'</span> <span class="keyword">for</span></span><br><span class="line">                                 stdin), one URL per line. Lines starting</span><br><span class="line">                                 with <span class="string">'#'</span>, <span class="string">';'</span> or <span class="string">']'</span> are considered as</span><br><span class="line">                                 comments and ignored.</span><br><span class="line">--id                             Use only video ID <span class="keyword">in</span> file name</span><br><span class="line">-o, --output TEMPLATE            Output filename template, see the <span class="string">"OUTPUT</span></span><br><span class="line"><span class="string">                                 TEMPLATE"</span> <span class="keyword">for</span> all the info</span><br><span class="line">--autonumber-start NUMBER        Specify the start value <span class="keyword">for</span> %(autonumber)s</span><br><span class="line">                                 (default is 1)</span><br><span class="line">--restrict-filenames             Restrict filenames to only ASCII</span><br><span class="line">                                 characters, and avoid <span class="string">"&amp;"</span> and spaces <span class="keyword">in</span></span><br><span class="line">                                 filenames</span><br><span class="line">-w, --no-overwrites              Do not overwrite files</span><br><span class="line">-c, --<span class="built_in">continue</span>                   Force resume of partially downloaded files.</span><br><span class="line">                                 By default, youtube-dl will resume</span><br><span class="line">                                 downloads <span class="keyword">if</span> possible.</span><br><span class="line">--no-continue                    Do not resume partially downloaded files</span><br><span class="line">                                 (restart from beginning)</span><br><span class="line">--no-part                        Do not use .part files - write directly</span><br><span class="line">                                 into output file</span><br><span class="line">--no-mtime                       Do not use the Last-modified header to <span class="built_in">set</span></span><br><span class="line">                                 the file modification time</span><br><span class="line">--write-description              Write video description to a .description</span><br><span class="line">                                 file</span><br><span class="line">--write-info-json                Write video metadata to a .info.json file</span><br><span class="line">--write-annotations              Write video annotations to a</span><br><span class="line">                                 .annotations.xml file</span><br><span class="line">--load-info-json FILE            JSON file containing the video information</span><br><span class="line">                                 (created with the <span class="string">"--write-info-json"</span></span><br><span class="line">                                 option)</span><br><span class="line">--cookies FILE                   File to <span class="built_in">read</span> cookies from and dump cookie</span><br><span class="line">                                 jar <span class="keyword">in</span></span><br><span class="line">--cache-dir DIR                  Location <span class="keyword">in</span> the filesystem <span class="built_in">where</span> youtube-dl</span><br><span class="line">                                 can store some downloaded information</span><br><span class="line">                                 permanently. By default</span><br><span class="line">                                 <span class="variable">$XDG_CACHE_HOME</span>/youtube-dl or</span><br><span class="line">                                 ~/.cache/youtube-dl . At the moment, only</span><br><span class="line">                                 YouTube player files (<span class="keyword">for</span> videos with</span><br><span class="line">                                 obfuscated signatures) are cached, but that</span><br><span class="line">                                 may change.</span><br><span class="line">--no-cache-dir                   Disable filesystem caching</span><br><span class="line">--rm-cache-dir                   Delete all filesystem cache files</span><br></pre></td></tr></table></figure><h2 id="缩略图"><a href="#缩略图" class="headerlink" title="缩略图:"></a>缩略图:</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">--write-thumbnail                Write thumbnail image to disk</span><br><span class="line">--write-all-thumbnails           Write all thumbnail image formats to disk</span><br><span class="line">--list-thumbnails                Simulate and list all available thumbnail</span><br><span class="line">                                 formats</span><br></pre></td></tr></table></figure><h2 id="详细度-模拟选项"><a href="#详细度-模拟选项" class="headerlink" title="详细度/模拟选项:"></a>详细度/模拟选项:</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">-q, --quiet                      Activate quiet mode</span><br><span class="line">--no-warnings                    Ignore warnings</span><br><span class="line">-s, --simulate                   Do not download the video and <span class="keyword">do</span> not write</span><br><span class="line">                                 anything to disk</span><br><span class="line">--skip-download                  Do not download the video</span><br><span class="line">-g, --get-url                    Simulate, quiet but <span class="built_in">print</span> URL</span><br><span class="line">-e, --get-title                  Simulate, quiet but <span class="built_in">print</span> title</span><br><span class="line">--get-id                         Simulate, quiet but <span class="built_in">print</span> id</span><br><span class="line">--get-thumbnail                  Simulate, quiet but <span class="built_in">print</span> thumbnail URL</span><br><span class="line">--get-description                Simulate, quiet but <span class="built_in">print</span> video description</span><br><span class="line">--get-duration                   Simulate, quiet but <span class="built_in">print</span> video length</span><br><span class="line">--get-filename                   Simulate, quiet but <span class="built_in">print</span> output filename</span><br><span class="line">--get-format                     Simulate, quiet but <span class="built_in">print</span> output format</span><br><span class="line">-j, --dump-json                  Simulate, quiet but <span class="built_in">print</span> JSON information.</span><br><span class="line">                                 See the <span class="string">"OUTPUT TEMPLATE"</span> <span class="keyword">for</span> a description</span><br><span class="line">                                 of available keys.</span><br><span class="line">-J, --dump-single-json           Simulate, quiet but <span class="built_in">print</span> JSON information</span><br><span class="line">                                 <span class="keyword">for</span> each <span class="built_in">command</span>-line argument. If the URL</span><br><span class="line">                                 refers to a playlist, dump the whole</span><br><span class="line">                                 playlist information <span class="keyword">in</span> a single line.</span><br><span class="line">--<span class="built_in">print</span>-json                     Be quiet and <span class="built_in">print</span> the video information as</span><br><span class="line">                                 JSON (video is still being downloaded).</span><br><span class="line">--newline                        Output progress bar as new lines</span><br><span class="line">--no-progress                    Do not <span class="built_in">print</span> progress bar</span><br><span class="line">--console-title                  Display progress <span class="keyword">in</span> console titlebar</span><br><span class="line">-v, --verbose                    Print various debugging information</span><br><span class="line">--dump-pages                     Print downloaded pages encoded using base64</span><br><span class="line">                                 to debug problems (very verbose)</span><br><span class="line">--write-pages                    Write downloaded intermediary pages to</span><br><span class="line">                                 files <span class="keyword">in</span> the current directory to debug</span><br><span class="line">                                 problems</span><br><span class="line">--<span class="built_in">print</span>-traffic                  Display sent and <span class="built_in">read</span> HTTP traffic</span><br><span class="line">-C, --call-home                  Contact the youtube-dl server <span class="keyword">for</span> debugging</span><br><span class="line">--no-call-home                   Do NOT contact the youtube-dl server <span class="keyword">for</span></span><br><span class="line">                                 debugging</span><br></pre></td></tr></table></figure><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法:"></a>解决方法:</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">--encoding ENCODING              Force the specified encoding (experimental)</span><br><span class="line">--no-check-certificate           Suppress HTTPS certificate validation</span><br><span class="line">--prefer-insecure                Use an unencrypted connection to retrieve</span><br><span class="line">                                 information about the video. (Currently</span><br><span class="line">                                 supported only <span class="keyword">for</span> YouTube)</span><br><span class="line">--user-agent UA                  Specify a custom user agent</span><br><span class="line">--referer URL                    Specify a custom referer, use <span class="keyword">if</span> the video</span><br><span class="line">                                 access is restricted to one domain</span><br><span class="line">--add-header FIELD:VALUE         Specify a custom HTTP header and its value,</span><br><span class="line">                                 separated by a colon <span class="string">':'</span>. You can use this</span><br><span class="line">                                 option multiple <span class="built_in">times</span></span><br><span class="line">--bidi-workaround                Work around terminals that lack</span><br><span class="line">                                 bidirectional text support. Requires bidiv</span><br><span class="line">                                 or fribidi executable <span class="keyword">in</span> PATH</span><br><span class="line">--sleep-interval SECONDS         Number of seconds to sleep before each</span><br><span class="line">                                 download when used alone or a lower bound</span><br><span class="line">                                 of a range <span class="keyword">for</span> randomized sleep before each</span><br><span class="line">                                 download (minimum possible number of</span><br><span class="line">                                 seconds to sleep) when used along with</span><br><span class="line">                                 --max-sleep-interval.</span><br><span class="line">--max-sleep-interval SECONDS     Upper bound of a range <span class="keyword">for</span> randomized sleep</span><br><span class="line">                                 before each download (maximum possible</span><br><span class="line">                                 number of seconds to sleep). Must only be</span><br><span class="line">                                 used along with --min-sleep-interval.</span><br></pre></td></tr></table></figure><h2 id="视频格式选项"><a href="#视频格式选项" class="headerlink" title="视频格式选项:"></a>视频格式选项:</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">-f, --format FORMAT              Video format code, see the <span class="string">"FORMAT</span></span><br><span class="line"><span class="string">                                 SELECTION"</span> <span class="keyword">for</span> all the info</span><br><span class="line">--all-formats                    Download all available video formats</span><br><span class="line">--prefer-free-formats            Prefer free video formats unless a specific</span><br><span class="line">                                 one is requested</span><br><span class="line">-F, --list-formats               List all available formats of requested</span><br><span class="line">                                 videos</span><br><span class="line">--youtube-skip-dash-manifest     Do not download the DASH manifests and</span><br><span class="line">                                 related data on YouTube videos</span><br><span class="line">--merge-output-format FORMAT     If a merge is required (e.g.</span><br><span class="line">                                 bestvideo+bestaudio), output to given</span><br><span class="line">                                 container format. One of mkv, mp4, ogg,</span><br><span class="line">                                 webm, flv. Ignored <span class="keyword">if</span> no merge is required</span><br></pre></td></tr></table></figure><h2 id="字幕选项"><a href="#字幕选项" class="headerlink" title="字幕选项:"></a>字幕选项:</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">--write-sub                      Write subtitle file</span><br><span class="line">--write-auto-sub                 Write automatically generated subtitle file</span><br><span class="line">                                 (YouTube only)</span><br><span class="line">--all-subs                       Download all the available subtitles of the</span><br><span class="line">                                 video</span><br><span class="line">--list-subs                      List all available subtitles <span class="keyword">for</span> the video</span><br><span class="line">--sub-format FORMAT              Subtitle format, accepts formats</span><br><span class="line">                                 preference, <span class="keyword">for</span> example: <span class="string">"srt"</span> or</span><br><span class="line">                                 <span class="string">"ass/srt/best"</span></span><br><span class="line">--sub-lang LANGS                 Languages of the subtitles to download</span><br><span class="line">                                 (optional) separated by commas, use --list-</span><br><span class="line">                                 subs <span class="keyword">for</span> available language tags</span><br></pre></td></tr></table></figure><h2 id="身份验证选项"><a href="#身份验证选项" class="headerlink" title="身份验证选项:"></a>身份验证选项:</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-u, --username USERNAME          Login with this account ID</span><br><span class="line">-p, --password PASSWORD          Account password. If this option is left</span><br><span class="line">                                 out, youtube-dl will ask interactively.</span><br><span class="line">-2, --twofactor TWOFACTOR        Two-factor authentication code</span><br><span class="line">-n, --netrc                      Use .netrc authentication data</span><br><span class="line">--video-password PASSWORD        Video password (vimeo, smotri, youku)</span><br></pre></td></tr></table></figure><h2 id="Adobe-Pass选项"><a href="#Adobe-Pass选项" class="headerlink" title="Adobe Pass选项:"></a>Adobe Pass选项:</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">--ap-mso MSO                     Adobe Pass multiple-system operator (TV</span><br><span class="line">                                 provider) identifier, use --ap-list-mso <span class="keyword">for</span></span><br><span class="line">                                 a list of available MSOs</span><br><span class="line">--ap-username USERNAME           Multiple-system operator account login</span><br><span class="line">--ap-password PASSWORD           Multiple-system operator account password.</span><br><span class="line">                                 If this option is left out, youtube-dl will</span><br><span class="line">                                 ask interactively.</span><br><span class="line">--ap-list-mso                    List all supported multiple-system</span><br><span class="line">                                 operators</span><br></pre></td></tr></table></figure><h2 id="后处理选项"><a href="#后处理选项" class="headerlink" title="后处理选项:"></a>后处理选项:</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">-x, --extract-audio              Convert video files to audio-only files</span><br><span class="line">                                 (requires ffmpeg or avconv and ffprobe or</span><br><span class="line">                                 avprobe)</span><br><span class="line">--audio-format FORMAT            Specify audio format: <span class="string">"best"</span>, <span class="string">"aac"</span>,</span><br><span class="line">                                 <span class="string">"flac"</span>, <span class="string">"mp3"</span>, <span class="string">"m4a"</span>, <span class="string">"opus"</span>, <span class="string">"vorbis"</span>, or</span><br><span class="line">                                 <span class="string">"wav"</span>; <span class="string">"best"</span> by default; No effect without</span><br><span class="line">                                 -x</span><br><span class="line">--audio-quality QUALITY          Specify ffmpeg/avconv audio quality, insert</span><br><span class="line">                                 a value between 0 (better) and 9 (worse)</span><br><span class="line">                                 <span class="keyword">for</span> VBR or a specific bitrate like 128K</span><br><span class="line">                                 (default 5)</span><br><span class="line">--recode-video FORMAT            Encode the video to another format <span class="keyword">if</span></span><br><span class="line">                                 necessary (currently supported:</span><br><span class="line">                                 mp4|flv|ogg|webm|mkv|avi)</span><br><span class="line">--postprocessor-args ARGS        Give these arguments to the postprocessor</span><br><span class="line">-k, --keep-video                 Keep the video file on disk after the post-</span><br><span class="line">                                 processing; the video is erased by default</span><br><span class="line">--no-post-overwrites             Do not overwrite post-processed files; the</span><br><span class="line">                                 post-processed files are overwritten by</span><br><span class="line">                                 default</span><br><span class="line">--embed-subs                     Embed subtitles <span class="keyword">in</span> the video (only <span class="keyword">for</span> mp4,</span><br><span class="line">                                 webm and mkv videos)</span><br><span class="line">--embed-thumbnail                Embed thumbnail <span class="keyword">in</span> the audio as cover art</span><br><span class="line">--add-metadata                   Write metadata to the video file</span><br><span class="line">--metadata-from-title FORMAT     Parse additional metadata like song title /</span><br><span class="line">                                 artist from the video title. The format</span><br><span class="line">                                 syntax is the same as --output. Regular</span><br><span class="line">                                 expression with named capture groups may</span><br><span class="line">                                 also be used. The parsed parameters replace</span><br><span class="line">                                 existing values. Example: --metadata-from-</span><br><span class="line">                                 title <span class="string">"%(artist)s - %(title)s"</span> matches a</span><br><span class="line">                                 title like <span class="string">"Coldplay - Paradise"</span>. Example</span><br><span class="line">                                 (regex): --metadata-from-title</span><br><span class="line">                                 <span class="string">"(?P&lt;artist&gt;.+?) - (?P&lt;title&gt;.+)"</span></span><br><span class="line">--xattrs                         Write metadata to the video file<span class="string">'s xattrs</span></span><br><span class="line"><span class="string">                                 (using dublin core and xdg standards)</span></span><br><span class="line"><span class="string">--fixup POLICY                   Automatically correct known faults of the</span></span><br><span class="line"><span class="string">                                 file. One of never (do nothing), warn (only</span></span><br><span class="line"><span class="string">                                 emit a warning), detect_or_warn (the</span></span><br><span class="line"><span class="string">                                 default; fix file if we can, warn</span></span><br><span class="line"><span class="string">                                 otherwise)</span></span><br><span class="line"><span class="string">--prefer-avconv                  Prefer avconv over ffmpeg for running the</span></span><br><span class="line"><span class="string">                                 postprocessors</span></span><br><span class="line"><span class="string">--prefer-ffmpeg                  Prefer ffmpeg over avconv for running the</span></span><br><span class="line"><span class="string">                                 postprocessors (default)</span></span><br><span class="line"><span class="string">--ffmpeg-location PATH           Location of the ffmpeg/avconv binary;</span></span><br><span class="line"><span class="string">                                 either the path to the binary or its</span></span><br><span class="line"><span class="string">                                 containing directory.</span></span><br><span class="line"><span class="string">--exec CMD                       Execute a command on the file after</span></span><br><span class="line"><span class="string">                                 downloading, similar to find'</span>s -<span class="built_in">exec</span></span><br><span class="line">                                 syntax. Example: --<span class="built_in">exec</span> <span class="string">'adb push &#123;&#125;</span></span><br><span class="line"><span class="string">                                 /sdcard/Music/ &amp;&amp; rm &#123;&#125;'</span></span><br><span class="line">--convert-subs FORMAT            Convert the subtitles to other format</span><br><span class="line">                                 (currently supported: srt|ass|vtt|lrc)</span><br></pre></td></tr></table></figure><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><p>You can configure youtube-dl by placing any supported command line option to a configuration file. On Linux and macOS, the system wide configuration file is located at <code>/etc/youtube-dl.conf</code> and the user wide configuration file at <code>~/.config/youtube-dl/config</code>. On Windows, the user wide configuration file locations are <code>%APPDATA%\youtube-dl\config.txt</code> or <code>C:\Users\&lt;user name&gt;\youtube-dl.conf</code>. Note that by default configuration file may not exist so you may need to create it yourself.</p><p>For example, with the following configuration file youtube-dl will always extract the audio, not copy the mtime, use a proxy and save all videos under <code>Movies</code> directory in your home directory:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Lines starting with # are comments</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Always extract audio</span></span><br><span class="line">-x</span><br><span class="line"></span><br><span class="line"><span class="comment"># Do not copy the mtime</span></span><br><span class="line">--no-mtime</span><br><span class="line"></span><br><span class="line"><span class="comment"># Use this proxy</span></span><br><span class="line">--proxy 127.0.0.1:3128</span><br><span class="line"></span><br><span class="line"><span class="comment"># Save all videos under Movies directory in your home directory</span></span><br><span class="line">-o ~/Movies/%(title)s.%(ext)s</span><br></pre></td></tr></table></figure><p>Note that options in configuration file are just the same options aka switches used in regular command line calls thus there <strong>must be no whitespace</strong> after <code>-</code> or <code>--</code>, e.g. <code>-o</code> or <code>--proxy</code> but not <code>- o</code> or <code>-- proxy</code>.</p><p>You can use <code>--ignore-config</code> if you want to disable the configuration file for a particular youtube-dl run.</p><p>You can also use <code>--config-location</code> if you want to use custom configuration file for a particular youtube-dl run.</p><h3 id="用-netrc文件来实现身份验证"><a href="#用-netrc文件来实现身份验证" class="headerlink" title="用.netrc文件来实现身份验证"></a>用.netrc文件来实现身份验证</h3><p>You may also want to configure automatic credentials storage for extractors that support authentication (by providing login and password with <code>--username</code> and <code>--password</code>) in order not to pass credentials as command line arguments on every youtube-dl execution and prevent tracking plain text passwords in the shell command history. You can achieve this using a <a href="https://stackoverflow.com/tags/.netrc/info" target="_blank" rel="noopener"><code>.netrc</code> file</a> on a per extractor basis. For that you will need to create a <code>.netrc</code> file in your <code>$HOME</code> and restrict permissions to read/write by only you:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">touch <span class="variable">$HOME</span>/.netrc</span><br><span class="line">chmod a-rwx,u+rw <span class="variable">$HOME</span>/.netrc</span><br></pre></td></tr></table></figure><p>After that you can add credentials for an extractor in the following format, where <em>extractor</em> is the name of the extractor in lowercase:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">machine &lt;extractor&gt; login &lt;login&gt; password &lt;password&gt;</span><br></pre></td></tr></table></figure><p>For example:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">machine youtube login myaccount@gmail.com password my_youtube_password</span><br><span class="line">machine twitch login my_twitch_account_name password my_twitch_password</span><br></pre></td></tr></table></figure><p>To activate authentication with the <code>.netrc</code> file you should pass <code>--netrc</code> to youtube-dl or place it in the <a href="#configuration">configuration file</a>.</p><p>On Windows you may also need to setup the <code>%HOME%</code> environment variable manually. For example:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> HOME=%USERPROFILE%</span><br></pre></td></tr></table></figure><h1 id="输出模版"><a href="#输出模版" class="headerlink" title="输出模版"></a>输出模版</h1><p>The <code>-o</code> option allows users to indicate a template for the output file names.</p><p><strong>tl;dr:</strong> <a href="#output-template-examples">navigate me to examples</a>.</p><p>The basic usage is not to set any template arguments when downloading a single file, like in <code>youtube-dl -o funny_video.flv &quot;https://some/video&quot;</code>. However, it may contain special sequences that will be replaced when downloading each video. The special sequences may be formatted according to <a href="https://docs.python.org/2/library/stdtypes.html#string-formatting" target="_blank" rel="noopener">python string formatting operations</a>. For example, <code>%(NAME)s</code> or <code>%(NAME)05d</code>. To clarify, that is a percent symbol followed by a name in parentheses, followed by formatting operations. Allowed names along with sequence type are:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">- `id` (string): Video identifier</span><br><span class="line">- `title` (string): Video title</span><br><span class="line">- `url` (string): Video URL</span><br><span class="line">- `ext` (string): Video filename extension</span><br><span class="line">- `alt_title` (string): A secondary title of the video</span><br><span class="line">- `display_id` (string): An alternative identifier <span class="keyword">for</span> the video</span><br><span class="line">- `uploader` (string): Full name of the video uploader</span><br><span class="line">- `license` (string): License name the video is licensed under</span><br><span class="line">- `creator` (string): The creator of the video</span><br><span class="line">- `release_date` (string): The date (YYYYMMDD) when the video was released</span><br><span class="line">- `timestamp` (numeric): UNIX timestamp of the moment the video became available</span><br><span class="line">- `upload_date` (string): Video upload date (YYYYMMDD)</span><br><span class="line">- `uploader_id` (string): Nickname or id of the video uploader</span><br><span class="line">- `channel` (string): Full name of the channel the video is uploaded on</span><br><span class="line">- `channel_id` (string): Id of the channel</span><br><span class="line">- `location` (string): Physical location <span class="built_in">where</span> the video was filmed</span><br><span class="line">- `duration` (numeric): Length of the video <span class="keyword">in</span> seconds</span><br><span class="line">- `view_count` (numeric): How many users have watched the video on the platform</span><br><span class="line">- `like_count` (numeric): Number of positive ratings of the video</span><br><span class="line">- `dislike_count` (numeric): Number of negative ratings of the video</span><br><span class="line">- `repost_count` (numeric): Number of reposts of the video</span><br><span class="line">- `average_rating` (numeric): Average rating give by users, the scale used depends on the webpage</span><br><span class="line">- `comment_count` (numeric): Number of comments on the video</span><br><span class="line">- `age_limit` (numeric): Age restriction <span class="keyword">for</span> the video (years)</span><br><span class="line">- `is_live` (boolean): Whether this video is a live stream or a fixed-length video</span><br><span class="line">- `start_time` (numeric): Time <span class="keyword">in</span> seconds <span class="built_in">where</span> the reproduction should start, as specified <span class="keyword">in</span> the URL</span><br><span class="line">- `end_time` (numeric): Time <span class="keyword">in</span> seconds <span class="built_in">where</span> the reproduction should end, as specified <span class="keyword">in</span> the URL</span><br><span class="line">- `format` (string): A human-readable description of the format </span><br><span class="line">- `format_id` (string): Format code specified by `--format`</span><br><span class="line">- `format_note` (string): Additional info about the format</span><br><span class="line">- `width` (numeric): Width of the video</span><br><span class="line">- `height` (numeric): Height of the video</span><br><span class="line">- `resolution` (string): Textual description of width and height</span><br><span class="line">- `tbr` (numeric): Average bitrate of audio and video <span class="keyword">in</span> KBit/s</span><br><span class="line">- `abr` (numeric): Average audio bitrate <span class="keyword">in</span> KBit/s</span><br><span class="line">- `acodec` (string): Name of the audio codec <span class="keyword">in</span> use</span><br><span class="line">- `asr` (numeric): Audio sampling rate <span class="keyword">in</span> Hertz</span><br><span class="line">- `vbr` (numeric): Average video bitrate <span class="keyword">in</span> KBit/s</span><br><span class="line">- `fps` (numeric): Frame rate</span><br><span class="line">- `vcodec` (string): Name of the video codec <span class="keyword">in</span> use</span><br><span class="line">- `container` (string): Name of the container format</span><br><span class="line">- `filesize` (numeric): The number of bytes, <span class="keyword">if</span> known <span class="keyword">in</span> advance</span><br><span class="line">- `filesize_approx` (numeric): An estimate <span class="keyword">for</span> the number of bytes</span><br><span class="line">- `protocol` (string): The protocol that will be used <span class="keyword">for</span> the actual download</span><br><span class="line">- `extractor` (string): Name of the extractor</span><br><span class="line">- `extractor_key` (string): Key name of the extractor</span><br><span class="line">- `epoch` (numeric): Unix epoch when creating the file</span><br><span class="line">- `autonumber` (numeric): Five-digit number that will be increased with each download, starting at zero</span><br><span class="line">- `playlist` (string): Name or id of the playlist that contains the video</span><br><span class="line">- `playlist_index` (numeric): Index of the video <span class="keyword">in</span> the playlist padded with leading zeros according to the total length of the playlist</span><br><span class="line">- `playlist_id` (string): Playlist identifier</span><br><span class="line">- `playlist_title` (string): Playlist title</span><br><span class="line">- `playlist_uploader` (string): Full name of the playlist uploader</span><br><span class="line">- `playlist_uploader_id` (string): Nickname or id of the playlist uploader</span><br></pre></td></tr></table></figure><p>Available for the video that belongs to some logical chapter or section:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- `chapter` (string): Name or title of the chapter the video belongs to</span><br><span class="line">- `chapter_number` (numeric): Number of the chapter the video belongs to</span><br><span class="line">- `chapter_id` (string): Id of the chapter the video belongs to</span><br></pre></td></tr></table></figure><p>Available for the video that is an episode of some series or programme:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">- `series` (string): Title of the series or programme the video episode belongs to</span><br><span class="line">- `season` (string): Title of the season the video episode belongs to</span><br><span class="line">- `season_number` (numeric): Number of the season the video episode belongs to</span><br><span class="line">- `season_id` (string): Id of the season the video episode belongs to</span><br><span class="line">- `episode` (string): Title of the video episode</span><br><span class="line">- `episode_number` (numeric): Number of the video episode within a season</span><br><span class="line">- `episode_id` (string): Id of the video episode</span><br></pre></td></tr></table></figure><p>Available for the media that is a track or a part of a music album:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">- `track` (string): Title of the track</span><br><span class="line">- `track_number` (numeric): Number of the track within an album or a disc</span><br><span class="line">- `track_id` (string): Id of the track</span><br><span class="line">- `artist` (string): Artist(s) of the track</span><br><span class="line">- `genre` (string): Genre(s) of the track</span><br><span class="line">- `album` (string): Title of the album the track belongs to</span><br><span class="line">- `album_type` (string): Type of the album</span><br><span class="line">- `album_artist` (string): List of all artists appeared on the album</span><br><span class="line">- `disc_number` (numeric): Number of the disc or other physical medium the track belongs to</span><br><span class="line">- `release_year` (numeric): Year (YYYY) when the album was released</span><br></pre></td></tr></table></figure><p>Each aforementioned sequence when referenced in an output template will be replaced by the actual value corresponding to the sequence name. Note that some of the sequences are not guaranteed to be present since they depend on the metadata obtained by a particular extractor. Such sequences will be replaced with <code>NA</code>.</p><p>For example for <code>-o %(title)s-%(id)s.%(ext)s</code> and an mp4 video with title <code>youtube-dl test video</code> and id <code>BaW_jenozKcj</code>, this will result in a <code>youtube-dl test video-BaW_jenozKcj.mp4</code> file created in the current directory.</p><p>For numeric sequences you can use numeric related formatting, for example, <code>%(view_count)05d</code> will result in a string with view count padded with zeros up to 5 characters, like in <code>00042</code>.</p><p>Output templates can also contain arbitrary hierarchical path, e.g. <code>-o &#39;%(playlist)s/%(playlist_index)s - %(title)s.%(ext)s&#39;</code> which will result in downloading each video in a directory corresponding to this path template. Any missing directory will be automatically created for you.</p><p>To use percent literals in an output template use <code>%%</code>. To output to stdout use <code>-o -</code>.</p><p>The current default template is <code>%(title)s-%(id)s.%(ext)s</code>.</p><p>In some cases, you don’t want special characters such as 中, spaces, or &amp;, such as when transferring the downloaded filename to a Windows system or the filename through an 8bit-unsafe channel. In these cases, add the <code>--restrict-filenames</code> flag to get a shorter title:</p><h4 id="输出模板和Windows批处理文件"><a href="#输出模板和Windows批处理文件" class="headerlink" title="输出模板和Windows批处理文件"></a>输出模板和Windows批处理文件</h4><p>If you are using an output template inside a Windows batch file then you must escape plain percent characters (<code>%</code>) by doubling, so that <code>-o &quot;%(title)s-%(id)s.%(ext)s&quot;</code> should become <code>-o &quot;%%(title)s-%%(id)s.%%(ext)s&quot;</code>. However you should not touch <code>%</code>‘s that are not plain characters, e.g. environment variables for expansion should stay intact: <code>-o &quot;C:\%HOMEPATH%\Desktop\%%(title)s.%%(ext)s&quot;</code>.</p><h4 id="输出模板示例"><a href="#输出模板示例" class="headerlink" title="输出模板示例"></a>输出模板示例</h4><p>Note that on Windows you may need to use double quotes instead of single.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">$ youtube-dl --get-filename -o <span class="string">'%(title)s.%(ext)s'</span> BaW_jenozKc</span><br><span class="line">youtube-dl <span class="built_in">test</span> video <span class="string">''</span>_test.mp4    <span class="comment"># All kinds of weird characters</span></span><br><span class="line"></span><br><span class="line">$ youtube-dl --get-filename -o <span class="string">'%(title)s.%(ext)s'</span> BaW_jenozKc --restrict-filenames</span><br><span class="line">youtube-dl_test_video_.mp4          <span class="comment"># A simple file name</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Download YouTube playlist videos in separate directory indexed by video order in a playlist</span></span><br><span class="line">$ youtube-dl -o <span class="string">'%(playlist)s/%(playlist_index)s - %(title)s.%(ext)s'</span> https://www.youtube.com/playlist?list=PLwiyx1dc3P2JR9N8gQaQN_BCvlSlap7re</span><br><span class="line"></span><br><span class="line"><span class="comment"># Download all playlists of YouTube channel/user keeping each playlist in separate directory:</span></span><br><span class="line">$ youtube-dl -o <span class="string">'%(uploader)s/%(playlist)s/%(playlist_index)s - %(title)s.%(ext)s'</span> https://www.youtube.com/user/TheLinuxFoundation/playlists</span><br><span class="line"></span><br><span class="line"><span class="comment"># Download Udemy course keeping each chapter in separate directory under MyVideos directory in your home</span></span><br><span class="line">$ youtube-dl -u user -p password -o <span class="string">'~/MyVideos/%(playlist)s/%(chapter_number)s - %(chapter)s/%(title)s.%(ext)s'</span> https://www.udemy.com/java-tutorial/</span><br><span class="line"></span><br><span class="line"><span class="comment"># Download entire series season keeping each series and each season in separate directory under C:/MyVideos</span></span><br><span class="line">$ youtube-dl -o <span class="string">"C:/MyVideos/%(series)s/%(season_number)s - %(season)s/%(episode_number)s - %(episode)s.%(ext)s"</span> https://videomore.ru/kino_v_detalayah/5_sezon/367617</span><br><span class="line"></span><br><span class="line"><span class="comment"># Stream the video being downloaded to stdout</span></span><br><span class="line">$ youtube-dl -o - BaW_jenozKc</span><br></pre></td></tr></table></figure><h1 id="格式选择"><a href="#格式选择" class="headerlink" title="格式选择"></a>格式选择</h1><p>By default youtube-dl tries to download the best available quality, i.e. if you want the best quality you <strong>don’t need</strong> to pass any special options, youtube-dl will guess it for you by <strong>default</strong>.</p><p>But sometimes you may want to download in a different format, for example when you are on a slow or intermittent connection. The key mechanism for achieving this is so-called <em>format selection</em> based on which you can explicitly specify desired format, select formats based on some criterion or criteria, setup precedence and much more.</p><p>The general syntax for format selection is <code>--format FORMAT</code> or shorter <code>-f FORMAT</code> where <code>FORMAT</code> is a <em>selector expression</em>, i.e. an expression that describes format or formats you would like to download.</p><p><strong>tl;dr:</strong> <a href="#format-selection-examples">navigate me to examples</a>.</p><p>The simplest case is requesting a specific format, for example with <code>-f 22</code> you can download the format with format code equal to 22. You can get the list of available format codes for particular video using <code>--list-formats</code> or <code>-F</code>. Note that these format codes are extractor specific. </p><p>You can also use a file extension (currently <code>3gp</code>, <code>aac</code>, <code>flv</code>, <code>m4a</code>, <code>mp3</code>, <code>mp4</code>, <code>ogg</code>, <code>wav</code>, <code>webm</code> are supported) to download the best quality format of a particular file extension served as a single file, e.g. <code>-f webm</code> will download the best quality format with the <code>webm</code> extension served as a single file.</p><p>You can also use special names to select particular edge case formats:</p><ul><li><code>best</code>: Select the best quality format represented by a single file with video and audio.</li><li><code>worst</code>: Select the worst quality format represented by a single file with video and audio.</li><li><code>bestvideo</code>: Select the best quality video-only format (e.g. DASH video). May not be available.</li><li><code>worstvideo</code>: Select the worst quality video-only format. May not be available.</li><li><code>bestaudio</code>: Select the best quality audio only-format. May not be available.</li><li><code>worstaudio</code>: Select the worst quality audio only-format. May not be available.</li></ul><p>For example, to download the worst quality video-only format you can use <code>-f worstvideo</code>.</p><p>If you want to download multiple videos and they don’t have the same formats available, you can specify the order of preference using slashes. Note that slash is left-associative, i.e. formats on the left hand side are preferred, for example <code>-f 22/17/18</code> will download format 22 if it’s available, otherwise it will download format 17 if it’s available, otherwise it will download format 18 if it’s available, otherwise it will complain that no suitable formats are available for download.</p><p>If you want to download several formats of the same video use a comma as a separator, e.g. <code>-f 22,17,18</code> will download all these three formats, of course if they are available. Or a more sophisticated example combined with the precedence feature: <code>-f 136/137/mp4/bestvideo,140/m4a/bestaudio</code>.</p><p>You can also filter the video formats by putting a condition in brackets, as in <code>-f &quot;best[height=720]&quot;</code> (or <code>-f &quot;[filesize&gt;10M]&quot;</code>).</p><p>The following numeric meta fields can be used with comparisons <code>&lt;</code>, <code>&lt;=</code>, <code>&gt;</code>, <code>&gt;=</code>, <code>=</code> (equals), <code>!=</code> (not equals):</p><ul><li><code>filesize</code>: The number of bytes, if known in advance</li><li><code>width</code>: Width of the video, if known</li><li><code>height</code>: Height of the video, if known</li><li><code>tbr</code>: Average bitrate of audio and video in KBit/s</li><li><code>abr</code>: Average audio bitrate in KBit/s</li><li><code>vbr</code>: Average video bitrate in KBit/s</li><li><code>asr</code>: Audio sampling rate in Hertz</li><li><code>fps</code>: Frame rate</li></ul><p>Also filtering work for comparisons <code>=</code> (equals), <code>^=</code> (starts with), <code>$=</code> (ends with), <code>*=</code> (contains) and following string meta fields:</p><ul><li><code>ext</code>: File extension</li><li><code>acodec</code>: Name of the audio codec in use</li><li><code>vcodec</code>: Name of the video codec in use</li><li><code>container</code>: Name of the container format</li><li><code>protocol</code>: The protocol that will be used for the actual download, lower-case (<code>http</code>, <code>https</code>, <code>rtsp</code>, <code>rtmp</code>, <code>rtmpe</code>, <code>mms</code>, <code>f4m</code>, <code>ism</code>, <code>http_dash_segments</code>, <code>m3u8</code>, or <code>m3u8_native</code>)</li><li><code>format_id</code>: A short description of the format</li></ul><p>Any string comparison may be prefixed with negation <code>!</code> in order to produce an opposite comparison, e.g. <code>!*=</code> (does not contain).</p><p>Note that none of the aforementioned meta fields are guaranteed to be present since this solely depends on the metadata obtained by particular extractor, i.e. the metadata offered by the video hoster.</p><p>Formats for which the value is not known are excluded unless you put a question mark (<code>?</code>) after the operator. You can combine format filters, so <code>-f &quot;[height &lt;=? 720][tbr&gt;500]&quot;</code> selects up to 720p videos (or videos where the height is not known) with a bitrate of at least 500 KBit/s.</p><p>You can merge the video and audio of two formats into a single file using <code>-f &lt;video-format&gt;+&lt;audio-format&gt;</code> (requires ffmpeg or avconv installed), for example <code>-f bestvideo+bestaudio</code> will download the best video-only format, the best audio-only format and mux them together with ffmpeg/avconv.</p><p>Format selectors can also be grouped using parentheses, for example if you want to download the best mp4 and webm formats with a height lower than 480 you can use <code>-f &#39;(mp4,webm)[height&lt;480]&#39;</code>.</p><p>Since the end of April 2015 and version 2015.04.26, youtube-dl uses <code>-f bestvideo+bestaudio/best</code> as the default format selection (see <a href="https://github.com/ytdl-org/youtube-dl/issues/5447" target="_blank" rel="noopener">#5447</a>, <a href="https://github.com/ytdl-org/youtube-dl/issues/5456" target="_blank" rel="noopener">#5456</a>). If ffmpeg or avconv are installed this results in downloading <code>bestvideo</code> and <code>bestaudio</code> separately and muxing them together into a single file giving the best overall quality available. Otherwise it falls back to <code>best</code> and results in downloading the best available quality served as a single file. <code>best</code> is also needed for videos that don’t come from YouTube because they don’t provide the audio and video in two different files. If you want to only download some DASH formats (for example if you are not interested in getting videos with a resolution higher than 1080p), you can add <code>-f bestvideo[height&lt;=?1080]+bestaudio/best</code> to your configuration file. Note that if you use youtube-dl to stream to <code>stdout</code> (and most likely to pipe it to your media player then), i.e. you explicitly specify output template as <code>-o -</code>, youtube-dl still uses <code>-f best</code> format selection in order to start content delivery immediately to your player and not to wait until <code>bestvideo</code> and <code>bestaudio</code> are downloaded and muxed.</p><p>If you want to preserve the old format selection behavior (prior to youtube-dl 2015.04.26), i.e. you want to download the best available quality media served as a single file, you should explicitly specify your choice with <code>-f best</code>. You may want to add it to the <a href="#configuration">configuration file</a> in order not to type it every time you run youtube-dl.</p><h4 id="格式选择示例"><a href="#格式选择示例" class="headerlink" title="格式选择示例"></a>格式选择示例</h4><p>Note that on Windows you may need to use double quotes instead of single.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Download best mp4 format available or any other best if no mp4 available</span></span><br><span class="line">$ youtube-dl -f <span class="string">'bestvideo[ext=mp4]+bestaudio[ext=m4a]/best[ext=mp4]/best'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Download best format available but no better than 480p</span></span><br><span class="line">$ youtube-dl -f <span class="string">'bestvideo[height&lt;=480]+bestaudio/best[height&lt;=480]'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Download best video only format but no bigger than 50 MB</span></span><br><span class="line">$ youtube-dl -f <span class="string">'best[filesize&lt;50M]'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Download best format available via direct link over HTTP/HTTPS protocol</span></span><br><span class="line">$ youtube-dl -f <span class="string">'(bestvideo+bestaudio/best)[protocol^=http]'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Download the best video format and the best audio format without merging them</span></span><br><span class="line">$ youtube-dl -f <span class="string">'bestvideo,bestaudio'</span> -o <span class="string">'%(title)s.f%(format_id)s.%(ext)s'</span></span><br></pre></td></tr></table></figure><p>Note that in the last example, an output template is recommended as bestvideo and bestaudio may have the same file name.</p><h1 id="视频选择-1"><a href="#视频选择-1" class="headerlink" title="视频选择"></a>视频选择</h1><p>Videos can be filtered by their upload date using the options <code>--date</code>, <code>--datebefore</code> or <code>--dateafter</code>. They accept dates in two formats:</p><ul><li>Absolute dates: Dates in the format <code>YYYYMMDD</code>.</li><li>Relative dates: Dates in the format <code>(now|today)[+-][0-9](day|week|month|year)(s)?</code></li></ul><p>Examples:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Download only the videos uploaded in the last 6 months</span></span><br><span class="line">$ youtube-dl --dateafter now-6months</span><br><span class="line"></span><br><span class="line"><span class="comment"># Download only the videos uploaded on January 1, 1970</span></span><br><span class="line">$ youtube-dl --date 19700101</span><br><span class="line"></span><br><span class="line">$ <span class="comment"># Download only the videos uploaded in the 200x decade</span></span><br><span class="line">$ youtube-dl --dateafter 20000101 --datebefore 20091231</span><br></pre></td></tr></table></figure><h1 id="FAQ"><a href="#FAQ" class="headerlink" title="FAQ"></a>FAQ</h1><h3 id="How-do-I-update-youtube-dl"><a href="#How-do-I-update-youtube-dl" class="headerlink" title="How do I update youtube-dl?"></a>How do I update youtube-dl?</h3><p>If you’ve followed <a href="https://ytdl-org.github.io/youtube-dl/download.html" target="_blank" rel="noopener">our manual installation instructions</a>, you can simply run <code>youtube-dl -U</code> (or, on Linux, <code>sudo youtube-dl -U</code>).</p><p>If you have used pip, a simple <code>sudo pip install -U youtube-dl</code> is sufficient to update.</p><p>If you have installed youtube-dl using a package manager like <em>apt-get</em> or <em>yum</em>, use the standard system update mechanism to update. Note that distribution packages are often outdated. As a rule of thumb, youtube-dl releases at least once a month, and often weekly or even daily. Simply go to <a href="https://yt-dl.org" target="_blank" rel="noopener">https://yt-dl.org</a> to find out the current version. Unfortunately, there is nothing we youtube-dl developers can do if your distribution serves a really outdated version. You can (and should) complain to your distribution in their bugtracker or support forum.</p><p>As a last resort, you can also uninstall the version installed by your package manager and follow our manual installation instructions. For that, remove the distribution’s package, with a line like</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get remove -y youtube-dl</span><br></pre></td></tr></table></figure><p>Afterwards, simply follow <a href="https://ytdl-org.github.io/youtube-dl/download.html" target="_blank" rel="noopener">our manual installation instructions</a>:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo wget https://yt-dl.org/latest/youtube-dl -O /usr/<span class="built_in">local</span>/bin/youtube-dl</span><br><span class="line">sudo chmod a+x /usr/<span class="built_in">local</span>/bin/youtube-dl</span><br><span class="line"><span class="built_in">hash</span> -r</span><br></pre></td></tr></table></figure><p>Again, from then on you’ll be able to update with <code>sudo youtube-dl -U</code>.</p><h3 id="youtube-dl-is-extremely-slow-to-start-on-Windows"><a href="#youtube-dl-is-extremely-slow-to-start-on-Windows" class="headerlink" title="youtube-dl is extremely slow to start on Windows"></a>youtube-dl is extremely slow to start on Windows</h3><p>Add a file exclusion for <code>youtube-dl.exe</code> in Windows Defender settings.</p><h3 id="I’m-getting-an-error-Unable-to-extract-OpenGraph-title-on-YouTube-playlists"><a href="#I’m-getting-an-error-Unable-to-extract-OpenGraph-title-on-YouTube-playlists" class="headerlink" title="I’m getting an error Unable to extract OpenGraph title on YouTube playlists"></a>I’m getting an error <code>Unable to extract OpenGraph title</code> on YouTube playlists</h3><p>YouTube changed their playlist format in March 2014 and later on, so you’ll need at least youtube-dl 2014.07.25 to download all YouTube videos.</p><p>If you have installed youtube-dl with a package manager, pip, setup.py or a tarball, please use that to update. Note that Ubuntu packages do not seem to get updated anymore. Since we are not affiliated with Ubuntu, there is little we can do. Feel free to <a href="https://bugs.launchpad.net/ubuntu/+source/youtube-dl/+filebug" target="_blank" rel="noopener">report bugs</a> to the <a href="mailto:ubuntu-motu@lists.ubuntu.com?subject=outdated%20version%20of%20youtube-dl" target="_blank" rel="noopener">Ubuntu packaging people</a> - all they have to do is update the package to a somewhat recent version. See above for a way to update.</p><h3 id="I’m-getting-an-error-when-trying-to-use-output-template-error-using-output-template-conflicts-with-using-title-video-ID-or-auto-number"><a href="#I’m-getting-an-error-when-trying-to-use-output-template-error-using-output-template-conflicts-with-using-title-video-ID-or-auto-number" class="headerlink" title="I’m getting an error when trying to use output template: error: using output template conflicts with using title, video ID or auto number"></a>I’m getting an error when trying to use output template: <code>error: using output template conflicts with using title, video ID or auto number</code></h3><p>Make sure you are not using <code>-o</code> with any of these options <code>-t</code>, <code>--title</code>, <code>--id</code>, <code>-A</code> or <code>--auto-number</code> set in command line or in a configuration file. Remove the latter if any.</p><h3 id="Do-I-always-have-to-pass-citw"><a href="#Do-I-always-have-to-pass-citw" class="headerlink" title="Do I always have to pass -citw?"></a>Do I always have to pass <code>-citw</code>?</h3><p>By default, youtube-dl intends to have the best options (incidentally, if you have a convincing case that these should be different, <a href="https://yt-dl.org/bug" target="_blank" rel="noopener">please file an issue where you explain that</a>). Therefore, it is unnecessary and sometimes harmful to copy long option strings from webpages. In particular, the only option out of <code>-citw</code> that is regularly useful is <code>-i</code>.</p><h3 id="Can-you-please-put-the-b-option-back"><a href="#Can-you-please-put-the-b-option-back" class="headerlink" title="Can you please put the -b option back?"></a>Can you please put the <code>-b</code> option back?</h3><p>Most people asking this question are not aware that youtube-dl now defaults to downloading the highest available quality as reported by YouTube, which will be 1080p or 720p in some cases, so you no longer need the <code>-b</code> option. For some specific videos, maybe YouTube does not report them to be available in a specific high quality format you’re interested in. In that case, simply request it with the <code>-f</code> option and youtube-dl will try to download it.</p><h3 id="I-get-HTTP-error-402-when-trying-to-download-a-video-What’s-this"><a href="#I-get-HTTP-error-402-when-trying-to-download-a-video-What’s-this" class="headerlink" title="I get HTTP error 402 when trying to download a video. What’s this?"></a>I get HTTP error 402 when trying to download a video. What’s this?</h3><p>Apparently YouTube requires you to pass a CAPTCHA test if you download too much. We’re <a href="https://github.com/ytdl-org/youtube-dl/issues/154" target="_blank" rel="noopener">considering to provide a way to let you solve the CAPTCHA</a>, but at the moment, your best course of action is pointing a web browser to the youtube URL, solving the CAPTCHA, and restart youtube-dl.</p><h3 id="Do-I-need-any-other-programs"><a href="#Do-I-need-any-other-programs" class="headerlink" title="Do I need any other programs?"></a>Do I need any other programs?</h3><p>youtube-dl works fine on its own on most sites. However, if you want to convert video/audio, you’ll need <a href="https://libav.org/" target="_blank" rel="noopener">avconv</a> or <a href="https://www.ffmpeg.org/" target="_blank" rel="noopener">ffmpeg</a>. On some sites - most notably YouTube - videos can be retrieved in a higher quality format without sound. youtube-dl will detect whether avconv/ffmpeg is present and automatically pick the best option.</p><p>Videos or video formats streamed via RTMP protocol can only be downloaded when <a href="https://rtmpdump.mplayerhq.hu/" target="_blank" rel="noopener">rtmpdump</a> is installed. Downloading MMS and RTSP videos requires either <a href="https://mplayerhq.hu/" target="_blank" rel="noopener">mplayer</a> or <a href="https://mpv.io/" target="_blank" rel="noopener">mpv</a> to be installed.</p><h3 id="I-have-downloaded-a-video-but-how-can-I-play-it"><a href="#I-have-downloaded-a-video-but-how-can-I-play-it" class="headerlink" title="I have downloaded a video but how can I play it?"></a>I have downloaded a video but how can I play it?</h3><p>Once the video is fully downloaded, use any video player, such as <a href="https://mpv.io/" target="_blank" rel="noopener">mpv</a>, <a href="https://www.videolan.org/" target="_blank" rel="noopener">vlc</a> or <a href="https://www.mplayerhq.hu/" target="_blank" rel="noopener">mplayer</a>.</p><h3 id="I-extracted-a-video-URL-with-g-but-it-does-not-play-on-another-machine-in-my-web-browser"><a href="#I-extracted-a-video-URL-with-g-but-it-does-not-play-on-another-machine-in-my-web-browser" class="headerlink" title="I extracted a video URL with -g, but it does not play on another machine / in my web browser."></a>I extracted a video URL with <code>-g</code>, but it does not play on another machine / in my web browser.</h3><p>It depends a lot on the service. In many cases, requests for the video (to download/play it) must come from the same IP address and with the same cookies and/or HTTP headers. Use the <code>--cookies</code> option to write the required cookies into a file, and advise your downloader to read cookies from that file. Some sites also require a common user agent to be used, use <code>--dump-user-agent</code> to see the one in use by youtube-dl. You can also get necessary cookies and HTTP headers from JSON output obtained with <code>--dump-json</code>.</p><p>It may be beneficial to use IPv6; in some cases, the restrictions are only applied to IPv4. Some services (sometimes only for a subset of videos) do not restrict the video URL by IP address, cookie, or user-agent, but these are the exception rather than the rule.</p><p>Please bear in mind that some URL protocols are <strong>not</strong> supported by browsers out of the box, including RTMP. If you are using <code>-g</code>, your own downloader must support these as well.</p><p>If you want to play the video on a machine that is not running youtube-dl, you can relay the video content from the machine that runs youtube-dl. You can use <code>-o -</code> to let youtube-dl stream a video to stdout, or simply allow the player to download the files written by youtube-dl in turn.</p><h3 id="ERROR-no-fmt-url-map-or-conn-information-found-in-video-info"><a href="#ERROR-no-fmt-url-map-or-conn-information-found-in-video-info" class="headerlink" title="ERROR: no fmt_url_map or conn information found in video info"></a>ERROR: no fmt_url_map or conn information found in video info</h3><p>YouTube has switched to a new video info format in July 2011 which is not supported by old versions of youtube-dl. See <a href="#how-do-i-update-youtube-dl">above</a> for how to update youtube-dl.</p><h3 id="ERROR-unable-to-download-video"><a href="#ERROR-unable-to-download-video" class="headerlink" title="ERROR: unable to download video"></a>ERROR: unable to download video</h3><p>YouTube requires an additional signature since September 2012 which is not supported by old versions of youtube-dl. See <a href="#how-do-i-update-youtube-dl">above</a> for how to update youtube-dl.</p><h3 id="Video-URL-contains-an-ampersand-and-I’m-getting-some-strange-output-1-2839-or-39-v-39-is-not-recognized-as-an-internal-or-external-command"><a href="#Video-URL-contains-an-ampersand-and-I’m-getting-some-strange-output-1-2839-or-39-v-39-is-not-recognized-as-an-internal-or-external-command" class="headerlink" title="Video URL contains an ampersand and I’m getting some strange output [1] 2839 or &#39;v&#39; is not recognized as an internal or external command"></a>Video URL contains an ampersand and I’m getting some strange output <code>[1] 2839</code> or <code>&#39;v&#39; is not recognized as an internal or external command</code></h3><p>That’s actually the output from your shell. Since ampersand is one of the special shell characters it’s interpreted by the shell preventing you from passing the whole URL to youtube-dl. To disable your shell from interpreting the ampersands (or any other special characters) you have to either put the whole URL in quotes or escape them with a backslash (which approach will work depends on your shell).</p><p>For example if your URL is <a href="https://www.youtube.com/watch?t=4&amp;v=BaW_jenozKc" target="_blank" rel="noopener">https://www.youtube.com/watch?t=4&amp;v=BaW_jenozKc</a> you should end up with following command:</p><figure class="highlight plain"><figcaption><span>'https://www.youtube.com/watch?t</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">or</span><br><span class="line"></span><br><span class="line">```youtube-dl https://www.youtube.com/watch?t=4\&amp;v=BaW_jenozKc</span><br></pre></td></tr></table></figure><p>For Windows you have to use the double quotes:</p><figure class="highlight plain"><figcaption><span>"https://www.youtube.com/watch?t</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### ExtractorError: Could not find JS function u&apos;OF&apos;</span><br><span class="line"></span><br><span class="line">In February 2015, the new YouTube player contained a character sequence in a string that was misinterpreted by old versions of youtube-dl. See [above](#how-do-i-update-youtube-dl) for how to update youtube-dl.</span><br><span class="line"></span><br><span class="line">### HTTP Error 429: Too Many Requests or 402: Payment Required</span><br><span class="line"></span><br><span class="line">These two error codes indicate that the service is blocking your IP address because of overuse. Contact the service and ask them to unblock your IP address, or - if you have acquired a whitelisted IP address already - use the [`--proxy` or `--source-address` options](#network-options) to select another IP address.</span><br><span class="line"></span><br><span class="line">### SyntaxError: Non-ASCII character</span><br><span class="line"></span><br><span class="line">The error</span><br><span class="line"></span><br><span class="line">    File &quot;youtube-dl&quot;, line 2</span><br><span class="line">    SyntaxError: Non-ASCII character &apos;\x93&apos; ...</span><br><span class="line"></span><br><span class="line">means you&apos;re using an outdated version of Python. Please update to Python 2.6 or 2.7.</span><br><span class="line"></span><br><span class="line">### What is this binary file? Where has the code gone?</span><br><span class="line"></span><br><span class="line">Since June 2012 ([#342](https://github.com/ytdl-org/youtube-dl/issues/342)) youtube-dl is packed as an executable zipfile, simply unzip it (might need renaming to `youtube-dl.zip` first on some systems) or clone the git repository, as laid out above. If you modify the code, you can run it by executing the `__main__.py` file. To recompile the executable, run `make youtube-dl`.</span><br><span class="line"></span><br><span class="line">### The exe throws an error due to missing `MSVCR100.dll`</span><br><span class="line"></span><br><span class="line">To run the exe you need to install first the [Microsoft Visual C++ 2010 Redistributable Package (x86)](https://www.microsoft.com/en-US/download/details.aspx?id=5555).</span><br><span class="line"></span><br><span class="line">### On Windows, how should I set up ffmpeg and youtube-dl? Where should I put the exe files?</span><br><span class="line"></span><br><span class="line">If you put youtube-dl and ffmpeg in the same directory that you&apos;re running the command from, it will work, but that&apos;s rather cumbersome.</span><br><span class="line"></span><br><span class="line">To make a different directory work - either for ffmpeg, or for youtube-dl, or for both - simply create the directory (say, `C:\bin`, or `C:\Users\&lt;User name&gt;\bin`), put all the executables directly in there, and then [set your PATH environment variable](https://www.java.com/en/download/help/path.xml) to include that directory.</span><br><span class="line"></span><br><span class="line">From then on, after restarting your shell, you will be able to access both youtube-dl and ffmpeg (and youtube-dl will be able to find ffmpeg) by simply typing `youtube-dl` or `ffmpeg`, no matter what directory you&apos;re in.</span><br><span class="line"></span><br><span class="line">### How do I put downloads into a specific folder?</span><br><span class="line"></span><br><span class="line">Use the `-o` to specify an [output template](#output-template), for example `-o &quot;/home/user/videos/%(title)s-%(id)s.%(ext)s&quot;`. If you want this for all of your downloads, put the option into your [configuration file](#configuration).</span><br><span class="line"></span><br><span class="line">### How do I download a video starting with a `-`?</span><br><span class="line"></span><br><span class="line">Either prepend `https://www.youtube.com/watch?v=` or separate the ID from the options with `--`:</span><br><span class="line"></span><br><span class="line">    youtube-dl -- -wNyEUrxzFU</span><br><span class="line">    youtube-dl &quot;https://www.youtube.com/watch?v=-wNyEUrxzFU&quot;</span><br><span class="line"></span><br><span class="line">### How do I pass cookies to youtube-dl?</span><br><span class="line"></span><br><span class="line">Use the `--cookies` option, for example `--cookies /path/to/cookies/file.txt`.</span><br><span class="line"></span><br><span class="line">In order to extract cookies from browser use any conforming browser extension for exporting cookies. For example, [cookies.txt](https://chrome.google.com/webstore/detail/cookiestxt/njabckikapfpffapmjgojcnbfjonfjfg) (for Chrome) or [cookies.txt](https://addons.mozilla.org/en-US/firefox/addon/cookies-txt/) (for Firefox).</span><br><span class="line"></span><br><span class="line">Note that the cookies file must be in Mozilla/Netscape format and the first line of the cookies file must be either `# HTTP Cookie File` or `# Netscape HTTP Cookie File`. Make sure you have correct [newline format](https://en.wikipedia.org/wiki/Newline) in the cookies file and convert newlines if necessary to correspond with your OS, namely `CRLF` (`\r\n`) for Windows and `LF` (`\n`) for Unix and Unix-like systems (Linux, macOS, etc.). `HTTP Error 400: Bad Request` when using `--cookies` is a good sign of invalid newline format.</span><br><span class="line"></span><br><span class="line">Passing cookies to youtube-dl is a good way to workaround login when a particular extractor does not implement it explicitly. Another use case is working around [CAPTCHA](https://en.wikipedia.org/wiki/CAPTCHA) some websites require you to solve in particular cases in order to get access (e.g. YouTube, CloudFlare).</span><br><span class="line"></span><br><span class="line">### How do I stream directly to media player?</span><br><span class="line"></span><br><span class="line">You will first need to tell youtube-dl to stream media to stdout with `-o -`, and also tell your media player to read from stdin (it must be capable of this for streaming) and then pipe former to latter. For example, streaming to [vlc](https://www.videolan.org/) can be achieved with:</span><br><span class="line"></span><br><span class="line">    youtube-dl -o - &quot;https://www.youtube.com/watch?v=BaW_jenozKcj&quot; | vlc -</span><br><span class="line"></span><br><span class="line">### How do I download only new videos from a playlist?</span><br><span class="line"></span><br><span class="line">Use download-archive feature. With this feature you should initially download the complete playlist with `--download-archive /path/to/download/archive/file.txt` that will record identifiers of all the videos in a special file. Each subsequent run with the same `--download-archive` will download only new videos and skip all videos that have been downloaded before. Note that only successful downloads are recorded in the file.</span><br><span class="line"></span><br><span class="line">For example, at first,</span><br><span class="line"></span><br><span class="line">    youtube-dl --download-archive archive.txt &quot;https://www.youtube.com/playlist?list=PLwiyx1dc3P2JR9N8gQaQN_BCvlSlap7re&quot;</span><br><span class="line"></span><br><span class="line">will download the complete `PLwiyx1dc3P2JR9N8gQaQN_BCvlSlap7re` playlist and create a file `archive.txt`. Each subsequent run will only download new videos if any:</span><br><span class="line"></span><br><span class="line">    youtube-dl --download-archive archive.txt &quot;https://www.youtube.com/playlist?list=PLwiyx1dc3P2JR9N8gQaQN_BCvlSlap7re&quot;</span><br><span class="line"></span><br><span class="line">### Should I add `--hls-prefer-native` into my config?</span><br><span class="line"></span><br><span class="line">When youtube-dl detects an HLS video, it can download it either with the built-in downloader or ffmpeg. Since many HLS streams are slightly invalid and ffmpeg/youtube-dl each handle some invalid cases better than the other, there is an option to switch the downloader if needed.</span><br><span class="line"></span><br><span class="line">When youtube-dl knows that one particular downloader works better for a given website, that downloader will be picked. Otherwise, youtube-dl will pick the best downloader for general compatibility, which at the moment happens to be ffmpeg. This choice may change in future versions of youtube-dl, with improvements of the built-in downloader and/or ffmpeg.</span><br><span class="line"></span><br><span class="line">In particular, the generic extractor (used when your website is not in the [list of supported sites by youtube-dl](https://ytdl-org.github.io/youtube-dl/supportedsites.html) cannot mandate one specific downloader.</span><br><span class="line"></span><br><span class="line">If you put either `--hls-prefer-native` or `--hls-prefer-ffmpeg` into your configuration, a different subset of videos will fail to download correctly. Instead, it is much better to [file an issue](https://yt-dl.org/bug) or a pull request which details why the native or the ffmpeg HLS downloader is a better choice for your use case.</span><br><span class="line"></span><br><span class="line">### Can you add support for this anime video site, or site which shows current movies for free?</span><br><span class="line"></span><br><span class="line">As a matter of policy (as well as legality), youtube-dl does not include support for services that specialize in infringing copyright. As a rule of thumb, if you cannot easily find a video that the service is quite obviously allowed to distribute (i.e. that has been uploaded by the creator, the creator&apos;s distributor, or is published under a free license), the service is probably unfit for inclusion to youtube-dl.</span><br><span class="line"></span><br><span class="line">A note on the service that they don&apos;t host the infringing content, but just link to those who do, is evidence that the service should **not** be included into youtube-dl. The same goes for any DMCA note when the whole front page of the service is filled with videos they are not allowed to distribute. A &quot;fair use&quot; note is equally unconvincing if the service shows copyright-protected videos in full without authorization.</span><br><span class="line"></span><br><span class="line">Support requests for services that **do** purchase the rights to distribute their content are perfectly fine though. If in doubt, you can simply include a source that mentions the legitimate purchase of content.</span><br><span class="line"></span><br><span class="line">### How can I speed up work on my issue?</span><br><span class="line"></span><br><span class="line">(Also known as: Help, my important issue not being solved!) The youtube-dl core developer team is quite small. While we do our best to solve as many issues as possible, sometimes that can take quite a while. To speed up your issue, here&apos;s what you can do:</span><br><span class="line"></span><br><span class="line">First of all, please do report the issue [at our issue tracker](https://yt-dl.org/bugs). That allows us to coordinate all efforts by users and developers, and serves as a unified point. Unfortunately, the youtube-dl project has grown too large to use personal email as an effective communication channel.</span><br><span class="line"></span><br><span class="line">Please read the [bug reporting instructions](#bugs) below. A lot of bugs lack all the necessary information. If you can, offer proxy, VPN, or shell access to the youtube-dl developers. If you are able to, test the issue from multiple computers in multiple countries to exclude local censorship or misconfiguration issues.</span><br><span class="line"></span><br><span class="line">If nobody is interested in solving your issue, you are welcome to take matters into your own hands and submit a pull request (or coerce/pay somebody else to do so).</span><br><span class="line"></span><br><span class="line">Feel free to bump the issue from time to time by writing a small comment (&quot;Issue is still present in youtube-dl version ...from France, but fixed from Belgium&quot;), but please not more than once a month. Please do not declare your issue as `important` or `urgent`.</span><br><span class="line"></span><br><span class="line">### How can I detect whether a given URL is supported by youtube-dl?</span><br><span class="line"></span><br><span class="line">For one, have a look at the [list of supported sites](docs/supportedsites.md). Note that it can sometimes happen that the site changes its URL scheme (say, from https://example.com/video/1234567 to https://example.com/v/1234567 ) and youtube-dl reports an URL of a service in that list as unsupported. In that case, simply report a bug.</span><br><span class="line"></span><br><span class="line">It is *not* possible to detect whether a URL is supported or not. That&apos;s because youtube-dl contains a generic extractor which matches **all** URLs. You may be tempted to disable, exclude, or remove the generic extractor, but the generic extractor not only allows users to extract videos from lots of websites that embed a video from another service, but may also be used to extract video from a service that it&apos;s hosting itself. Therefore, we neither recommend nor support disabling, excluding, or removing the generic extractor.</span><br><span class="line"></span><br><span class="line">If you want to find out whether a given URL is supported, simply call youtube-dl with it. If you get no videos back, chances are the URL is either not referring to a video or unsupported. You can find out which by examining the output (if you run youtube-dl on the console) or catching an `UnsupportedError` exception if you run it from a Python program.</span><br><span class="line"></span><br><span class="line"># Why do I need to go through that much red tape when filing bugs?</span><br><span class="line"></span><br><span class="line">Before we had the issue template, despite our extensive [bug reporting instructions](#bugs), about 80% of the issue reports we got were useless, for instance because people used ancient versions hundreds of releases old, because of simple syntactic errors (not in youtube-dl but in general shell usage), because the problem was already reported multiple times before, because people did not actually read an error message, even if it said &quot;please install ffmpeg&quot;, because people did not mention the URL they were trying to download and many more simple, easy-to-avoid problems, many of whom were totally unrelated to youtube-dl.</span><br><span class="line"></span><br><span class="line">youtube-dl is an open-source project manned by too few volunteers, so we&apos;d rather spend time fixing bugs where we are certain none of those simple problems apply, and where we can be reasonably confident to be able to reproduce the issue without asking the reporter repeatedly. As such, the output of `youtube-dl -v YOUR_URL_HERE` is really all that&apos;s required to file an issue. The issue template also guides you through some basic steps you can do, such as checking that your version of youtube-dl is current.</span><br><span class="line"></span><br><span class="line"># DEVELOPER INSTRUCTIONS</span><br><span class="line"></span><br><span class="line">Most users do not need to build youtube-dl and can [download the builds](https://ytdl-org.github.io/youtube-dl/download.html) or get them from their distribution.</span><br><span class="line"></span><br><span class="line">To run youtube-dl as a developer, you don&apos;t need to build anything either. Simply execute</span><br><span class="line"></span><br><span class="line">    python -m youtube_dl</span><br><span class="line"></span><br><span class="line">To run the test, simply invoke your favorite test runner, or execute a test file directly; any of the following work:</span><br><span class="line"></span><br><span class="line">    python -m unittest discover</span><br><span class="line">    python test/test_download.py</span><br><span class="line">    nosetests</span><br><span class="line"></span><br><span class="line">See item 6 of [new extractor tutorial](#adding-support-for-a-new-site) for how to run extractor specific test cases.</span><br><span class="line"></span><br><span class="line">If you want to create a build of youtube-dl yourself, you&apos;ll need</span><br><span class="line"></span><br><span class="line">* python</span><br><span class="line">* make (only GNU make is supported)</span><br><span class="line">* pandoc</span><br><span class="line">* zip</span><br><span class="line">* nosetests</span><br><span class="line"></span><br><span class="line">### Adding support for a new site</span><br><span class="line"></span><br><span class="line">If you want to add support for a new site, first of all **make sure** this site is **not dedicated to [copyright infringement](README.md#can-you-add-support-for-this-anime-video-site-or-site-which-shows-current-movies-for-free)**. youtube-dl does **not support** such sites thus pull requests adding support for them **will be rejected**.</span><br><span class="line"></span><br><span class="line">After you have ensured this site is distributing its content legally, you can follow this quick list (assuming your service is called `yourextractor`):</span><br><span class="line"></span><br><span class="line">1. [Fork this repository](https://github.com/ytdl-org/youtube-dl/fork)</span><br><span class="line">2. Check out the source code with:</span><br><span class="line"></span><br><span class="line">        git clone git@github.com:YOUR_GITHUB_USERNAME/youtube-dl.git</span><br><span class="line"></span><br><span class="line">3. Start a new git branch with</span><br><span class="line"></span><br><span class="line">        cd youtube-dl</span><br><span class="line">        git checkout -b yourextractor</span><br><span class="line"></span><br><span class="line">4. Start with this simple template and save it to `youtube_dl/extractor/yourextractor.py`:</span><br><span class="line"></span><br><span class="line">    ```python</span><br><span class="line">    # coding: utf-8</span><br><span class="line">    from __future__ import unicode_literals</span><br><span class="line"></span><br><span class="line">    from .common import InfoExtractor</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    class YourExtractorIE(InfoExtractor):</span><br><span class="line">        _VALID_URL = r&apos;https?://(?:www\.)?yourextractor\.com/watch/(?P&lt;id&gt;[0-9]+)&apos;</span><br><span class="line">        _TEST = &#123;</span><br><span class="line">            &apos;url&apos;: &apos;https://yourextractor.com/watch/42&apos;,</span><br><span class="line">            &apos;md5&apos;: &apos;TODO: md5 sum of the first 10241 bytes of the video file (use --test)&apos;,</span><br><span class="line">            &apos;info_dict&apos;: &#123;</span><br><span class="line">                &apos;id&apos;: &apos;42&apos;,</span><br><span class="line">                &apos;ext&apos;: &apos;mp4&apos;,</span><br><span class="line">                &apos;title&apos;: &apos;Video title goes here&apos;,</span><br><span class="line">                &apos;thumbnail&apos;: r&apos;re:^https?://.*\.jpg$&apos;,</span><br><span class="line">                # TODO more properties, either as:</span><br><span class="line">                # * A value</span><br><span class="line">                # * MD5 checksum; start the string with md5:</span><br><span class="line">                # * A regular expression; start the string with re:</span><br><span class="line">                # * Any Python type (for example int or float)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        def _real_extract(self, url):</span><br><span class="line">            video_id = self._match_id(url)</span><br><span class="line">            webpage = self._download_webpage(url, video_id)</span><br><span class="line"></span><br><span class="line">            # TODO more code goes here, for example ...</span><br><span class="line">            title = self._html_search_regex(r&apos;&lt;h1&gt;(.+?)&lt;/h1&gt;&apos;, webpage, &apos;title&apos;)</span><br><span class="line"></span><br><span class="line">            return &#123;</span><br><span class="line">                &apos;id&apos;: video_id,</span><br><span class="line">                &apos;title&apos;: title,</span><br><span class="line">                &apos;description&apos;: self._og_search_description(webpage),</span><br><span class="line">                &apos;uploader&apos;: self._search_regex(r&apos;&lt;div[^&gt;]+id=&quot;uploader&quot;[^&gt;]*&gt;([^&lt;]+)&lt;&apos;, webpage, &apos;uploader&apos;, fatal=False),</span><br><span class="line">                # TODO more properties (see youtube_dl/extractor/common.py)</span><br><span class="line">            &#125;</span><br></pre></td></tr></table></figure><ol start="5"><li><p>Add an import in <a href="https://github.com/ytdl-org/youtube-dl/blob/master/youtube_dl/extractor/extractors.py" target="_blank" rel="noopener"><code>youtube_dl/extractor/extractors.py</code></a>.</p></li><li><p>Run <code>python test/test_download.py TestDownload.test_YourExtractor</code>. This <em>should fail</em> at first, but you can continually re-run it until you’re done. If you decide to add more than one test, then rename <code>_TEST</code> to <code>_TESTS</code> and make it into a list of dictionaries. The tests will then be named <code>TestDownload.test_YourExtractor</code>, <code>TestDownload.test_YourExtractor_1</code>, <code>TestDownload.test_YourExtractor_2</code>, etc. Note that tests with <code>only_matching</code> key in test’s dict are not counted in.</p></li><li><p>Have a look at <a href="https://github.com/ytdl-org/youtube-dl/blob/master/youtube_dl/extractor/common.py" target="_blank" rel="noopener"><code>youtube_dl/extractor/common.py</code></a> for possible helper methods and a <a href="https://github.com/ytdl-org/youtube-dl/blob/7f41a598b3fba1bcab2817de64a08941200aa3c8/youtube_dl/extractor/common.py#L94-L303" target="_blank" rel="noopener">detailed description of what your extractor should and may return</a>. Add tests and code for as many as you want.</p></li><li><p>Make sure your code follows <a href="#youtube-dl-coding-conventions">youtube-dl coding conventions</a> and check the code with <a href="http://flake8.pycqa.org/en/latest/index.html#quickstart" target="_blank" rel="noopener">flake8</a>:</p><pre><code>$ flake8 youtube_dl/extractor/yourextractor.py</code></pre></li><li><p>Make sure your code works under all <a href="https://www.python.org/" target="_blank" rel="noopener">Python</a> versions claimed supported by youtube-dl, namely 2.6, 2.7, and 3.2+.</p></li><li><p>When the tests pass, <a href="https://git-scm.com/docs/git-add" target="_blank" rel="noopener">add</a> the new files and <a href="https://git-scm.com/docs/git-commit" target="_blank" rel="noopener">commit</a> them and <a href="https://git-scm.com/docs/git-push" target="_blank" rel="noopener">push</a> the result, like this:</p><pre><code>$ git add youtube_dl/extractor/extractors.py$ git add youtube_dl/extractor/yourextractor.py$ git commit -m &apos;[yourextractor] Add new extractor&apos;$ git push origin yourextractor</code></pre></li><li><p>Finally, <a href="https://help.github.com/articles/creating-a-pull-request" target="_blank" rel="noopener">create a pull request</a>. We’ll then review and merge it.</p></li></ol><p>In any case, thank you very much for your contributions!</p><h2 id="youtube-dl-coding-conventions"><a href="#youtube-dl-coding-conventions" class="headerlink" title="youtube-dl coding conventions"></a>youtube-dl coding conventions</h2><p>This section introduces a guide lines for writing idiomatic, robust and future-proof extractor code.</p><p>Extractors are very fragile by nature since they depend on the layout of the source data provided by 3rd party media hosters out of your control and this layout tends to change. As an extractor implementer your task is not only to write code that will extract media links and metadata correctly but also to minimize dependency on the source’s layout and even to make the code foresee potential future changes and be ready for that. This is important because it will allow the extractor not to break on minor layout changes thus keeping old youtube-dl versions working. Even though this breakage issue is easily fixed by emitting a new version of youtube-dl with a fix incorporated, all the previous versions become broken in all repositories and distros’ packages that may not be so prompt in fetching the update from us. Needless to say, some non rolling release distros may never receive an update at all.</p><h3 id="Mandatory-and-optional-metafields"><a href="#Mandatory-and-optional-metafields" class="headerlink" title="Mandatory and optional metafields"></a>Mandatory and optional metafields</h3><p>For extraction to work youtube-dl relies on metadata your extractor extracts and provides to youtube-dl expressed by an <a href="https://github.com/ytdl-org/youtube-dl/blob/7f41a598b3fba1bcab2817de64a08941200aa3c8/youtube_dl/extractor/common.py#L94-L303" target="_blank" rel="noopener">information dictionary</a> or simply <em>info dict</em>. Only the following meta fields in the <em>info dict</em> are considered mandatory for a successful extraction process by youtube-dl:</p><ul><li><code>id</code> (media identifier)</li><li><code>title</code> (media title)</li><li><code>url</code> (media download URL) or <code>formats</code></li></ul><p>In fact only the last option is technically mandatory (i.e. if you can’t figure out the download location of the media the extraction does not make any sense). But by convention youtube-dl also treats <code>id</code> and <code>title</code> as mandatory. Thus the aforementioned metafields are the critical data that the extraction does not make any sense without and if any of them fail to be extracted then the extractor is considered completely broken.</p><p><a href="https://github.com/ytdl-org/youtube-dl/blob/7f41a598b3fba1bcab2817de64a08941200aa3c8/youtube_dl/extractor/common.py#L188-L303" target="_blank" rel="noopener">Any field</a> apart from the aforementioned ones are considered <strong>optional</strong>. That means that extraction should be <strong>tolerant</strong> to situations when sources for these fields can potentially be unavailable (even if they are always available at the moment) and <strong>future-proof</strong> in order not to break the extraction of general purpose mandatory fields.</p><h4 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h4><p>Say you have some source dictionary <code>meta</code> that you’ve fetched as JSON with HTTP request and it has a key <code>summary</code>:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">meta = self._download_json(url, video_id)</span><br></pre></td></tr></table></figure><p>Assume at this point <code>meta</code>‘s layout is:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="string">"summary"</span>: <span class="string">"some fancy summary text"</span>,</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Assume you want to extract <code>summary</code> and put it into the resulting info dict as <code>description</code>. Since <code>description</code> is an optional meta field you should be ready that this key may be missing from the <code>meta</code> dict, so that you should extract it like:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">description = meta.get(<span class="string">'summary'</span>)  <span class="comment"># correct</span></span><br></pre></td></tr></table></figure><p>and not like:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">description = meta[<span class="string">'summary'</span>]  <span class="comment"># incorrect</span></span><br></pre></td></tr></table></figure><p>The latter will break extraction process with <code>KeyError</code> if <code>summary</code> disappears from <code>meta</code> at some later time but with the former approach extraction will just go ahead with <code>description</code> set to <code>None</code> which is perfectly fine (remember <code>None</code> is equivalent to the absence of data).</p><p>Similarly, you should pass <code>fatal=False</code> when extracting optional data from a webpage with <code>_search_regex</code>, <code>_html_search_regex</code> or similar methods, for instance:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">description = self._search_regex(</span><br><span class="line">    <span class="string">r'&lt;span[^&gt;]+id="title"[^&gt;]*&gt;([^&lt;]+)&lt;'</span>,</span><br><span class="line">    webpage, <span class="string">'description'</span>, fatal=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure><p>With <code>fatal</code> set to <code>False</code> if <code>_search_regex</code> fails to extract <code>description</code> it will emit a warning and continue extraction.</p><p>You can also pass <code>default=&lt;some fallback value&gt;</code>, for example:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">description = self._search_regex(</span><br><span class="line">    <span class="string">r'&lt;span[^&gt;]+id="title"[^&gt;]*&gt;([^&lt;]+)&lt;'</span>,</span><br><span class="line">    webpage, <span class="string">'description'</span>, default=<span class="literal">None</span>)</span><br></pre></td></tr></table></figure><p>On failure this code will silently continue the extraction with <code>description</code> set to <code>None</code>. That is useful for metafields that may or may not be present.</p><h3 id="Provide-fallbacks"><a href="#Provide-fallbacks" class="headerlink" title="Provide fallbacks"></a>Provide fallbacks</h3><p>When extracting metadata try to do so from multiple sources. For example if <code>title</code> is present in several places, try extracting from at least some of them. This makes it more future-proof in case some of the sources become unavailable.</p><h4 id="Example-1"><a href="#Example-1" class="headerlink" title="Example"></a>Example</h4><p>Say <code>meta</code> from the previous example has a <code>title</code> and you are about to extract it. Since <code>title</code> is a mandatory meta field you should end up with something like:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">title = meta[<span class="string">'title'</span>]</span><br></pre></td></tr></table></figure><p>If <code>title</code> disappears from <code>meta</code> in future due to some changes on the hoster’s side the extraction would fail since <code>title</code> is mandatory. That’s expected.</p><p>Assume that you have some another source you can extract <code>title</code> from, for example <code>og:title</code> HTML meta of a <code>webpage</code>. In this case you can provide a fallback scenario:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">title = meta.get(<span class="string">'title'</span>) <span class="keyword">or</span> self._og_search_title(webpage)</span><br></pre></td></tr></table></figure><p>This code will try to extract from <code>meta</code> first and if it fails it will try extracting <code>og:title</code> from a <code>webpage</code>.</p><h3 id="Regular-expressions"><a href="#Regular-expressions" class="headerlink" title="Regular expressions"></a>Regular expressions</h3><h4 id="Don’t-capture-groups-you-don’t-use"><a href="#Don’t-capture-groups-you-don’t-use" class="headerlink" title="Don’t capture groups you don’t use"></a>Don’t capture groups you don’t use</h4><p>Capturing group must be an indication that it’s used somewhere in the code. Any group that is not used must be non capturing.</p><h5 id="Example-2"><a href="#Example-2" class="headerlink" title="Example"></a>Example</h5><p>Don’t capture id attribute name here since you can’t use it for anything anyway.</p><p>Correct:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">r'(?:id|ID)=(?P&lt;id&gt;\d+)'</span></span><br></pre></td></tr></table></figure><p>Incorrect:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">r'(id|ID)=(?P&lt;id&gt;\d+)'</span></span><br></pre></td></tr></table></figure><h4 id="Make-regular-expressions-relaxed-and-flexible"><a href="#Make-regular-expressions-relaxed-and-flexible" class="headerlink" title="Make regular expressions relaxed and flexible"></a>Make regular expressions relaxed and flexible</h4><p>When using regular expressions try to write them fuzzy, relaxed and flexible, skipping insignificant parts that are more likely to change, allowing both single and double quotes for quoted values and so on.</p><h5 id="Example-3"><a href="#Example-3" class="headerlink" title="Example"></a>Example</h5><p>Say you need to extract <code>title</code> from the following HTML code:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">"position: absolute; left: 910px; width: 90px; float: right; z-index: 9999;"</span> <span class="attr">class</span>=<span class="string">"title"</span>&gt;</span>some fancy title<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><p>The code for that task should look similar to:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">title = self._search_regex(</span><br><span class="line">    <span class="string">r'&lt;span[^&gt;]+class="title"[^&gt;]*&gt;([^&lt;]+)'</span>, webpage, <span class="string">'title'</span>)</span><br></pre></td></tr></table></figure><p>Or even better:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">title = self._search_regex(</span><br><span class="line">    <span class="string">r'&lt;span[^&gt;]+class=(["\'])title\1[^&gt;]*&gt;(?P&lt;title&gt;[^&lt;]+)'</span>,</span><br><span class="line">    webpage, <span class="string">'title'</span>, group=<span class="string">'title'</span>)</span><br></pre></td></tr></table></figure><p>Note how you tolerate potential changes in the <code>style</code> attribute’s value or switch from using double quotes to single for <code>class</code> attribute: </p><p>The code definitely should not look like:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">title = self._search_regex(</span><br><span class="line">    <span class="string">r'&lt;span style="position: absolute; left: 910px; width: 90px; float: right; z-index: 9999;" class="title"&gt;(.*?)&lt;/span&gt;'</span>,</span><br><span class="line">    webpage, <span class="string">'title'</span>, group=<span class="string">'title'</span>)</span><br></pre></td></tr></table></figure><h3 id="Long-lines-policy"><a href="#Long-lines-policy" class="headerlink" title="Long lines policy"></a>Long lines policy</h3><p>There is a soft limit to keep lines of code under 80 characters long. This means it should be respected if possible and if it does not make readability and code maintenance worse.</p><p>For example, you should <strong>never</strong> split long string literals like URLs or some other often copied entities over multiple lines to fit this limit:</p><p>Correct:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'https://www.youtube.com/watch?v=FqZTN594JQw&amp;list=PLMYEtVRpaqY00V9W81Cwmzp6N6vZqfUKD4'</span></span><br></pre></td></tr></table></figure><p>Incorrect:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'https://www.youtube.com/watch?v=FqZTN594JQw&amp;list='</span></span><br><span class="line"><span class="string">'PLMYEtVRpaqY00V9W81Cwmzp6N6vZqfUKD4'</span></span><br></pre></td></tr></table></figure><h3 id="Inline-values"><a href="#Inline-values" class="headerlink" title="Inline values"></a>Inline values</h3><p>Extracting variables is acceptable for reducing code duplication and improving readability of complex expressions. However, you should avoid extracting variables used only once and moving them to opposite parts of the extractor file, which makes reading the linear flow difficult.</p><h4 id="Example-4"><a href="#Example-4" class="headerlink" title="Example"></a>Example</h4><p>Correct:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">title = self._html_search_regex(<span class="string">r'&lt;title&gt;([^&lt;]+)&lt;/title&gt;'</span>, webpage, <span class="string">'title'</span>)</span><br></pre></td></tr></table></figure><p>Incorrect:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">TITLE_RE = <span class="string">r'&lt;title&gt;([^&lt;]+)&lt;/title&gt;'</span></span><br><span class="line"><span class="comment"># ...some lines of code...</span></span><br><span class="line">title = self._html_search_regex(TITLE_RE, webpage, <span class="string">'title'</span>)</span><br></pre></td></tr></table></figure><h3 id="Collapse-fallbacks"><a href="#Collapse-fallbacks" class="headerlink" title="Collapse fallbacks"></a>Collapse fallbacks</h3><p>Multiple fallback values can quickly become unwieldy. Collapse multiple fallback values into a single expression via a list of patterns.</p><h4 id="Example-5"><a href="#Example-5" class="headerlink" title="Example"></a>Example</h4><p>Good:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">description = self._html_search_meta(</span><br><span class="line">    [<span class="string">'og:description'</span>, <span class="string">'description'</span>, <span class="string">'twitter:description'</span>],</span><br><span class="line">    webpage, <span class="string">'description'</span>, default=<span class="literal">None</span>)</span><br></pre></td></tr></table></figure><p>Unwieldy:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">description = (</span><br><span class="line">    self._og_search_description(webpage, default=<span class="literal">None</span>)</span><br><span class="line">    <span class="keyword">or</span> self._html_search_meta(<span class="string">'description'</span>, webpage, default=<span class="literal">None</span>)</span><br><span class="line">    <span class="keyword">or</span> self._html_search_meta(<span class="string">'twitter:description'</span>, webpage, default=<span class="literal">None</span>))</span><br></pre></td></tr></table></figure><p>Methods supporting list of patterns are: <code>_search_regex</code>, <code>_html_search_regex</code>, <code>_og_search_property</code>, <code>_html_search_meta</code>.</p><h3 id="Trailing-parentheses"><a href="#Trailing-parentheses" class="headerlink" title="Trailing parentheses"></a>Trailing parentheses</h3><p>Always move trailing parentheses after the last argument.</p><h4 id="Example-6"><a href="#Example-6" class="headerlink" title="Example"></a>Example</h4><p>Correct:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">lambda</span> x: x[<span class="string">'ResultSet'</span>][<span class="string">'Result'</span>][<span class="number">0</span>][<span class="string">'VideoUrlSet'</span>][<span class="string">'VideoUrl'</span>],</span><br><span class="line">list)</span><br></pre></td></tr></table></figure><p>Incorrect:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">    <span class="keyword">lambda</span> x: x[<span class="string">'ResultSet'</span>][<span class="string">'Result'</span>][<span class="number">0</span>][<span class="string">'VideoUrlSet'</span>][<span class="string">'VideoUrl'</span>],</span><br><span class="line">    list,</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h3 id="Use-convenience-conversion-and-parsing-functions"><a href="#Use-convenience-conversion-and-parsing-functions" class="headerlink" title="Use convenience conversion and parsing functions"></a>Use convenience conversion and parsing functions</h3><p>Wrap all extracted numeric data into safe functions from <a href="https://github.com/ytdl-org/youtube-dl/blob/master/youtube_dl/utils.py" target="_blank" rel="noopener"><code>youtube_dl/utils.py</code></a>: <code>int_or_none</code>, <code>float_or_none</code>. Use them for string to number conversions as well.</p><p>Use <code>url_or_none</code> for safe URL processing.</p><p>Use <code>try_get</code> for safe metadata extraction from parsed JSON.</p><p>Use <code>unified_strdate</code> for uniform <code>upload_date</code> or any <code>YYYYMMDD</code> meta field extraction, <code>unified_timestamp</code> for uniform <code>timestamp</code> extraction, <code>parse_filesize</code> for <code>filesize</code> extraction, <code>parse_count</code> for count meta fields extraction, <code>parse_resolution</code>, <code>parse_duration</code> for <code>duration</code> extraction, <code>parse_age_limit</code> for <code>age_limit</code> extraction. </p><p>Explore <a href="https://github.com/ytdl-org/youtube-dl/blob/master/youtube_dl/utils.py" target="_blank" rel="noopener"><code>youtube_dl/utils.py</code></a> for more useful convenience functions.</p><h4 id="More-examples"><a href="#More-examples" class="headerlink" title="More examples"></a>More examples</h4><h5 id="Safely-extract-optional-description-from-parsed-JSON"><a href="#Safely-extract-optional-description-from-parsed-JSON" class="headerlink" title="Safely extract optional description from parsed JSON"></a>Safely extract optional description from parsed JSON</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">description = try_get(response, <span class="keyword">lambda</span> x: x[<span class="string">'result'</span>][<span class="string">'video'</span>][<span class="number">0</span>][<span class="string">'summary'</span>], compat_str)</span><br></pre></td></tr></table></figure><h5 id="Safely-extract-more-optional-metadata"><a href="#Safely-extract-more-optional-metadata" class="headerlink" title="Safely extract more optional metadata"></a>Safely extract more optional metadata</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">video = try_get(response, <span class="keyword">lambda</span> x: x[<span class="string">'result'</span>][<span class="string">'video'</span>][<span class="number">0</span>], dict) <span class="keyword">or</span> &#123;&#125;</span><br><span class="line">description = video.get(<span class="string">'summary'</span>)</span><br><span class="line">duration = float_or_none(video.get(<span class="string">'durationMs'</span>), scale=<span class="number">1000</span>)</span><br><span class="line">view_count = int_or_none(video.get(<span class="string">'views'</span>))</span><br></pre></td></tr></table></figure><h1 id="EMBEDDING-YOUTUBE-DL"><a href="#EMBEDDING-YOUTUBE-DL" class="headerlink" title="EMBEDDING YOUTUBE-DL"></a>EMBEDDING YOUTUBE-DL</h1><p>youtube-dl makes the best effort to be a good command-line program, and thus should be callable from any programming language. If you encounter any problems parsing its output, feel free to <a href="https://github.com/ytdl-org/youtube-dl/issues/new" target="_blank" rel="noopener">create a report</a>.</p><p>From a Python program, you can embed youtube-dl in a more powerful fashion, like this:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> unicode_literals</span><br><span class="line"><span class="keyword">import</span> youtube_dl</span><br><span class="line"></span><br><span class="line">ydl_opts = &#123;&#125;</span><br><span class="line"><span class="keyword">with</span> youtube_dl.YoutubeDL(ydl_opts) <span class="keyword">as</span> ydl:</span><br><span class="line">    ydl.download([<span class="string">'https://www.youtube.com/watch?v=BaW_jenozKc'</span>])</span><br></pre></td></tr></table></figure><p>Most likely, you’ll want to use various options. For a list of options available, have a look at <a href="https://github.com/ytdl-org/youtube-dl/blob/3e4cedf9e8cd3157df2457df7274d0c842421945/youtube_dl/YoutubeDL.py#L137-L312" target="_blank" rel="noopener"><code>youtube_dl/YoutubeDL.py</code></a>. For a start, if you want to intercept youtube-dl’s output, set a <code>logger</code> object.</p><p>Here’s a more complete example of a program that outputs only errors (and a short message after the download is finished), and downloads/converts the video to an mp3 file:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> unicode_literals</span><br><span class="line"><span class="keyword">import</span> youtube_dl</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyLogger</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">debug</span><span class="params">(self, msg)</span>:</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">warning</span><span class="params">(self, msg)</span>:</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">error</span><span class="params">(self, msg)</span>:</span></span><br><span class="line">        print(msg)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_hook</span><span class="params">(d)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> d[<span class="string">'status'</span>] == <span class="string">'finished'</span>:</span><br><span class="line">        print(<span class="string">'Done downloading, now converting ...'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ydl_opts = &#123;</span><br><span class="line">    <span class="string">'format'</span>: <span class="string">'bestaudio/best'</span>,</span><br><span class="line">    <span class="string">'postprocessors'</span>: [&#123;</span><br><span class="line">        <span class="string">'key'</span>: <span class="string">'FFmpegExtractAudio'</span>,</span><br><span class="line">        <span class="string">'preferredcodec'</span>: <span class="string">'mp3'</span>,</span><br><span class="line">        <span class="string">'preferredquality'</span>: <span class="string">'192'</span>,</span><br><span class="line">    &#125;],</span><br><span class="line">    <span class="string">'logger'</span>: MyLogger(),</span><br><span class="line">    <span class="string">'progress_hooks'</span>: [my_hook],</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">with</span> youtube_dl.YoutubeDL(ydl_opts) <span class="keyword">as</span> ydl:</span><br><span class="line">    ydl.download([<span class="string">'https://www.youtube.com/watch?v=BaW_jenozKc'</span>])</span><br></pre></td></tr></table></figure><h1 id="BUGS"><a href="#BUGS" class="headerlink" title="BUGS"></a>BUGS</h1><p>Bugs and suggestions should be reported at: <a href="https://github.com/ytdl-org/youtube-dl/issues" target="_blank" rel="noopener">https://github.com/ytdl-org/youtube-dl/issues</a>. Unless you were prompted to or there is another pertinent reason (e.g. GitHub fails to accept the bug report), please do not send bug reports via personal email. For discussions, join us in the IRC channel <a href="irc://chat.freenode.net/#youtube-dl" target="_blank" rel="noopener">#youtube-dl</a> on freenode (<a href="https://webchat.freenode.net/?randomnick=1&channels=youtube-dl" target="_blank" rel="noopener">webchat</a>).</p><p><strong>Please include the full output of youtube-dl when run with <code>-v</code></strong>, i.e. <strong>add</strong> <code>-v</code> flag to <strong>your command line</strong>, copy the <strong>whole</strong> output and post it in the issue body wrapped in ``` for better formatting. It should look similar to this:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ youtube-dl -v &lt;your command line&gt;</span><br><span class="line">[debug] System config: []</span><br><span class="line">[debug] User config: []</span><br><span class="line">[debug] Command-line args: [u&apos;-v&apos;, u&apos;https://www.youtube.com/watch?v=BaW_jenozKcj&apos;]</span><br><span class="line">[debug] Encodings: locale cp1251, fs mbcs, out cp866, pref cp1251</span><br><span class="line">[debug] youtube-dl version 2015.12.06</span><br><span class="line">[debug] Git HEAD: 135392e</span><br><span class="line">[debug] Python version 2.6.6 - Windows-2003Server-5.2.3790-SP2</span><br><span class="line">[debug] exe versions: ffmpeg N-75573-g1d0487f, ffprobe N-75573-g1d0487f, rtmpdump 2.4</span><br><span class="line">[debug] Proxy map: &#123;&#125;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p><strong>Do not post screenshots of verbose logs; only plain text is acceptable.</strong></p><p>The output (including the first lines) contains important debugging information. Issues without the full output are often not reproducible and therefore do not get solved in short order, if ever.</p><p>Please re-read your issue once again to avoid a couple of common mistakes (you can and should use this as a checklist):</p><h3 id="Is-the-description-of-the-issue-itself-sufficient"><a href="#Is-the-description-of-the-issue-itself-sufficient" class="headerlink" title="Is the description of the issue itself sufficient?"></a>Is the description of the issue itself sufficient?</h3><p>We often get issue reports that we cannot really decipher. While in most cases we eventually get the required information after asking back multiple times, this poses an unnecessary drain on our resources. Many contributors, including myself, are also not native speakers, so we may misread some parts.</p><p>So please elaborate on what feature you are requesting, or what bug you want to be fixed. Make sure that it’s obvious</p><ul><li>What the problem is</li><li>How it could be fixed</li><li>How your proposed solution would look like</li></ul><p>If your report is shorter than two lines, it is almost certainly missing some of these, which makes it hard for us to respond to it. We’re often too polite to close the issue outright, but the missing info makes misinterpretation likely. As a committer myself, I often get frustrated by these issues, since the only possible way for me to move forward on them is to ask for clarification over and over.</p><p>For bug reports, this means that your report should contain the <em>complete</em> output of youtube-dl when called with the <code>-v</code> flag. The error message you get for (most) bugs even says so, but you would not believe how many of our bug reports do not contain this information.</p><p>If your server has multiple IPs or you suspect censorship, adding <code>--call-home</code> may be a good idea to get more diagnostics. If the error is <code>ERROR: Unable to extract ...</code> and you cannot reproduce it from multiple countries, add <code>--dump-pages</code> (warning: this will yield a rather large output, redirect it to the file <code>log.txt</code> by adding <code>&gt;log.txt 2&gt;&amp;1</code> to your command-line) or upload the <code>.dump</code> files you get when you add <code>--write-pages</code> <a href="https://gist.github.com/" target="_blank" rel="noopener">somewhere</a>.</p><p><strong>Site support requests must contain an example URL</strong>. An example URL is a URL you might want to download, like <code>https://www.youtube.com/watch?v=BaW_jenozKc</code>. There should be an obvious video present. Except under very special circumstances, the main page of a video service (e.g. <code>https://www.youtube.com/</code>) is <em>not</em> an example URL.</p><h3 id="Are-you-using-the-latest-version"><a href="#Are-you-using-the-latest-version" class="headerlink" title="Are you using the latest version?"></a>Are you using the latest version?</h3><p>Before reporting any issue, type <code>youtube-dl -U</code>. This should report that you’re up-to-date. About 20% of the reports we receive are already fixed, but people are using outdated versions. This goes for feature requests as well.</p><h3 id="Is-the-issue-already-documented"><a href="#Is-the-issue-already-documented" class="headerlink" title="Is the issue already documented?"></a>Is the issue already documented?</h3><p>Make sure that someone has not already opened the issue you’re trying to open. Search at the top of the window or browse the <a href="https://github.com/ytdl-org/youtube-dl/search?type=Issues" target="_blank" rel="noopener">GitHub Issues</a> of this repository. If there is an issue, feel free to write something along the lines of “This affects me as well, with version 2015.01.01. Here is some more information on the issue: …”. While some issues may be old, a new post into them often spurs rapid activity.</p><h3 id="Why-are-existing-options-not-enough"><a href="#Why-are-existing-options-not-enough" class="headerlink" title="Why are existing options not enough?"></a>Why are existing options not enough?</h3><p>Before requesting a new feature, please have a quick peek at <a href="https://github.com/ytdl-org/youtube-dl/blob/master/README.md#options" target="_blank" rel="noopener">the list of supported options</a>. Many feature requests are for features that actually exist already! Please, absolutely do show off your work in the issue report and detail how the existing similar options do <em>not</em> solve your problem.</p><h3 id="Is-there-enough-context-in-your-bug-report"><a href="#Is-there-enough-context-in-your-bug-report" class="headerlink" title="Is there enough context in your bug report?"></a>Is there enough context in your bug report?</h3><p>People want to solve problems, and often think they do us a favor by breaking down their larger problems (e.g. wanting to skip already downloaded files) to a specific request (e.g. requesting us to look whether the file exists before downloading the info page). However, what often happens is that they break down the problem into two steps: One simple, and one impossible (or extremely complicated one).</p><p>We are then presented with a very complicated request when the original problem could be solved far easier, e.g. by recording the downloaded video IDs in a separate file. To avoid this, you must include the greater context where it is non-obvious. In particular, every feature request that does not consist of adding support for a new site should contain a use case scenario that explains in what situation the missing feature would be useful.</p><h3 id="Does-the-issue-involve-one-problem-and-one-problem-only"><a href="#Does-the-issue-involve-one-problem-and-one-problem-only" class="headerlink" title="Does the issue involve one problem, and one problem only?"></a>Does the issue involve one problem, and one problem only?</h3><p>Some of our users seem to think there is a limit of issues they can or should open. There is no limit of issues they can or should open. While it may seem appealing to be able to dump all your issues into one ticket, that means that someone who solves one of your issues cannot mark the issue as closed. Typically, reporting a bunch of issues leads to the ticket lingering since nobody wants to attack that behemoth, until someone mercifully splits the issue into multiple ones.</p><p>In particular, every site support request issue should only pertain to services at one site (generally under a common domain, but always using the same backend technology). Do not request support for vimeo user videos, White house podcasts, and Google Plus pages in the same issue. Also, make sure that you don’t post bug reports alongside feature requests. As a rule of thumb, a feature request does not include outputs of youtube-dl that are not immediately related to the feature at hand. Do not post reports of a network error alongside the request for a new video service.</p><h3 id="Is-anyone-going-to-need-the-feature"><a href="#Is-anyone-going-to-need-the-feature" class="headerlink" title="Is anyone going to need the feature?"></a>Is anyone going to need the feature?</h3><p>Only post features that you (or an incapacitated friend you can personally talk to) require. Do not post features because they seem like a good idea. If they are really useful, they will be requested by someone who requires them.</p><h3 id="Is-your-question-about-youtube-dl"><a href="#Is-your-question-about-youtube-dl" class="headerlink" title="Is your question about youtube-dl?"></a>Is your question about youtube-dl?</h3><p>It may sound strange, but some bug reports we receive are completely unrelated to youtube-dl and relate to a different, or even the reporter’s own, application. Please make sure that you are actually using youtube-dl. If you are using a UI for youtube-dl, report the bug to the maintainer of the actual application providing the UI. On the other hand, if your UI for youtube-dl fails in some way you believe is related to youtube-dl, by all means, go ahead and report the bug.</p><h1 id="COPYRIGHT"><a href="#COPYRIGHT" class="headerlink" title="COPYRIGHT"></a>COPYRIGHT</h1><p>youtube-dl is released into the public domain by the copyright holders.</p><p>This README file was originally written by <a href="https://github.com/dbbolton" target="_blank" rel="noopener">Daniel Bolton</a> and is likewise released into the public domain.</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> youtube-dl </tag>
            
            <tag> 视频下载 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP输出视频流和音频流</title>
      <link href="/2019/10/20/PHP%E8%BE%93%E5%87%BA%E8%A7%86%E9%A2%91%E6%B5%81%E5%92%8C%E9%9F%B3%E9%A2%91%E6%B5%81.html"/>
      <url>/2019/10/20/PHP%E8%BE%93%E5%87%BA%E8%A7%86%E9%A2%91%E6%B5%81%E5%92%8C%E9%9F%B3%E9%A2%91%E6%B5%81.html</url>
      
        <content type="html"><![CDATA[<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *播放文件</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">play</span><span class="params">($file)</span></span>&#123;</span><br><span class="line">    $size = filesize($file); </span><br><span class="line">    <span class="comment">// 获取视频类型</span></span><br><span class="line">    preg_match(<span class="string">"/[0-9a-zA-Z]*$/"</span>,$file,$res);</span><br><span class="line">    $hz=strtolower($res[<span class="number">0</span>]);</span><br><span class="line">    <span class="keyword">switch</span> ($hz) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">'m4a'</span>:</span><br><span class="line">            header(<span class="string">"Content-type: audio/x-m4a"</span>); </span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">'mp3'</span>:</span><br><span class="line">            header(<span class="string">"Content-type: audio/mpeg"</span>); </span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">'mp4'</span>:</span><br><span class="line">            header(<span class="string">"Content-type: video/mp4"</span>); </span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">'flv'</span>:</span><br><span class="line">            header(<span class="string">"Content-type: flv-application/octet-stream"</span>); </span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">'mkv'</span>:</span><br><span class="line">            header(<span class="string">"Content-type: video/x-matroska"</span>); </span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            header(<span class="string">"Content-type: video/x-matroska"</span>); </span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">            </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    header(<span class="string">"Accept-Ranges: bytes"</span>); </span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>($_SERVER[<span class="string">'HTTP_RANGE'</span>]))&#123; </span><br><span class="line">        header(<span class="string">"HTTP/1.1 206 Partial Content"</span>); </span><br><span class="line">        <span class="keyword">list</span>($name, $range) = explode(<span class="string">"="</span>, $_SERVER[<span class="string">'HTTP_RANGE'</span>]); </span><br><span class="line">        <span class="keyword">list</span>($begin, $end) =explode(<span class="string">"-"</span>, $range); </span><br><span class="line">        <span class="keyword">if</span>($end == <span class="number">0</span>)&#123; </span><br><span class="line">            $end = $size - <span class="number">1</span>; </span><br><span class="line">        &#125; </span><br><span class="line">    &#125;<span class="keyword">else</span> &#123; </span><br><span class="line">        $begin = <span class="number">0</span>; $end = $size - <span class="number">1</span>; </span><br><span class="line">    &#125; </span><br><span class="line">    header(<span class="string">"Content-Length: "</span> . ($end - $begin + <span class="number">1</span>)); </span><br><span class="line">    header(<span class="string">"Content-Disposition: filename="</span>.basename($file)); </span><br><span class="line">    header(<span class="string">"Content-Range: bytes "</span>.$begin.<span class="string">"-"</span>.$end.<span class="string">"/"</span>.$size); </span><br><span class="line">    $fp = fopen($file, <span class="string">'rb'</span>); </span><br><span class="line">    fseek($fp, $begin); </span><br><span class="line">    <span class="keyword">while</span>(!feof($fp)) &#123; </span><br><span class="line">        $p = min(<span class="number">1024</span>, $end - $begin + <span class="number">1</span>); </span><br><span class="line">        $begin += $p; </span><br><span class="line">        <span class="keyword">echo</span> fread($fp, $p); </span><br><span class="line">    &#125; </span><br><span class="line">    fclose($fp);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> 视频播放 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP转换大小写的函数</title>
      <link href="/2019/10/20/PHP%E8%BD%AC%E6%8D%A2%E5%A4%A7%E5%B0%8F%E5%86%99%E7%9A%84%E5%87%BD%E6%95%B0.html"/>
      <url>/2019/10/20/PHP%E8%BD%AC%E6%8D%A2%E5%A4%A7%E5%B0%8F%E5%86%99%E7%9A%84%E5%87%BD%E6%95%B0.html</url>
      
        <content type="html"><![CDATA[<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ucwords(string) <span class="comment">//每个单词首字母大写</span></span><br><span class="line">ucfirst(string) <span class="comment">//字符串第一个字母大写</span></span><br><span class="line">strtolower(string) <span class="comment">//字符串转换成小写</span></span><br><span class="line">strtoupper(string) <span class="comment">//字符串转换成大写</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> 转换大小写 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OpenCC-简体繁体转换</title>
      <link href="/2019/10/20/OpenCC-%E7%AE%80%E4%BD%93%E7%B9%81%E4%BD%93%E8%BD%AC%E6%8D%A2.html"/>
      <url>/2019/10/20/OpenCC-%E7%AE%80%E4%BD%93%E7%B9%81%E4%BD%93%E8%BD%AC%E6%8D%A2.html</url>
      
        <content type="html"><![CDATA[<p>最近使用中文维基百科数据训练Word2Vec时，发现数据里面包含了很多繁体字，这就很尴尬了。这时候就知道OpenCC的强大了。哈哈，本来打算直接使用python里面的opencc模块的，但是在安装，编译opencc时遇到了各种错误。花费了很长时间，终于安装成功，但是文本处理起来效率很低。最终选择了直接在linux下安装OpenCC，处理的效率着实安慰了我受伤的心 – 很快，特别快。<br>好啦，接下来总结下OpenCC的安装方法，万一以后又用到它了呢？主要参考这篇博客：</p><h5 id="1-检查下linux环境编译环境"><a href="#1-检查下linux环境编译环境" class="headerlink" title="1.检查下linux环境编译环境"></a>1.检查下linux环境编译环境</h5><p>检查是否已经安装cmake以及git，如果没有，那就通过yum安装好。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install cmake</span><br><span class="line">yum install git</span><br></pre></td></tr></table></figure><h5 id="2-克隆OpennCC开源项目。"><a href="#2-克隆OpennCC开源项目。" class="headerlink" title="2.克隆OpennCC开源项目。"></a>2.克隆OpennCC开源项目。</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/BYVoid/OpenCC</span><br></pre></td></tr></table></figure><h5 id="3-编译OpenCC"><a href="#3-编译OpenCC" class="headerlink" title="3.编译OpenCC"></a>3.编译OpenCC</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> OpenCC</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><h5 id="4-创建libopencc-so-2链接"><a href="#4-创建libopencc-so-2链接" class="headerlink" title="4.创建libopencc.so.2链接"></a>4.创建libopencc.so.2链接</h5><p>如果不知道libopencc.so.2的路径，可以通过find / -name libopencc.so.2查找。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -s /usr/lib/libopencc.so.2 /usr/lib64/libopencc.so.2</span><br></pre></td></tr></table></figure><h5 id="5-检查OpenCC版本号"><a href="#5-检查OpenCC版本号" class="headerlink" title="5.检查OpenCC版本号"></a>5.检查OpenCC版本号</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">opencc --version</span><br></pre></td></tr></table></figure><h5 id="6-测试用例"><a href="#6-测试用例" class="headerlink" title="6.测试用例"></a>6.测试用例</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 繁体转简体</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'歐幾里得 西元前三世紀的希臘數學家'</span> | opencc -c t2s</span><br><span class="line">欧几里得 西元前三世纪的希腊数学家</span><br><span class="line"><span class="comment"># 简体转繁体</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'欧几里得 西元前三世纪的希腊数学家'</span> | opencc -c s2t</span><br><span class="line">歐幾里得 西元前三世紀的希臘數學家</span><br><span class="line"><span class="comment"># 可以通过以下方式直接对文件进行繁简转换</span></span><br><span class="line">opencc -i zhwiki_raw.txt -o zhwiki_t2s.txt -c t2s.json</span><br></pre></td></tr></table></figure><h5 id="7-引用参考"><a href="#7-引用参考" class="headerlink" title="7.引用参考"></a>7.引用参考</h5><ul><li>文章来自：<a href="https://www.jianshu.com/p/834a02d085b6" target="_blank" rel="noopener">https://www.jianshu.com/p/834a02d085b6</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 繁简体转换 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Wordpresss迁移更改域名</title>
      <link href="/2019/10/19/Wordpresss%E8%BF%81%E7%A7%BB%E6%9B%B4%E6%94%B9%E5%9F%9F%E5%90%8D.html"/>
      <url>/2019/10/19/Wordpresss%E8%BF%81%E7%A7%BB%E6%9B%B4%E6%94%B9%E5%9F%9F%E5%90%8D.html</url>
      
        <content type="html"><![CDATA[<p>Wordpress在站点更换的的时候需要将数据库中的旧域名替换为新的域名就使用下面的SQL命令：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> wp_options <span class="keyword">SET</span> option_value = <span class="keyword">replace</span>(option_value, <span class="string">'旧域名'</span>,<span class="string">'新域名'</span>) ;</span><br><span class="line"><span class="keyword">UPDATE</span> wp_posts <span class="keyword">SET</span> post_content = <span class="keyword">replace</span>(post_content, <span class="string">'旧域名'</span>,<span class="string">'新域名'</span>) ;</span><br><span class="line"><span class="keyword">UPDATE</span> wp_comments <span class="keyword">SET</span> comment_content = <span class="keyword">replace</span>(comment_content, <span class="string">'旧域名'</span>, <span class="string">'新域名'</span>) ;</span><br><span class="line"><span class="keyword">UPDATE</span> wp_comments <span class="keyword">SET</span> comment_author_url = <span class="keyword">replace</span>(comment_author_url, <span class="string">'旧域名'</span>, <span class="string">'新域名'</span>) ;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> WordPress </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WordPress </tag>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP执行Shell时添加环境变量</title>
      <link href="/2019/10/19/PHP%E6%89%A7%E8%A1%8CShell%E6%97%B6%E6%B7%BB%E5%8A%A0%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F.html"/>
      <url>/2019/10/19/PHP%E6%89%A7%E8%A1%8CShell%E6%97%B6%E6%B7%BB%E5%8A%A0%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F.html</url>
      
        <content type="html"><![CDATA[<p>PHP执行Shell时添加环境变量解决中文显示问题</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 添加环境变量</span></span><br><span class="line">putenv(<span class="string">"PATH=/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/usr/local/go/bin:/home/www/goProject/bin:/home/www/.local/bin:/home/www/bin"</span>);</span><br><span class="line"> putenv(<span class="string">"LANG=zh_CN.UTF-8"</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> Shell </tag>
            
            <tag> 环境变量 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mac Atom 常用快捷键</title>
      <link href="/2019/10/19/Mac-Atom-%E5%B8%B8%E7%94%A8%E5%BF%AB%E6%8D%B7%E9%94%AE.html"/>
      <url>/2019/10/19/Mac-Atom-%E5%B8%B8%E7%94%A8%E5%BF%AB%E6%8D%B7%E9%94%AE.html</url>
      
        <content type="html"><![CDATA[<h4 id="快捷键列表："><a href="#快捷键列表：" class="headerlink" title="快捷键列表："></a>快捷键列表：</h4><ul><li>cmd + shift + p    打开命令菜单</li><li>cmd + t    模糊搜索工作目录下的文件</li><li>cmt + b    搜索已经打开的文件</li><li>ctrl + 0    焦点移动到文件目录</li><li>cmd + \    隐藏左侧目录树</li><li>ctrl + [    目录中展开结点</li><li>ctrl + ]    目录中缩起结点</li><li>d / a / m    对目录选中的结点进行 删除 / 添加 / 移动</li><li>cmd + f    搜索 当前文件</li><li>cmd + shift + f    搜索 目录</li><li>cmd + shift + r    搜索 tag 前提是安装ctags (brew install ctags)且生成tags (ctags -R src/)</li><li>alt + cmd + [    收起 所在代码块</li><li>alt + cmd + ]    展开 所在代码块</li><li>alt + cmd + shift + [    收起 当前所有代码块</li><li>alt + cmd + shift + ]    展开 当前所有代码块</li><li>cmd + ,    settings</li><li>cmd + k … 方向键    切分面板</li><li>cmd + k … cmd + 方向    切换面板</li><li>cmd + w    关闭当前工作面板</li><li>alt + cmd + 左右    切换tab文件选项卡</li><li>Ctrl + Shift + M  MarkDown预览</li></ul>]]></content>
      
      
      <categories>
          
          <category> Mac </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Atom </tag>
            
            <tag> Mac </tag>
            
            <tag> 快捷键 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mac 打开『允许未知来源』</title>
      <link href="/2019/10/19/Mac-%E6%89%93%E5%BC%80%E3%80%8E%E5%85%81%E8%AE%B8%E6%9C%AA%E7%9F%A5%E6%9D%A5%E6%BA%90%E3%80%8F.html"/>
      <url>/2019/10/19/Mac-%E6%89%93%E5%BC%80%E3%80%8E%E5%85%81%E8%AE%B8%E6%9C%AA%E7%9F%A5%E6%9D%A5%E6%BA%90%E3%80%8F.html</url>
      
        <content type="html"><![CDATA[<p>打开『允许未知来源』选项，只需在终端输入 :</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo spctl --master-disable</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Mac </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mac 下隐藏显示隐藏文件</title>
      <link href="/2019/10/19/Mac-%E4%B8%8B%E9%9A%90%E8%97%8F%E6%98%BE%E7%A4%BA%E9%9A%90%E8%97%8F%E6%96%87%E4%BB%B6.html"/>
      <url>/2019/10/19/Mac-%E4%B8%8B%E9%9A%90%E8%97%8F%E6%98%BE%E7%A4%BA%E9%9A%90%E8%97%8F%E6%96%87%E4%BB%B6.html</url>
      
        <content type="html"><![CDATA[<p>我们可以使用快捷键⌘⇧.(Command + Shift + .) 来快速（在 Finder 中）显示和隐藏隐藏文件了。</p>]]></content>
      
      
      <categories>
          
          <category> Mac </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mac 教程：告别 Dashboard，教你禁用 OS X 下的仪表盘教程</title>
      <link href="/2019/10/19/Mac-%E6%95%99%E7%A8%8B%EF%BC%9A%E5%91%8A%E5%88%AB-Dashboard%EF%BC%8C%E6%95%99%E4%BD%A0%E7%A6%81%E7%94%A8-OS-X-%E4%B8%8B%E7%9A%84%E4%BB%AA%E8%A1%A8%E7%9B%98%E6%95%99%E7%A8%8B.html"/>
      <url>/2019/10/19/Mac-%E6%95%99%E7%A8%8B%EF%BC%9A%E5%91%8A%E5%88%AB-Dashboard%EF%BC%8C%E6%95%99%E4%BD%A0%E7%A6%81%E7%94%A8-OS-X-%E4%B8%8B%E7%9A%84%E4%BB%AA%E8%A1%A8%E7%9B%98%E6%95%99%E7%A8%8B.html</url>
      
        <content type="html"><![CDATA[<p>禁用仪表盘命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">defaults write com.apple.dashboard mcx-disabled -boolean YES &amp;&amp; killall Dock</span><br></pre></td></tr></table></figure><p>重新开启仪表盘的解决方案</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">defaults write com.apple.dashboard mcx-disabled -boolean NO &amp;&amp; killall Dock</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Mac </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mac OSX终端走shadowsocks代理</title>
      <link href="/2019/10/19/Mac-OSX%E7%BB%88%E7%AB%AF%E8%B5%B0shadowsocks%E4%BB%A3%E7%90%86.html"/>
      <url>/2019/10/19/Mac-OSX%E7%BB%88%E7%AB%AF%E8%B5%B0shadowsocks%E4%BB%A3%E7%90%86.html</url>
      
        <content type="html"><![CDATA[<p>shadowsocks设置为：</p><p>打开shadowsocks<br>自动代理模式<br>以zsh作为说明</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ vim ~/.zshrc  </span><br><span class="line">添加如下代理配置:</span><br><span class="line"><span class="comment"># proxy list</span></span><br><span class="line"><span class="built_in">alias</span> proxy=<span class="string">'export all_proxy=socks5://127.0.0.1:1080'</span></span><br><span class="line"><span class="built_in">alias</span> unproxy=<span class="string">'unset all_proxy'</span></span><br><span class="line">:wq保存退出</span><br><span class="line">➜  ~ <span class="built_in">source</span> ~/.zshrc</span><br></pre></td></tr></table></figure><p>使用proxy前先查看下当前的ip地址：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ curl ip.cn</span><br><span class="line">当前 IP：112.64.xxx.xx 来自：上海市 联通</span><br><span class="line">或者</span><br><span class="line"></span><br><span class="line">~ curl cip.cc</span><br><span class="line">IP: 140.206.97.42</span><br><span class="line">地址: 中国  上海</span><br><span class="line"></span><br><span class="line">数据二: 上海市 | 联通</span><br><span class="line"></span><br><span class="line">URL: http://www.cip.cc/140.206.97.42</span><br><span class="line">执行:</span><br><span class="line"></span><br><span class="line">➜  ~ proxy</span><br><span class="line">➜  ~ curl ip.cn</span><br><span class="line">当前 IP：47.89.xx.xxx 来自：香港特别行政区 阿里云</span><br><span class="line">如果ip.cn不能用，可以换个类似的站点查询</span><br><span class="line"></span><br><span class="line">~ curl cip.cc</span><br><span class="line">IP: 45.78.47.19</span><br><span class="line">地址: 美国  加利福尼亚</span><br><span class="line"></span><br><span class="line">数据二: 美国 | 加利福尼亚州洛杉矶市 IT7 Networks</span><br><span class="line"></span><br><span class="line">URL: http://www.cip.cc/45.78.47.19</span><br><span class="line">没问题，终端走了代理，brew update顺畅了- -</span><br></pre></td></tr></table></figure><p>如果不需要走代理，执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ unproxy   </span><br><span class="line">➜  ~ curl ip.cn</span><br><span class="line">当前 IP：112.64.xxx.xx 来自：上海市 联通</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Mac </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mac </tag>
            
            <tag> 代理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《两只老虎》练习曲</title>
      <link href="/2019/10/19/%E3%80%8A%E4%B8%A4%E5%8F%AA%E8%80%81%E8%99%8E%E3%80%8B%E7%BB%83%E4%B9%A0%E6%9B%B2.html"/>
      <url>/2019/10/19/%E3%80%8A%E4%B8%A4%E5%8F%AA%E8%80%81%E8%99%8E%E3%80%8B%E7%BB%83%E4%B9%A0%E6%9B%B2.html</url>
      
        <content type="html"><![CDATA[<p><a href="https://s2.ax1x.com/2019/10/19/Kny99s.jpg" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/10/19/Kny99s.jpg" alt="Kny99s.jpg"></a></p>]]></content>
      
      
      <categories>
          
          <category> 吉他谱 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 吉他谱 </tag>
            
            <tag> 两只老虎 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《小星星》练习曲</title>
      <link href="/2019/10/19/%E3%80%8A%E5%B0%8F%E6%98%9F%E6%98%9F%E3%80%8B%E7%BB%83%E4%B9%A0%E6%9B%B2.html"/>
      <url>/2019/10/19/%E3%80%8A%E5%B0%8F%E6%98%9F%E6%98%9F%E3%80%8B%E7%BB%83%E4%B9%A0%E6%9B%B2.html</url>
      
        <content type="html"><![CDATA[<p><a href="https://s2.ax1x.com/2019/10/19/KnyShj.png" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/10/19/KnyShj.png" alt="KnyShj.png"></a></p>]]></content>
      
      
      <categories>
          
          <category> 吉他谱 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 吉他谱 </tag>
            
            <tag> 小星星 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《兰花草》C大调简单版吉他谱</title>
      <link href="/2019/10/19/%E3%80%8A%E5%85%B0%E8%8A%B1%E8%8D%89%E3%80%8BC%E5%A4%A7%E8%B0%83%E7%AE%80%E5%8D%95%E7%89%88%E5%90%89%E4%BB%96%E8%B0%B1.html"/>
      <url>/2019/10/19/%E3%80%8A%E5%85%B0%E8%8A%B1%E8%8D%89%E3%80%8BC%E5%A4%A7%E8%B0%83%E7%AE%80%E5%8D%95%E7%89%88%E5%90%89%E4%BB%96%E8%B0%B1.html</url>
      
        <content type="html"><![CDATA[<p><a href="https://s2.ax1x.com/2019/10/19/KnDdg0.png" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/10/19/KnDdg0.png" alt="KnDdg0.png"></a></p>]]></content>
      
      
      <categories>
          
          <category> 吉他谱 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 兰花草 </tag>
            
            <tag> 吉他谱 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《红豆》王菲C大调简单吉他谱</title>
      <link href="/2019/10/19/%E3%80%8A%E7%BA%A2%E8%B1%86%E3%80%8B%E7%8E%8B%E8%8F%B2C%E5%A4%A7%E8%B0%83%E7%AE%80%E5%8D%95%E5%90%89%E4%BB%96%E8%B0%B1.html"/>
      <url>/2019/10/19/%E3%80%8A%E7%BA%A2%E8%B1%86%E3%80%8B%E7%8E%8B%E8%8F%B2C%E5%A4%A7%E8%B0%83%E7%AE%80%E5%8D%95%E5%90%89%E4%BB%96%E8%B0%B1.html</url>
      
        <content type="html"><![CDATA[<p><a href="https://s2.ax1x.com/2019/10/19/KnDBuT.gif" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/10/19/KnDBuT.gif" alt="KnDBuT.gif"></a><br><a href="https://s2.ax1x.com/2019/10/19/KnDwvV.gif" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/10/19/KnDwvV.gif" alt="KnDwvV.gif"></a></p>]]></content>
      
      
      <categories>
          
          <category> 吉他谱 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 吉他谱 </tag>
            
            <tag> 红豆 </tag>
            
            <tag> 王菲 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《同桌的你》老狼C大调简单版吉他谱</title>
      <link href="/2019/10/19/%E3%80%8A%E5%90%8C%E6%A1%8C%E7%9A%84%E4%BD%A0%E3%80%8B%E8%80%81%E7%8B%BCC%E5%A4%A7%E8%B0%83%E7%AE%80%E5%8D%95%E7%89%88%E5%90%89%E4%BB%96%E8%B0%B1.html"/>
      <url>/2019/10/19/%E3%80%8A%E5%90%8C%E6%A1%8C%E7%9A%84%E4%BD%A0%E3%80%8B%E8%80%81%E7%8B%BCC%E5%A4%A7%E8%B0%83%E7%AE%80%E5%8D%95%E7%89%88%E5%90%89%E4%BB%96%E8%B0%B1.html</url>
      
        <content type="html"><![CDATA[<p><a href="https://s2.ax1x.com/2019/10/19/KnDR81.png" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/10/19/KnDR81.png" alt="KnDR81.png"></a><br><a href="https://s2.ax1x.com/2019/10/19/KnD6UJ.png" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/10/19/KnD6UJ.png" alt="KnD6UJ.png"></a></p>]]></content>
      
      
      <categories>
          
          <category> 吉他谱 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 吉他谱 </tag>
            
            <tag> 同桌的你 </tag>
            
            <tag> 老狼 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《童年》罗大佑C大调简单版吉他谱</title>
      <link href="/2019/10/19/%E3%80%8A%E7%AB%A5%E5%B9%B4%E3%80%8B%E7%BD%97%E5%A4%A7%E4%BD%91C%E5%A4%A7%E8%B0%83%E7%AE%80%E5%8D%95%E7%89%88%E5%90%89%E4%BB%96%E8%B0%B1.html"/>
      <url>/2019/10/19/%E3%80%8A%E7%AB%A5%E5%B9%B4%E3%80%8B%E7%BD%97%E5%A4%A7%E4%BD%91C%E5%A4%A7%E8%B0%83%E7%AE%80%E5%8D%95%E7%89%88%E5%90%89%E4%BB%96%E8%B0%B1.html</url>
      
        <content type="html"><![CDATA[<p><a href="https://s2.ax1x.com/2019/10/19/KnDc59.png" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/10/19/KnDc59.png" alt="KnDc59.png"></a><br><a href="https://s2.ax1x.com/2019/10/19/KnDWgx.png" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/10/19/KnDWgx.png" alt="KnDWgx.png"></a></p>]]></content>
      
      
      <categories>
          
          <category> 吉他谱 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 吉他谱 </tag>
            
            <tag> 罗大佑 </tag>
            
            <tag> 童年 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《好久不见》陈奕迅C大调简单版吉他谱</title>
      <link href="/2019/10/19/%E3%80%8A%E5%A5%BD%E4%B9%85%E4%B8%8D%E8%A7%81%E3%80%8B%E9%99%88%E5%A5%95%E8%BF%85C%E5%A4%A7%E8%B0%83%E7%AE%80%E5%8D%95%E7%89%88%E5%90%89%E4%BB%96%E8%B0%B1.html"/>
      <url>/2019/10/19/%E3%80%8A%E5%A5%BD%E4%B9%85%E4%B8%8D%E8%A7%81%E3%80%8B%E9%99%88%E5%A5%95%E8%BF%85C%E5%A4%A7%E8%B0%83%E7%AE%80%E5%8D%95%E7%89%88%E5%90%89%E4%BB%96%E8%B0%B1.html</url>
      
        <content type="html"><![CDATA[<p><a href="https://s2.ax1x.com/2019/10/19/KnDyE4.gif" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/10/19/KnDyE4.gif" alt="KnDyE4.gif"></a><br><a href="https://s2.ax1x.com/2019/10/19/KnDrbF.gif" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/10/19/KnDrbF.gif" alt="KnDrbF.gif"></a></p>]]></content>
      
      
      <categories>
          
          <category> 吉他谱 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 吉他谱 </tag>
            
            <tag> 好久不见 </tag>
            
            <tag> 陈奕迅 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux基本操作</title>
      <link href="/2019/10/19/Linux%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C.html"/>
      <url>/2019/10/19/Linux%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C.html</url>
      
        <content type="html"><![CDATA[<h4 id="一、命令"><a href="#一、命令" class="headerlink" title="一、命令"></a>一、命令</h4><h5 id="1、查看命令位置"><a href="#1、查看命令位置" class="headerlink" title="1、查看命令位置"></a>1、查看命令位置</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">which</span>  命令</span><br></pre></td></tr></table></figure><h5 id="2、用来查看一个命令或者文件所在的绝对路径"><a href="#2、用来查看一个命令或者文件所在的绝对路径" class="headerlink" title="2、用来查看一个命令或者文件所在的绝对路径"></a>2、用来查看一个命令或者文件所在的绝对路径</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">whereis 命令</span><br></pre></td></tr></table></figure><h4 id="二、目录和文件"><a href="#二、目录和文件" class="headerlink" title="二、目录和文件"></a>二、目录和文件</h4><h5 id="1、创建多级目录"><a href="#1、创建多级目录" class="headerlink" title="1、创建多级目录"></a>1、创建多级目录</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /aa/bb/cc</span><br></pre></td></tr></table></figure><h5 id="2、查看各文件夹大小命令"><a href="#2、查看各文件夹大小命令" class="headerlink" title="2、查看各文件夹大小命令"></a>2、查看各文件夹大小命令</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">du -h --max-depth=1</span><br></pre></td></tr></table></figure><h4 id="三、压缩和解压缩"><a href="#三、压缩和解压缩" class="headerlink" title="三、压缩和解压缩"></a>三、压缩和解压缩</h4><h5 id="1、gzip"><a href="#1、gzip" class="headerlink" title="1、gzip"></a>1、gzip</h5><ul><li>压缩后的格式为：*.gz</li><li>这种压缩方式不能保存原文件；且不能压缩目录<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#压缩</span></span><br><span class="line">[root@localhost tmp]<span class="comment"># gzip buodo</span></span><br><span class="line">[root@localhost tmp]<span class="comment"># ls</span></span><br><span class="line">buodo.gz</span><br><span class="line"><span class="comment">#解压</span></span><br><span class="line">[root@localhost tmp]<span class="comment"># gunzip buodo.gz </span></span><br><span class="line">[root@localhost tmp]<span class="comment"># ls</span></span><br><span class="line">buodo</span><br></pre></td></tr></table></figure><h5 id="2、tar和tar-gz"><a href="#2、tar和tar-gz" class="headerlink" title="2、tar和tar.gz"></a>2、tar和tar.gz</h5></li><li>命令选项：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-z(gzip)      用gzip来压缩/解压缩文件</span><br><span class="line">-j(bzip2)     用bzip2来压缩/解压缩文件</span><br><span class="line">-v(verbose)   详细报告tar处理的文件信息</span><br><span class="line">-c(create)    创建新的档案文件</span><br><span class="line">-x(extract)   解压缩文件或目录</span><br><span class="line">-f(file)      使用档案文件或设备，这个选项通常是必选的。</span><br></pre></td></tr></table></figure></li><li>命令举例<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#压缩</span></span><br><span class="line">[root@localhost tmp]<span class="comment"># tar -zvcf buodo.tar.gz buodo</span></span><br><span class="line">[root@localhost tmp]<span class="comment"># tar -jvcf buodo.tar.bz2 buodo </span></span><br><span class="line"><span class="comment">#解压</span></span><br><span class="line">[root@localhost tmp]<span class="comment"># tar -zvxf buodo.tar.gz </span></span><br><span class="line">[root@localhost tmp]<span class="comment"># tar -jvxf buodo.tar.bz2</span></span><br></pre></td></tr></table></figure><h5 id="3、zip"><a href="#3、zip" class="headerlink" title="3、zip"></a>3、zip</h5></li><li>与gzip相比：1）可以压缩目录； 2）可以保留原文件；</li><li>选项：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-r(recursive)    递归压缩目录内的所有文件和目录</span><br></pre></td></tr></table></figure></li><li>命令举例：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#压缩和解压文件</span></span><br><span class="line">[root@localhost tmp]<span class="comment"># zip boduo.zip boduo</span></span><br><span class="line">[root@localhost tmp]<span class="comment"># unzip boduo.zip</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#压缩和解压目录</span></span><br><span class="line">[root@localhost tmp]<span class="comment"># zip -r Demo.zip Demo</span></span><br><span class="line">  adding: Demo/ (stored 0%)</span><br><span class="line">  adding: Demo/Test2/ (stored 0%)</span><br><span class="line">  adding: Demo/Test1/ (stored 0%)</span><br><span class="line">  adding: Demo/Test1/test4 (stored 0%)</span><br><span class="line">  adding: Demo/test3 (stored 0%)</span><br><span class="line">[root@localhost tmp]<span class="comment"># unzip Demo.zip </span></span><br><span class="line">Archive:  Demo.zip</span><br><span class="line">   creating: Demo/</span><br><span class="line">   creating: Demo/Test2/</span><br><span class="line">   creating: Demo/Test1/</span><br><span class="line"> extracting: Demo/Test1/test4        </span><br><span class="line"> extracting: Demo/test3</span><br></pre></td></tr></table></figure><h5 id="4、bzip2"><a href="#4、bzip2" class="headerlink" title="4、bzip2"></a>4、bzip2</h5></li><li>压缩后的格式：.bz2</li><li>参数:<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-k    产生压缩文件后保留原文件</span><br></pre></td></tr></table></figure></li><li>命令举例：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#压缩</span></span><br><span class="line">[root@localhost tmp]<span class="comment"># bzip2 boduo</span></span><br><span class="line">[root@localhost tmp]<span class="comment"># bzip2 -k boduo</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#解压</span></span><br><span class="line">[root@localhost tmp]<span class="comment"># bunzip2 boduo.bz2</span></span><br></pre></td></tr></table></figure><h5 id="1、tar压缩排除某个文件夹"><a href="#1、tar压缩排除某个文件夹" class="headerlink" title="1、tar压缩排除某个文件夹"></a>1、tar压缩排除某个文件夹</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">我们以tomcat 为例，打包的时候我们要排除 tomcat/logs 目录，命令如下：</span><br><span class="line">tar -zcvf tomcat.tar.gz --exclude=tomcat/logs tomcat</span><br><span class="line">如果要排除多个目录，增加 --exclude 即可，如下命令排除logs和libs两个目录及文件xiaoshan.txt：</span><br><span class="line">tar -zcvf tomcat.tar.gz --exclude=tomcat/logs --exclude=tomcat/libs --exclude=tomcat/xiaoshan.txt tomcat</span><br></pre></td></tr></table></figure></li></ul><h4 id="四、网络"><a href="#四、网络" class="headerlink" title="四、网络"></a>四、网络</h4><h5 id="1、查看linux的端口使用情况"><a href="#1、查看linux的端口使用情况" class="headerlink" title="1、查看linux的端口使用情况"></a>1、查看linux的端口使用情况</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -tln</span><br></pre></td></tr></table></figure><h5 id="2、查看已经连接的服务端口（ESTABLISHED）"><a href="#2、查看已经连接的服务端口（ESTABLISHED）" class="headerlink" title="2、查看已经连接的服务端口（ESTABLISHED）"></a>2、查看已经连接的服务端口（ESTABLISHED）</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -a</span><br></pre></td></tr></table></figure><h5 id="3、查看所有的服务端口（LISTEN，ESTABLISHED）"><a href="#3、查看所有的服务端口（LISTEN，ESTABLISHED）" class="headerlink" title="3、查看所有的服务端口（LISTEN，ESTABLISHED）"></a>3、查看所有的服务端口（LISTEN，ESTABLISHED）</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -ap</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Rclone挂载Google Drive</title>
      <link href="/2019/10/19/Rclone%E6%8C%82%E8%BD%BDGoogle-Drive.html"/>
      <url>/2019/10/19/Rclone%E6%8C%82%E8%BD%BDGoogle-Drive.html</url>
      
        <content type="html"><![CDATA[<p>先新建一个目录,用于挂载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /mnt/moonagic</span><br></pre></td></tr></table></figure><p>挂载命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rclone mount moonagic: /mnt/moonagic --allow-other --allow-non-empty --vfs-cache-mode writes</span><br></pre></td></tr></table></figure><blockquote><p>其中moonagic:代表该服务中的目录，这里表示将名为moonagic的整个Google Drive盘都挂载。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Goole Drive </tag>
            
            <tag> Rclone </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Shell判断文件是否存在</title>
      <link href="/2019/10/19/Shell%E5%88%A4%E6%96%AD%E6%96%87%E4%BB%B6%E6%98%AF%E5%90%A6%E5%AD%98%E5%9C%A8.html"/>
      <url>/2019/10/19/Shell%E5%88%A4%E6%96%AD%E6%96%87%E4%BB%B6%E6%98%AF%E5%90%A6%E5%AD%98%E5%9C%A8.html</url>
      
        <content type="html"><![CDATA[<p>shell判断文件,目录是否存在或者具有权限 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh </span></span><br><span class="line">myPath=<span class="string">"/var/log/httpd/"</span> </span><br><span class="line">myFile=<span class="string">"/var /log/httpd/access.log"</span></span><br></pre></td></tr></table></figure><p>这里的-x 参数判断$myPath是否存在并且是否具有可执行权限<br> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> [ ! -x <span class="string">"<span class="variable">$myPath</span>"</span>]; <span class="keyword">then</span> </span><br><span class="line">mkdir <span class="string">"<span class="variable">$myPath</span>"</span> </span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><br>这里的-d 参数判断$myPath是否存在<br> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> [ ! -d <span class="string">"<span class="variable">$myPath</span>"</span>]; <span class="keyword">then</span> </span><br><span class="line">mkdir <span class="string">"<span class="variable">$myPath</span>"</span> </span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><br>这里的-f参数判断$myFile是否存在 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> [ ! -f <span class="string">"<span class="variable">$myFile</span>"</span> ]; <span class="keyword">then</span> </span><br><span class="line">touch <span class="string">"<span class="variable">$myFile</span>"</span> </span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><p>其他参数还有-n,-n是判断一个变量是否是否有值 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> [ ! -n <span class="string">"<span class="variable">$myVar</span>"</span> ]; <span class="keyword">then</span> </span><br><span class="line"><span class="built_in">echo</span> <span class="string">"<span class="variable">$myVar</span> is empty"</span> </span><br><span class="line"><span class="built_in">exit</span> 0 </span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><p>两个变量判断是否相等 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> [ <span class="string">"<span class="variable">$var1</span>"</span> = <span class="string">"<span class="variable">$var2</span>"</span> ]; <span class="keyword">then</span> </span><br><span class="line"><span class="built_in">echo</span> <span class="string">'$var1 eq $var2'</span> </span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line"><span class="built_in">echo</span> <span class="string">'$var1 not eq $var2'</span> </span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><p>-f 和-e的区别<br>Conditional Logic on Files </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">-a file exists. </span><br><span class="line">-b file exists and is a block special file. </span><br><span class="line">-c file exists and is a character special file. </span><br><span class="line">-d file exists and is a directory. </span><br><span class="line">-e file exists (just the same as -a). </span><br><span class="line">-f file exists and is a regular file. </span><br><span class="line">-g file exists and has its setgid(2) bit <span class="built_in">set</span>. </span><br><span class="line">-G file exists and has the same group ID as this process. </span><br><span class="line">-k file exists and has its sticky bit <span class="built_in">set</span>. </span><br><span class="line">-L file exists and is a symbolic link. </span><br><span class="line">-n string length is not zero. </span><br><span class="line">-o Named option is <span class="built_in">set</span> on. </span><br><span class="line">-O file exists and is owned by the user ID of this process. </span><br><span class="line">-p file exists and is a first <span class="keyword">in</span>, first out (FIFO) special file or </span><br><span class="line">named pipe. </span><br><span class="line">-r file exists and is readable by the current process. </span><br><span class="line">-s file exists and has a size greater than zero. </span><br><span class="line">-S file exists and is a socket. </span><br><span class="line">-t file descriptor number fildes is open and associated with a </span><br><span class="line">terminal device. </span><br><span class="line">-u file exists and has its setuid(2) bit <span class="built_in">set</span>. </span><br><span class="line">-w file exists and is writable by the current process. </span><br><span class="line">-x file exists and is executable by the current process. </span><br><span class="line">-z string length is zero.</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Shell </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Shell </tag>
            
            <tag> 文件判断 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>crontab定时任务语法</title>
      <link href="/2019/10/19/crontab%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1%E8%AF%AD%E6%B3%95.html"/>
      <url>/2019/10/19/crontab%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1%E8%AF%AD%E6%B3%95.html</url>
      
        <content type="html"><![CDATA[<p>crontab命令 被用来提交和管理用户的需要周期性执行的任务，与windows下的计划任务类似，当安装完成操作系统后，默认会安装此服务工具，并且会自动启动crond进程，crond进程每分钟会定期检查是否有要执行的任务，如果有要执行的任务，则自动执行该任务。</p><a id="more"></a><h4 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h4><p>crontab(选项)(参数)</p><h4 id="选项"><a href="#选项" class="headerlink" title="选项"></a>选项</h4><ul><li>-e：编辑该用户的计时器设置；</li><li>-l：列出该用户的计时器设置；</li><li>-r：删除该用户的计时器设置；</li><li>-u&lt;用户名称&gt;：指定要设定计时器的用户名称。</li></ul><h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><p>crontab文件：指定包含待执行任务的crontab文件。</p><h4 id="crontab文件的含义："><a href="#crontab文件的含义：" class="headerlink" title="crontab文件的含义："></a>crontab文件的含义：</h4><p>用户所建立的crontab文件中，每一行都代表一项任务，每行的每个字段代表一项设置，它的格式共分为六个字段，前五段是时间设定段，第六段是要执行的命令段，格式如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">minute   hour   day   month   week   <span class="built_in">command</span>     顺序：分 时 日 月 周</span><br></pre></td></tr></table></figure><p>其中：</p><ul><li>minute： 表示分钟，可以是从0到59之间的任何整数。</li><li>hour：表示小时，可以是从0到23之间的任何整数。</li><li>day：表示日期，可以是从1到31之间的任何整数。</li><li>month：表示月份，可以是从1到12之间的任何整数。</li><li>week：表示星期几，可以是从0到7之间的任何整数，这里的0或7代表星期日。</li><li>command：要执行的命令，可以是系统命令，也可以是自己编写的脚本文件。</li></ul><p>在以上各个字段中，还可以使用以下特殊字符：</p><ul><li>星号（*）：代表所有可能的值，例如month字段如果是星号，则表示在满足其它字段的制约条件后每月都执行该命令操作。</li><li>逗号（,）：可以用逗号隔开的值指定一个列表范围，例如，“1,2,5,7,8,9”</li><li>中杠（-）：可以用整数之间的中杠表示一个整数范围，例如“2-6”表示“2,3,4,5,6”</li><li>正斜线（/）：可以用正斜线指定时间的间隔频率，例如“0-23/2”表示每两小时执行一次。同时正斜线可以和星号一起使用，例如*/10，如果用在minute字段，表示每十分钟执行一次。</li></ul><h4 id="crond服务管理"><a href="#crond服务管理" class="headerlink" title="crond服务管理"></a>crond服务管理</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">/sbin/service crond start    <span class="comment"># 启动服务</span></span><br><span class="line">/sbin/service crond stop     <span class="comment"># 关闭服务</span></span><br><span class="line">/sbin/service crond restart  <span class="comment"># 重启服务</span></span><br><span class="line">/sbin/service crond reload   <span class="comment"># 重新载入配置</span></span><br></pre></td></tr></table></figure><h5 id="查看crontab服务状态："><a href="#查看crontab服务状态：" class="headerlink" title="查看crontab服务状态："></a>查看crontab服务状态：</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service crond status</span><br></pre></td></tr></table></figure><h5 id="手动启动crontab服务："><a href="#手动启动crontab服务：" class="headerlink" title="手动启动crontab服务："></a>手动启动crontab服务：</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service crond start</span><br></pre></td></tr></table></figure><h5 id="查看crontab服务是否已设置为开机启动，执行命令："><a href="#查看crontab服务是否已设置为开机启动，执行命令：" class="headerlink" title="查看crontab服务是否已设置为开机启动，执行命令："></a>查看crontab服务是否已设置为开机启动，执行命令：</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ntsysv</span><br></pre></td></tr></table></figure><h5 id="加入开机自动启动："><a href="#加入开机自动启动：" class="headerlink" title="加入开机自动启动："></a>加入开机自动启动：</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chkconfig –level 35 crond on</span><br></pre></td></tr></table></figure><h4 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h4><p>每1分钟执行一次command</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">* * * * * <span class="built_in">command</span></span><br></pre></td></tr></table></figure><p>每小时的第3和第15分钟执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3,15 * * * * <span class="built_in">command</span></span><br></pre></td></tr></table></figure><p>在上午8点到11点的第3和第15分钟执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3,15 8-11 * * * <span class="built_in">command</span></span><br></pre></td></tr></table></figure><p>每隔两天的上午8点到11点的第3和第15分钟执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3,15 8-11 */2 * * <span class="built_in">command</span></span><br></pre></td></tr></table></figure><p>每个星期一的上午8点到11点的第3和第15分钟执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3,15 8-11 * * 1 <span class="built_in">command</span></span><br></pre></td></tr></table></figure><p>每晚的21:30重启smb</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">30 21 * * * /etc/init.d/smb restart</span><br></pre></td></tr></table></figure><p>每月1、10、22日的4 : 45重启smb</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">45 4 1,10,22 * * /etc/init.d/smb restart</span><br></pre></td></tr></table></figure><p>每周六、周日的1:10重启smb</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10 1 * * 6,0 /etc/init.d/smb restart</span><br></pre></td></tr></table></figure><p>每天18 : 00至23 : 00之间每隔30分钟重启smb</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0,30 18-23 * * * /etc/init.d/smb restart</span><br></pre></td></tr></table></figure><p>每星期六的晚上11:00 pm重启smb</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0 23 * * 6 /etc/init.d/smb restart</span><br></pre></td></tr></table></figure><p>每一小时重启smb</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">* */1 * * * /etc/init.d/smb restart</span><br></pre></td></tr></table></figure><p>晚上11点到早上7点之间，每隔一小时重启smb</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">* 23-7/1 * * * /etc/init.d/smb restart</span><br></pre></td></tr></table></figure><p>每月的4号与每周一到周三的11点重启smb</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0 11 4 * mon-wed /etc/init.d/smb restart</span><br></pre></td></tr></table></figure><p>一月一号的4点重启smb</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0 4 1 jan * /etc/init.d/smb restart</span><br></pre></td></tr></table></figure><p>每小时执行/etc/cron.hourly目录内的脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">01 * * * * root run-parts /etc/cron.hourly</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 定时任务 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Shell if判断</title>
      <link href="/2019/10/19/Shell-if%E5%88%A4%E6%96%AD.html"/>
      <url>/2019/10/19/Shell-if%E5%88%A4%E6%96%AD.html</url>
      
        <content type="html"><![CDATA[<h4 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h4><p> 无论什么编程语言都离不开条件判断。SHELL也不例外。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> list <span class="keyword">then</span> </span><br><span class="line">  <span class="keyword">do</span> something here </span><br><span class="line"><span class="keyword">elif</span> list <span class="keyword">then</span> </span><br><span class="line">  <span class="keyword">do</span> another thing here </span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line"> <span class="keyword">do</span> something <span class="keyword">else</span> here </span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><h4 id="示例"><a href="#示例" class="headerlink" title="示例:"></a>示例:</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">SYSTEM=`uname -s`    <span class="comment">#获取操作系统类型，我本地是linux</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$SYSTEM</span> = <span class="string">"Linux"</span> ] ; <span class="keyword">then</span>     <span class="comment">#如果是linux的话打印linux字符串</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Linux"</span> </span><br><span class="line"><span class="keyword">elif</span> [ <span class="variable">$SYSTEM</span> = <span class="string">"FreeBSD"</span> ] ; <span class="keyword">then</span>   </span><br><span class="line"><span class="built_in">echo</span> <span class="string">"FreeBSD"</span> </span><br><span class="line"><span class="keyword">elif</span> [ <span class="variable">$SYSTEM</span> = <span class="string">"Solaris"</span> ] ; <span class="keyword">then</span> </span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Solaris"</span> </span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line"><span class="built_in">echo</span> <span class="string">"What?"</span> </span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><p><strong>基本上和其他脚本语言一样。没有太大区别。不过值得注意的是。[]里面的条件判断。</strong></p><h4 id="类型判断"><a href="#类型判断" class="headerlink" title="类型判断"></a>类型判断</h4><h5 id="1、字符串判断"><a href="#1、字符串判断" class="headerlink" title="1、字符串判断"></a>1、字符串判断</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">str1 = str2　　　　　　当两个串有相同内容、长度时为真 </span><br><span class="line">str1 != str2　　　　　 当串str1和str2不等时为真 </span><br><span class="line">-n str1　　　　　　　 当串的长度大于0时为真(串非空) </span><br><span class="line">-z str1　　　　　　　 当串的长度为0时为真(空串) </span><br><span class="line">str1　　　　　　　　   当串str1为非空时为真</span><br></pre></td></tr></table></figure><h5 id="2、数字的判断"><a href="#2、数字的判断" class="headerlink" title="2、数字的判断"></a>2、数字的判断</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">int1 -eq int2　　　　两数相等为真 </span><br><span class="line">int1 -ne int2　　　　两数不等为真 </span><br><span class="line">int1 -gt int2　　　　int1大于int2为真 </span><br><span class="line">int1 -ge int2　　　　int1大于等于int2为真 </span><br><span class="line">int1 -lt int2　　　　int1小于int2为真 </span><br><span class="line">int1 -le int2　　　　int1小于等于int2为真</span><br></pre></td></tr></table></figure><h5 id="3、文件的判断"><a href="#3、文件的判断" class="headerlink" title="3、文件的判断"></a>3、文件的判断</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">-r file　　　　　用户可读为真 </span><br><span class="line">-w file　　　　　用户可写为真 </span><br><span class="line">-x file　　　　　用户可执行为真 </span><br><span class="line">-f file　　　　　文件为正规文件为真 </span><br><span class="line">-d file　　　　　文件为目录为真 </span><br><span class="line">-c file　　　　　文件为字符特殊文件为真 </span><br><span class="line">-b file　　　　　文件为块特殊文件为真 </span><br><span class="line">-s file　　　　　文件大小非0时为真 </span><br><span class="line">-t file　　　　　当文件描述符(默认为1)指定的设备为终端时为真</span><br></pre></td></tr></table></figure><h5 id="4、复杂逻辑判断"><a href="#4、复杂逻辑判断" class="headerlink" title="4、复杂逻辑判断"></a>4、复杂逻辑判断</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-a 　 　　　　　 与 </span><br><span class="line">-o　　　　　　　 或 </span><br><span class="line">!　　　　　　　　非</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Shell </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Shell </tag>
            
            <tag> 条件判断 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Shell提取字符串</title>
      <link href="/2019/10/19/Shell%E6%8F%90%E5%8F%96%E5%AD%97%E7%AC%A6%E4%B8%B2.html"/>
      <url>/2019/10/19/Shell%E6%8F%90%E5%8F%96%E5%AD%97%E7%AC%A6%E4%B8%B2.html</url>
      
        <content type="html"><![CDATA[<p>鼓励将SHELL中变量全部用{} 括起来，便于阅读，防止变量名产生歧义。<br>假设我们定义了一个变量为：<br>file=/dir1/dir2/dir3/my.file.txt<br>我们可以用 ${ } 分别替换获得不同的值： </p><h4 id="格式："><a href="#格式：" class="headerlink" title="格式："></a>格式：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$&#123;file#*/&#125;</span>：拿掉第一条 / 及其左边的字符串：dir1/dir2/dir3/my.file.txt </span><br><span class="line"><span class="variable">$&#123;file##*/&#125;</span>：拿掉最后一条 / 及其左边的字符串：my.file.txt </span><br><span class="line"><span class="variable">$&#123;file#*.&#125;</span>：拿掉第一个 . 及其左边的字符串：file.txt </span><br><span class="line"><span class="variable">$&#123;file##*.&#125;</span>：拿掉最后一个 . 及其左边的字符串：txt </span><br><span class="line"><span class="variable">$&#123;file%/*&#125;</span>：拿掉最后条 / 及其右边的字符串：/dir1/dir2/dir3 </span><br><span class="line"><span class="variable">$&#123;file%%/*&#125;</span>：拿掉第一条 / 及其右边的字符串：(空值) </span><br><span class="line"><span class="variable">$&#123;file%.*&#125;</span>：拿掉最后一个 . 及其右边的字符串：/dir1/dir2/dir3/my.file </span><br><span class="line"><span class="variable">$&#123;file%%.*&#125;</span>：拿掉第一个 . 及其右边的字符串：/dir1/dir2/dir3/my</span><br></pre></td></tr></table></figure><h4 id="记忆的方法："><a href="#记忆的方法：" class="headerlink" title="记忆的方法："></a>记忆的方法：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 是去掉左边(在鉴盘上 # 在 $ 之左边) </span><br><span class="line">% 是去掉右边(在鉴盘上 % 在 $ 之右边) </span><br><span class="line">单一符号是最小匹配﹔两个符号是最大匹配。</span><br></pre></td></tr></table></figure><h4 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$&#123;file:0:5&#125;</span>：提取最左边的 5 个字节：/dir1 </span><br><span class="line"><span class="variable">$&#123;file:5:5&#125;</span>：提取第 5 个字节右边的连续 5 个字节：/dir2 </span><br><span class="line"></span><br><span class="line">我们也可以对变量值里的字符串作替换： </span><br><span class="line"><span class="variable">$&#123;file/dir/path&#125;</span>：将第一个 dir 提换为 path：/path1/dir2/dir3/my.file.txt </span><br><span class="line"><span class="variable">$&#123;file//dir/path&#125;</span>：将全部 dir 提换为 path：/path1/path2/path3/my.file.txt</span><br><span class="line"></span><br><span class="line">利用 <span class="variable">$&#123; &#125;</span> 还可针对不同的变量状态赋值(没设定、空值、非空值)： </span><br><span class="line"><span class="variable">$&#123;file-my.file.txt&#125;</span> ：假如 <span class="variable">$file</span> 为空值，则使用 my.file.txt 作默认值。(保留没设定及非空值) </span><br><span class="line"><span class="variable">$&#123;file:-my.file.txt&#125;</span> ：假如 <span class="variable">$file</span> 没有设定或为空值，则使用 my.file.txt 作默认值。 (保留非空值) </span><br><span class="line"><span class="variable">$&#123;file+my.file.txt&#125;</span> ：不管 <span class="variable">$file</span> 为何值，均使用 my.file.txt 作默认值。 (不保留任何值) </span><br><span class="line"><span class="variable">$&#123;file:+my.file.txt&#125;</span> ：除非 <span class="variable">$file</span> 为空值，否则使用 my.file.txt 作默认值。 (保留空值) </span><br><span class="line"><span class="variable">$&#123;file=my.file.txt&#125;</span> ：若 <span class="variable">$file</span> 没设定，则使用 my.file.txt 作默认值，同时将 <span class="variable">$file</span> 定义为非空值。 (保留空值及非空值) </span><br><span class="line"><span class="variable">$&#123;file:=my.file.txt&#125;</span> ：若 <span class="variable">$file</span> 没设定或为空值，则使用 my.file.txt 作默认值，同时将 <span class="variable">$file</span> 定义为非空值。 (保留非空值) </span><br><span class="line"><span class="variable">$&#123;file?my.file.txt&#125;</span> ：若 <span class="variable">$file</span> 没设定，则将 my.file.txt 输出至 STDERR。 (保留空值及非空值)) </span><br><span class="line"><span class="variable">$&#123;file:?my.file.txt&#125;</span> ：若 <span class="variable">$file</span> 没设定或为空值，则将 my.file.txt 输出至 STDERR。 (保留非空值) </span><br><span class="line"></span><br><span class="line">还有，<span class="variable">$&#123;#var&#125;</span> 可计算出变量值的长度： </span><br><span class="line"><span class="variable">$&#123;#file&#125;</span> 可得到 27 ，因为 /dir1/dir2/dir3/my.file.txt 刚好是 27 个字节...</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Shell </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Shell </tag>
            
            <tag> 提取字符串 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>.gitignore设置跟踪忽略文件夹中文件</title>
      <link href="/2019/10/19/gitignore%E8%AE%BE%E7%BD%AE%E8%B7%9F%E8%B8%AA%E5%BF%BD%E7%95%A5%E6%96%87%E4%BB%B6%E5%A4%B9%E4%B8%AD%E6%96%87%E4%BB%B6.html"/>
      <url>/2019/10/19/gitignore%E8%AE%BE%E7%BD%AE%E8%B7%9F%E8%B8%AA%E5%BF%BD%E7%95%A5%E6%96%87%E4%BB%B6%E5%A4%B9%E4%B8%AD%E6%96%87%E4%BB%B6.html</url>
      
        <content type="html"><![CDATA[<h4 id="常用规则"><a href="#常用规则" class="headerlink" title="常用规则"></a>常用规则</h4><p> <img src="https://s2.ax1x.com/2019/10/19/KmL010.png" alt="常用规则"><br><strong>注意：</strong>如果你创建.gitignore文件之前就push了某一文件，那么即使你在.gitignore文件中写入过滤该文件的规则，该规则也不会起作用，git仍然会对该文件进行版本管理。</p><h4 id="配置语法"><a href="#配置语法" class="headerlink" title="配置语法"></a>配置语法</h4><ul><li>以斜杠“/”开头表示目录；</li><li>以星号“*”通配多个字符；</li><li>以问号“?”通配单个字符</li><li>以方括号“[]”包含单个字符的匹配列表；</li><li>以叹号“!”表示不忽略(跟踪)匹配到的文件或目录。</li></ul><p><strong>注意：</strong> git 对于 .gitignore配置文件是按行从上到下进行规则匹配的</p><h4 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h4><ol><li>执行*[Rr]elease/*，忽略根目录下符合条件的文件夹下的所有文件</li><li>执行!<em>[Rr]elease/</em>.txt，追踪根目录下符合条件的文件夹下的txt文件</li><li>执行!*[Rr]elease/files/，追踪根目录下符合条件的文件夹下的files文件夹</li><li>执行*[Rr]elease/files/*，忽略files文件夹下的所有文件</li><li>执行!<em>[Rr]elease/files/</em>.txt，追踪files文件夹下的txt文件</li></ol><p>原文链接：<a href="https://blog.csdn.net/u011475134/article/details/71521725" target="_blank" rel="noopener">https://blog.csdn.net/u011475134/article/details/71521725</a></p>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git忽略文件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git基本操作和错误</title>
      <link href="/2019/10/19/Git%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C%E5%92%8C%E9%94%99%E8%AF%AF.html"/>
      <url>/2019/10/19/Git%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C%E5%92%8C%E9%94%99%E8%AF%AF.html</url>
      
        <content type="html"><![CDATA[<h3 id="本地创建仓库操作"><a href="#本地创建仓库操作" class="headerlink" title="本地创建仓库操作"></a>本地创建仓库操作</h3><h4 id="创建本地仓库"><a href="#创建本地仓库" class="headerlink" title="创建本地仓库"></a>创建本地仓库</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure><h4 id="将文件添加进Git"><a href="#将文件添加进Git" class="headerlink" title="将文件添加进Git"></a>将文件添加进Git</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git add 文件名  </span><br><span class="line">git add . <span class="comment">#将所有的文件全部添加到Git</span></span><br></pre></td></tr></table></figure><h4 id="提交"><a href="#提交" class="headerlink" title="提交"></a>提交</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m <span class="string">"描述信息"</span></span><br></pre></td></tr></table></figure><h4 id="删除文件或文件夹"><a href="#删除文件或文件夹" class="headerlink" title="删除文件或文件夹"></a>删除文件或文件夹</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git rm -r --cached target              <span class="comment"># 删除target文件夹</span></span><br><span class="line">git commit -m <span class="string">'删除了target'</span>        <span class="comment"># 提交,添加操作说明</span></span><br></pre></td></tr></table></figure><h3 id="Git远程仓库操作"><a href="#Git远程仓库操作" class="headerlink" title="Git远程仓库操作"></a>Git远程仓库操作</h3><h4 id="创建SSH-Key"><a href="#创建SSH-Key" class="headerlink" title="创建SSH Key"></a>创建SSH Key</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">"youremail@example.com"</span></span><br></pre></td></tr></table></figure><h4 id="查看远程仓库"><a href="#查看远程仓库" class="headerlink" title="查看远程仓库"></a>查看远程仓库</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote -v</span><br></pre></td></tr></table></figure><h4 id="添加远程仓库"><a href="#添加远程仓库" class="headerlink" title="添加远程仓库"></a>添加远程仓库</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#git remote add 名称 远程仓库地址</span></span><br><span class="line">git remote add origin git@git.coding.net:pgw1314/shells.git</span><br></pre></td></tr></table></figure><h4 id="推送的远程仓库"><a href="#推送的远程仓库" class="headerlink" title="推送的远程仓库"></a>推送的远程仓库</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#git push 仓库名  分支</span></span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure><h4 id="更新远程仓库"><a href="#更新远程仓库" class="headerlink" title="更新远程仓库"></a>更新远程仓库</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#git pull 仓库名 分支</span></span><br><span class="line">git pull origin master</span><br></pre></td></tr></table></figure><h4 id="删除远程仓库"><a href="#删除远程仓库" class="headerlink" title="删除远程仓库"></a>删除远程仓库</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote remove 仓库名称</span><br></pre></td></tr></table></figure><h3 id="Git常见错误"><a href="#Git常见错误" class="headerlink" title="Git常见错误"></a>Git常见错误</h3><h5 id="版本冲突"><a href="#版本冲突" class="headerlink" title="版本冲突"></a>版本冲突</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">error: failed to push some refs to <span class="string">'git@git.coding.net:xx/xx.git'</span></span><br><span class="line"><span class="comment">#解决办法</span></span><br><span class="line">git pull --rebase origin master</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git基本操作 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Chrome浏览器原生滚动截图</title>
      <link href="/2019/10/19/Chrome%E6%B5%8F%E8%A7%88%E5%99%A8%E6%BB%9A%E5%8A%A8%E6%88%AA%E5%9B%BE.html"/>
      <url>/2019/10/19/Chrome%E6%B5%8F%E8%A7%88%E5%99%A8%E6%BB%9A%E5%8A%A8%E6%88%AA%E5%9B%BE.html</url>
      
        <content type="html"><![CDATA[<ol><li>Ctrl+Shift+I（Windows）/F12 或者 Alt+Command+I（Mac）调出开发者工具</li><li>Ctrl+Shift +P(Windows) 或 Command+Shift+P(Mac)来打开命令行</li><li>在命令行中输入”Screen”，可以看到三个选项</li></ol><blockquote><p>整个网页（Capture full size screenshot）<br>节点网页（Capture node screenshot）<br>当前屏幕（Capture screenshot）</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Chrome </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Chrome </tag>
            
            <tag> Mac </tag>
            
            <tag> 屏幕截图 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>删除Chrome地址栏记录的方法</title>
      <link href="/2019/10/19/%E5%88%A0%E9%99%A4Chrome%E5%9C%B0%E5%9D%80%E6%A0%8F%E8%AE%B0%E5%BD%95%E7%9A%84%E6%96%B9%E6%B3%95.html"/>
      <url>/2019/10/19/%E5%88%A0%E9%99%A4Chrome%E5%9C%B0%E5%9D%80%E6%A0%8F%E8%AE%B0%E5%BD%95%E7%9A%84%E6%96%B9%E6%B3%95.html</url>
      
        <content type="html"><![CDATA[<p>Mac快捷键：Shift + fn + Delete<br>Windows快捷键：Shift + Delete</p>]]></content>
      
      
      <categories>
          
          <category> Mac </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Chrome </tag>
            
            <tag> Mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/10/19/hello-world.html"/>
      <url>/2019/10/19/hello-world.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
